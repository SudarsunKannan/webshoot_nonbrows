cscope 15 $HOME/jan12/CLIENT/src/native_client/tests/browser_startup_time/webshoot_nonbrowser               0000777955
	@IOtimer.c

1 
	~<°dio.h
>

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<time.h
>

5 
	~<sys/time.h
>

6 
	~<±hªad.h
>

7 
	~"IOtimî.h
"

8 
	~"gâhªad.h
"

9 
	~<¥oc/ªad¥oc.h
>

13 #ifde‡
SPIN_LOCK


14 
	~"gâhªad_•ölocks.h
"

17 
timevÆ
 
	g°¨tw
, 
	gídw
;

18 
timevÆ
 
	g°¨å
, 
	gídr
;

20 #ifde‡
SPIN_LOCK


21 
gt_•ölock_t
 
	g•ölock_r
, 
	g•ölock_w
;

24 
	glock_¸óãd
 = 0;

25 
	gtŸÆ_size
;

27 
	gtŸÆ_wrôe_size
;

28 
	gtŸÆ_ªad_size
 ;

29 
	gtŸ_mem_ußge
 =0;

30 
	gßm∂e_˙t
 = 0;

33 
±hªad_muãx_t
 
	gmuãx_r
 = 
PTHREAD_MUTEX_INITIALIZER
;

34 
±hªad_muãx_t
 
	gmuãx_w
 = 
PTHREAD_MUTEX_INITIALIZER
;

36 #ifde‡
SPIN_LOCK


38 
	$öôülize_timî
() {

40 
	`gt_•ölock_öô
(&
•ölock_r
);

42 
	}
}

45 
	$IOtimî_˛ór
() {

47 #ifde‡
SPIN_LOCK


48 
	`öôülize_timî
();

51 
tŸÆ_ªad_time
 = 0;

52 
tŸÆ_wrôe_time
 = 0;

53 
tŸÆ_ªad_size
 = 0;

54 
tŸÆ_wrôe_size
 = 0;

55 
tŸ_mem_ußge
 = 0;

56 
	`gë_¥oc_ußge
();

57 
	}
}

60 
	$simuœti⁄_time
(
timevÆ
 
°¨t
, timevÆ 
íd
 )

62 
cuºít_time
;

64 
cuºít_time
 = ((
íd
.
tv_£c
 * 1000000 +Énd.
tv_u£c
) -

65 (
°¨t
.
tv_£c
*1000000 + sèπ.
tv_u£c
));

67  
cuºít_time
;

68 
	}
}

71 
size_t
 
	$_‰ód
 ( * 
±r
, 
size_t
 
size
, size_à
cou¡
, 
FILE
 * 
°ªam
 ){

73 
size_t
 
Àn
 = 0;

75 
	`gëtimeofday
(&
°¨å
, 
NULL
);

77 
Àn
 = 
	`‰ód
 (
±r
, 
size
, 
cou¡
, 
°ªam
 );

79 
	`gëtimeofday
(&
ídr
, 
NULL
);

81 
tŸÆ_ªad_time
 +
	`simuœti⁄_time
(
°¨å
, 
ídr
 );

83 
tŸÆ_ªad_size
 =ÅŸÆ_ªad_sizê+ 
Àn
;

85 
	`gë_¥oc_ußge
();

87  
Àn
;

89 
	}
}

94 * 
	$_fgës
–* 
°r
, 
size_t
 
num
, 
FILE
 * 
°ªam
 ) {

96 *
±r
 = 
NULL
;

98 #ifde‡
SPIN_LOCK


99 
	`gt_•ö_lock
(&
•ölock_r
);

102 
	`gëtimeofday
(&
°¨å
, 
NULL
);

104 
±r
 = 
	`fgës
(
°r
, 
num
, 
°ªam
 );

106 
	`gëtimeofday
(&
ídr
, 
NULL
);

108 
tŸÆ_ªad_time
 +
	`simuœti⁄_time
(
°¨å
, 
ídr
 );

110 
tŸÆ_ªad_size
 =ÅŸÆ_ªad_sizê+ 
	`°æí
(
°r
);;

112 #ifde‡
SPIN_LOCK


113 
	`gt_•ö_u∆ock
(&
•ölock_r
);

116 
	`gë_¥oc_ußge
();

119  
±r
;

120 
	}
}

122 
	$_Âuts
 ( * 
°r
, 
FILE
 * 
°ªam
 ) {

125 #ifde‡
SPIN_LOCK


126 
	`gt_•ö_lock
(&
•ölock_w
);

129 
	`gëtimeofday
(&
°¨tw
, 
NULL
);

131 
	`Âuts
(
°r
, 
°ªam
 );

133 
	`gëtimeofday
(&
ídw
, 
NULL
);

135 
tŸÆ_wrôe_time
 +
	`simuœti⁄_time
(
°¨tw
, 
ídw
 );

139 
tŸÆ_wrôe_size
 =ÅŸÆ_wrôe_sizê+ 
	`°æí
(
°r
);

141 #ifde‡
SPIN_LOCK


142 
	`gt_•ö_u∆ock
(&
•ölock_w
);

145 
	`gë_¥oc_ußge
();

148 
	}
}

152 
size_t
 
	$_fwrôe
 ( * 
±r
, 
size_t
 
size
, size_à
cou¡
, 
FILE
 * 
°ªam
 ){

155 
size_t
 
byãs
 = 0;

157 
	`gëtimeofday
(&
°¨tw
, 
NULL
);

159 
byãs
 = 
	`fwrôe
 (
±r
, 
size
, 
cou¡
, 
°ªam
 );

161 
	`gëtimeofday
(&
ídw
, 
NULL
);

163 
tŸÆ_wrôe_time
 +
	`simuœti⁄_time
(
°¨tw
, 
ídw
 );

165 
tŸÆ_wrôe_size
 =ÅŸÆ_wrôe_sizê+ 
size
;

167 
	`gë_¥oc_ußge
();

169  
byãs
;

171 
	}
}

173 
ssize_t
 
	$_wrôe
(
fd
, *
±r
, 
size_t
 
size
){

175 
ssize_t
 
byãs
 = 0;

177 
	`gëtimeofday
(&
°¨tw
, 
NULL
);

179 
byãs
 = 
	`wrôe
(
fd
, 
±r
, 
size
);

181 
	`gëtimeofday
(&
ídw
, 
NULL
);

183 
tŸÆ_wrôe_time
 +
	`simuœti⁄_time
(
°¨tw
, 
ídw
 );

185 
tŸÆ_wrôe_size
 =ÅŸÆ_wrôe_sizê+ 
size
;

187 
	`gë_¥oc_ußge
();

189  
byãs
;

191 
	}
}

194 * 
	$_mÆloc
(
size_t
 
size
) {

196 *
±r
 = 
NULL
;

198 
±r
 = 
	`mÆloc
(
size
);

200 
	`gë_¥oc_ußge
();

202  
±r
;

204 
	}
}

206 
	$¥öt_tŸÆ_wrôe_time
(){

208 
avg_mem_usg
 = 0;

210 
	`Ârötf
(
°dout
,"Wrôêtimê%ld \n",
tŸÆ_wrôe_time
);

211 
	`Ârötf
(
°dout
,"RódÅimê%ld \n",
tŸÆ_ªad_time
);

212 
	`Ârötf
(
°dout
,"Wrôêsizê%ld \n", 
tŸÆ_wrôe_size
);

213 
	`Ârötf
(
°dout
,"Ród sizê%ld \n", 
tŸÆ_ªad_size
);

216 
	`Ârötf
(
°dout
,"avg_mem_usg %ld \n", 
tŸ_mem_ußge
);

218 
	}
}

220 
	$gë_¥oc_ußge
() {

229 
	}
}

	@IOtimer.h

1 #i‚de‡
IOtimî_H_


2 
	#IOtimî_H_


	)

6 
	~<°dio.h
>

7 
	~<°dlib.h
>

9 #ifde‡
__˝lu•lus


15 
size_t
 
_fwrôe
 (* 
±r
, size_à
size
, size_à
cou¡
, 
FILE
 * 
°ªam
 );

16 
size_t
 
_‰ód
 ( * 
±r
, size_à
size
, size_à
cou¡
, 
FILE
 * 
°ªam
 );

17 
ssize_t
 
_wrôe
(
fd
, *
±r
, 
size_t
 
size
);

18 * 
_mÆloc
(
size_t
 
size
);

21 
IOtimî_˛ór
();

23 
¥öt_tŸÆ_wrôe_time
();

25 
gë_¥oc_ußge
();

27 
tŸÆ_wrôe_time
;

28 
tŸÆ_ªad_time
;

30 #ifde‡
__˝lu•lus


	@bench-framework.c

1 
	~<as£π.h
>

2 
	~<m©h.h
>

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

5 
	~<°rög.h
>

6 
	~<sys/time.h
>

7 
	~"bích-‰amew‹k.h
"

8 
	~"bích°rögio.h
"

9 
	~"nvmÆloc_wøp.h
"

10 
	~"¥oc°©.h
"

11 
	~"IOtimî.h
"

13 
	#REPEATED_RUNS
 4

	)

15 c⁄° 
	gkMöBíchRu¡ime
 = 1000000;

16 
	gbíchm¨k_cou¡
 = 0;

17 
	g°¨ãd
 = 0;

18 
bích_öfo
 
	gbích_öfo_li°
[
MAX_BENCHMARKS
];

19 
run_d©a
 
	gbích_run_d©a
[
MAX_BENCHMARKS
];

21 
	erun_modñ_t
 { 
	mkRunModñRïóãd
, 
	mkRunModñOn˚
 };

22 
run_modñ_t
 
	grun_modñ
;

24 
	$Regi°îBíchm¨k
(*
«me
, 
bích_fun˘i⁄
 
íåy
, 
∑øm
, 
time_ªf
, bích_fun˘i⁄ 
£tup
, bích_fun˘i⁄ 
ã¨down
) {

25 i‡(
bíchm¨k_cou¡
 =
MAX_BENCHMARKS
) {

27 
	`exô
(1);

29 
bích_öfo_li°
[
bíchm¨k_cou¡
].
«me
 =Çame;

30 
bích_öfo_li°
[
bíchm¨k_cou¡
].
run
 = 
íåy
;

31 
bích_öfo_li°
[
bíchm¨k_cou¡
].
£tup
 = setup;

32 
bích_öfo_li°
[
bíchm¨k_cou¡
].
ã¨down
 =Åeardown;

33 
bích_öfo_li°
[
bíchm¨k_cou¡
].
time_ªf
 =Åime_ref;

34 
bích_öfo_li°
[
bíchm¨k_cou¡
].
∑øm
 =Öaram;

35 
bíchm¨k_cou¡
++;

36 
	}
}

38 
	$CÀ¨Bíchm¨ks
() {

39 
i
 = 0; i < 
bíchm¨k_cou¡
; i++Ë
	`nv_‰ì
(
bích_öfo_li°
[i].
«me
);

40 
bíchm¨k_cou¡
 = 0;

41 
	}
}

43 
	$RunO√
(
bích_öfo
 *
bích
, 
run_d©a
 *
d©a
) {

44 
timevÆ
 
°¨t
, 
íd
;

45 
diff
;

46 i‡(
bích
->
£tup
Ëbích->
	`£tup
(bích->
∑øm
);

47 i‡(
run_modñ
 =
kRunModñRïóãd
) {

50 
bích
->
	`run
(bích->
∑øm
);

52 
	`gëtimeofday
(&
°¨t
, 
NULL
);

53 i‡(
run_modñ
 =
kRunModñRïóãd
) {

54 
d©a
->
runs
 = 0; d©a->
ñ≠£d
 < 
kMöBíchRu¡ime
 || d©a->run†< 
REPEATED_RUNS
;

55 
d©a
->
runs
++) {

56 
	`as£π
(
bích
->
	`run
(bích->
∑øm
) == 0);

57 
	`gëtimeofday
(&
íd
, 
NULL
);

58 
diff
 = (
íd
.
tv_£c
 - 
°¨t
.tv_sec) * 1000000 +

59 (
íd
.
tv_u£c
 - 
°¨t
.tv_usec);

60 
d©a
->
ñ≠£d
 = 
diff
;

63 
	`as£π
(
bích
->
	`run
(bích->
∑øm
) == 0);

64 
	`gëtimeofday
(&
íd
, 
NULL
);

65 
diff
 = (
íd
.
tv_£c
 - 
°¨t
.tv_sec) * 1000000 +

66 (
íd
.
tv_u£c
 - 
°¨t
.tv_usec);

67 
d©a
->
ñ≠£d
 = 
diff
;

68 
d©a
->
runs
 = 1;

70 i‡(
bích
->
ã¨down
Ëbích->
	`ã¨down
(bích->
∑øm
);

72 
	`¥öt_tŸÆ_wrôe_time
();

73 
	`IOtimî_˛ór
();

76 
	}
}

78 
	$RunAŒ
() {

79 
i
;

80 
i
 = 0; i < 
bíchm¨k_cou¡
; i++) {

81 
run_d©a
 *
rd
 = &
bích_run_d©a
[
i
];

82 
bích_öfo
 *
bi
 = &
bích_öfo_li°
[
i
];

83 
u£c_≥r_run
;

84 
	`¥ötf
("Ru¬ög %s\n", 
bi
->
«me
);

85 ++
°¨ãd
;

87 
	`RunO√
(
bi
, 
rd
);

88 
u£c_≥r_run
 = ()
rd
->
ñ≠£d
 / (Ïd->
runs
;

89 
rd
->
sc‹e
 = 100.0 * 
bi
->
time_ªf
 / 
u£c_≥r_run
;

90 
	`¥ötf
("u£c_≥r_ru¿%f\n", 
u£c_≥r_run
);

93 
°¨ãd
 = 0;

94 
	}
}

96 
	$PrötSc‹es
() {

97 
i
;

98 
i
 = 0; i < 
bíchm¨k_cou¡
; i++) {

99 
	`¥ötf
("Benchmark %s: usec %d, iters %d, usec/run %d score %.2fÑuns %d\n",

100 
bích_öfo_li°
[
i
].
«me
,

101 
bích_run_d©a
[
i
].
ñ≠£d
,

102 
bích_run_d©a
[
i
].
runs
,

103 
bích_run_d©a
[
i
].
ñ≠£d
 / bích_run_d©a[i].
runs
,

104 
bích_run_d©a
[
i
].
sc‹e
,

105 
bích_run_d©a
[
i
].
runs
);

107 
	}
}

109 
	$GeomëricMón
() {

110 
i
;

111 
log_tŸÆ
 = 0.0;

112 
i
 = 0; i < 
bíchm¨k_cou¡
; i++) {

113 
log_tŸÆ
 +
	`log
(
bích_run_d©a
[
i
].
sc‹e
);

115  
	`pow
(
M_E
, 
log_tŸÆ
 / 
bíchm¨k_cou¡
);

116 
	}
}

118 
	$SëupSmÆlBíchm¨ks
() {

131 #ifde‡
FASTA_DELETE_ME


132 
	`Regi°îBíchm¨k
(
	`°rdup
("Fa°a"), 
run_Á°a
, 10000, 51667385, 
NULL
, NULL);

134 
	`Regi°îBíchm¨k
(
	`°rdup
("Revcomp"), 
run_ªvcomp
, 0, 23542857, 
NULL
, NULL);

145 
run_modñ
 = 
kRunModñOn˚
;

146 
	}
}

148 
	$SëupL¨geBíchm¨ks
() {

161 
	`Regi°îBíchm¨k
(
	`°rdup
("Fa°a"), 
run_Á°a
, 20000000, 91667385, 
NULL
, NULL);

172 
run_modñ
 = 
kRunModñOn˚
;

174 
	}
}

178 
	$‰amew‹k_maö
(
bíchm¨k_size_t
 
size
) {

179 
sc‹e
;

180 
	`mem£t
(
bích_öfo_li°
, 0, (bench_info_list));

181 
	`mem£t
(
bích_run_d©a
, 0, (bench_run_data));

183 #ifde‡
ARRAYFILE


184 
¨øyfûe_°dout
 = 
	`¨øyfûe_f›í
("arrayfile", "w");

185 
	`as£π
(
¨øyfûe_°dout
);

188 i‡(
size
 =
kBíchm¨kSmÆl
) {

189 
	`SëupSmÆlBíchm¨ks
();

191 
	`SëupL¨geBíchm¨ks
();

194 
Á°a_10k_ªf_ouçut_Àn
 = 
	`°æí
(
Á°a_10k_ªf_ouçut
);

196 
	`¥ötf
("%d bíchm¨k†ªgi°îed\n", 
bíchm¨k_cou¡
);

197 
	`RunAŒ
();

198 
	`PrötSc‹es
();

199 
sc‹e
 = (Ë
	`GeomëricMón
();

200 #ifde‡
ARRAYFILE


201 
	`¨øyfûe_f˛o£
(
¨øyfûe_°dout
);

202 
¨øyfûe_°dout
 = 
NULL
;

204 
	`CÀ¨Bíchm¨ks
();

206 
	`¥öt_tŸÆ_°©s
();

208 
	`¥ötf
("Aggªg©êsc‹e: %d\n", 
sc‹e
);

210  
sc‹e
;

211 
	}
}

229 
	$maö
() {

232 
	`‰amew‹k_maö
(
kBíchm¨kL¨ge
);

233 
	`¥öt_°©
();

236 
	}
}

	@bench-framework.h

1 #i‚de‡
BENCHFRAMEWORK_H


2 
	#BENCHFRAMEWORK_H


	)

4 #ifde‡
__˝lu•lus


8 
	#MAX_BENCHMARKS
 4

	)

10 (*
bích_fun˘i⁄
)();

11 (*
ªp‹t_fun˘i⁄
)(*, ...);

13 
	s_bích_öfo
 {

14 *
«me
;

15 
bích_fun˘i⁄
 
run
;

16 
bích_fun˘i⁄
 
£tup
;

17 
bích_fun˘i⁄
 
ã¨down
;

18 
time_ªf
;

19 
∑øm
;

20 } 
	tbích_öfo
;

23 
runs
;

24 
ñ≠£d
;

25 
sc‹e
;

26 } 
	trun_d©a
;

28 
Regi°îBíchm¨k
(*
«me
, 
bích_fun˘i⁄
 
íåy
, 
∑øm
, 
time_ªf
, bích_fun˘i⁄ 
£tup
, bích_fun˘i⁄ 
ã¨down
);

30 c⁄° *
Á°a_10k_ªf_ouçut
;

31 
Á°a_10k_ªf_ouçut_Àn
;

32 *
Á°a_ouçut
;

33 
Á°a_ouçut_Àn
;

36 
run_Á¬kuch
(
p
);

37 
run_Á°a
(
p
);

38 
run_ªvcomp
(
ign‹ed
);

39 
run_bö¨yåìs
(
p
);

40 
run_knu˛eŸide
(
ign‹ed
);

41 
run_nbody
(
p
);

42 
run_pidigôs
(
p
);

43 
run_•e˘ø ‹m
(
p
);

45 
run_rich¨ds
(
p
);

46 
run_dñèblue
(
p
);

47 
run_f·
(
p
);

49 
£tup_f·
(
p
);

50 
ã¨down_f·
(
p
);

52 
	ebíchm¨k_size_t
 { 
	gkBíchm¨kSmÆl
, 
	gkBíchm¨kL¨ge
 };

54 
‰amew‹k_maö
(
bíchm¨k_size_t
 
size
);

55 
Rï‹tSètus
(c⁄° *
f‹m©
, ...);

59 #ifde‡
__˝lu•lus


	@bench-framework_file.c

1 
	~<as£π.h
>

2 
	~<m©h.h
>

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

5 
	~<°rög.h
>

6 
	~<sys/time.h
>

7 
	~"bích-‰amew‹k.h
"

8 
	~"bích°rögio.h
"

9 
	~"nvmÆloc_wøp.h
"

10 
	~"¥oc°©.h
"

11 
	~"IOtimî.h
"

13 
	#REPEATED_RUNS
 4

	)

15 c⁄° 
	gkMöBíchRu¡ime
 = 1000000;

16 
	gbíchm¨k_cou¡
 = 0;

17 
	g°¨ãd
 = 0;

18 
bích_öfo
 
	gbích_öfo_li°
[
MAX_BENCHMARKS
];

19 
run_d©a
 
	gbích_run_d©a
[
MAX_BENCHMARKS
];

21 
	erun_modñ_t
 { 
	mkRunModñRïóãd
, 
	mkRunModñOn˚
 };

22 
run_modñ_t
 
	grun_modñ
;

24 
	$Regi°îBíchm¨k
(*
«me
, 
bích_fun˘i⁄
 
íåy
, 
∑øm
, 
time_ªf
, bích_fun˘i⁄ 
£tup
, bích_fun˘i⁄ 
ã¨down
) {

25 i‡(
bíchm¨k_cou¡
 =
MAX_BENCHMARKS
) {

27 
	`exô
(1);

29 
bích_öfo_li°
[
bíchm¨k_cou¡
].
«me
 =Çame;

30 
bích_öfo_li°
[
bíchm¨k_cou¡
].
run
 = 
íåy
;

31 
bích_öfo_li°
[
bíchm¨k_cou¡
].
£tup
 = setup;

32 
bích_öfo_li°
[
bíchm¨k_cou¡
].
ã¨down
 =Åeardown;

33 
bích_öfo_li°
[
bíchm¨k_cou¡
].
time_ªf
 =Åime_ref;

34 
bích_öfo_li°
[
bíchm¨k_cou¡
].
∑øm
 =Öaram;

35 
bíchm¨k_cou¡
++;

36 
	}
}

38 
	$CÀ¨Bíchm¨ks
() {

39 
i
 = 0; i < 
bíchm¨k_cou¡
; i++Ë
	`nv_‰ì
(
bích_öfo_li°
[i].
«me
);

40 
bíchm¨k_cou¡
 = 0;

41 
	}
}

43 
	$RunO√
(
bích_öfo
 *
bích
, 
run_d©a
 *
d©a
) {

44 
timevÆ
 
°¨t
, 
íd
;

45 
diff
;

46 i‡(
bích
->
£tup
Ëbích->
	`£tup
(bích->
∑øm
);

47 i‡(
run_modñ
 =
kRunModñRïóãd
) {

50 
bích
->
	`run
(bích->
∑øm
);

52 
	`gëtimeofday
(&
°¨t
, 
NULL
);

53 i‡(
run_modñ
 =
kRunModñRïóãd
) {

54 
d©a
->
runs
 = 0; d©a->
ñ≠£d
 < 
kMöBíchRu¡ime
 || d©a->run†< 
REPEATED_RUNS
;

55 
d©a
->
runs
++) {

57 
	`IOtimî_˛ór
();

59 
	`as£π
(
bích
->
	`run
(bích->
∑øm
) == 0);

61 
	`gëtimeofday
(&
íd
, 
NULL
);

65 
diff
 = (
íd
.
tv_£c
 - 
°¨t
.tv_sec) * 1000000 +

66 (
íd
.
tv_u£c
 - 
°¨t
.tv_usec);

67 
d©a
->
ñ≠£d
 = 
diff
;

70 
	`as£π
(
bích
->
	`run
(bích->
∑øm
) == 0);

71 
	`gëtimeofday
(&
íd
, 
NULL
);

72 
diff
 = (
íd
.
tv_£c
 - 
°¨t
.tv_sec) * 1000000 +

73 (
íd
.
tv_u£c
 - 
°¨t
.tv_usec);

74 
d©a
->
ñ≠£d
 = 
diff
;

75 
d©a
->
runs
 = 1;

77 i‡(
bích
->
ã¨down
Ëbích->
	`ã¨down
(bích->
∑øm
);

79 
	`¥öt_tŸÆ_wrôe_time
();

80 
	`IOtimî_˛ór
();

83 
	}
}

85 
	$RunAŒ
() {

86 
i
;

87 
i
 = 0; i < 
bíchm¨k_cou¡
; i++) {

88 
run_d©a
 *
rd
 = &
bích_run_d©a
[
i
];

89 
bích_öfo
 *
bi
 = &
bích_öfo_li°
[
i
];

90 
u£c_≥r_run
;

91 
	`¥ötf
("Ru¬ög %s\n", 
bi
->
«me
);

92 ++
°¨ãd
;

94 
	`RunO√
(
bi
, 
rd
);

95 
u£c_≥r_run
 = ()
rd
->
ñ≠£d
 / (Ïd->
runs
;

96 
rd
->
sc‹e
 = 100.0 * 
bi
->
time_ªf
 / 
u£c_≥r_run
;

97 
	`¥ötf
("u£c_≥r_ru¿%f\n", 
u£c_≥r_run
);

100 
°¨ãd
 = 0;

101 
	}
}

103 
	$PrötSc‹es
() {

104 
i
;

105 
i
 = 0; i < 
bíchm¨k_cou¡
; i++) {

106 
	`¥ötf
("Benchmark %s: usec %d, iters %d, usec/run %d score %.2fÑuns %d\n",

107 
bích_öfo_li°
[
i
].
«me
,

108 
bích_run_d©a
[
i
].
ñ≠£d
,

109 
bích_run_d©a
[
i
].
runs
,

110 
bích_run_d©a
[
i
].
ñ≠£d
 / bích_run_d©a[i].
runs
,

111 
bích_run_d©a
[
i
].
sc‹e
,

112 
bích_run_d©a
[
i
].
runs
);

114 
	}
}

116 
	$GeomëricMón
() {

117 
i
;

118 
log_tŸÆ
 = 0.0;

119 
i
 = 0; i < 
bíchm¨k_cou¡
; i++) {

120 
log_tŸÆ
 +
	`log
(
bích_run_d©a
[
i
].
sc‹e
);

122  
	`pow
(
M_E
, 
log_tŸÆ
 / 
bíchm¨k_cou¡
);

123 
	}
}

125 
	$SëupSmÆlBíchm¨ks
() {

126 
	`Regi°îBíchm¨k
(
	`°rdup
("Rich¨ds"), 
run_rich¨ds
, 10000, 2499257,

127 
NULL
, NULL);

138 
	`Regi°îBíchm¨k
(
	`°rdup
("Fa°a"), 
run_Á°a
, 300000, 51667385, 
NULL
, NULL);

139 
	`Regi°îBíchm¨k
(
	`°rdup
("Revcomp"), 
run_ªvcomp
, 0, 23542857, 
NULL
, NULL);

142 
	`Regi°îBíchm¨k
(
	`°rdup
("Knu˛eŸide"), 
run_knu˛eŸide
, 0, 433893130,

143 
NULL
, NULL);

149 
run_modñ
 = 
kRunModñOn˚
;

150 
	}
}

152 
	$SëupL¨geBíchm¨ks
() {

153 
	`Regi°îBíchm¨k
(
	`°rdup
("Rich¨ds"), 
run_rich¨ds
, 1000000, 2499257,

154 
NULL
, NULL);

164 
	`Regi°îBíchm¨k
(
	`°rdup
("Fa°a"), 
run_Á°a
, 9000000, 51667385, 
NULL
, NULL);

165 
	`Regi°îBíchm¨k
(
	`°rdup
("Revcomp"), 
run_ªvcomp
, 0, 23542857, 
NULL
, NULL);

168 
	`Regi°îBíchm¨k
(
	`°rdup
("Knu˛eŸide"), 
run_knu˛eŸide
, 0, 433893130,

169 
NULL
, NULL);

180 
run_modñ
 = 
kRunModñOn˚
;

182 
	}
}

186 
	$‰amew‹k_maö
(
bíchm¨k_size_t
 
size
) {

187 
sc‹e
;

188 
	`mem£t
(
bích_öfo_li°
, 0, (bench_info_list));

189 
	`mem£t
(
bích_run_d©a
, 0, (bench_run_data));

191 #ifde‡
ARRAYFILE


192 
¨øyfûe_°dout
 = 
	`¨øyfûe_f›í
("arrayfile", "w");

193 
	`as£π
(
¨øyfûe_°dout
);

196 i‡(
size
 =
kBíchm¨kSmÆl
) {

197 
	`SëupSmÆlBíchm¨ks
();

199 
	`SëupL¨geBíchm¨ks
();

202 
Á°a_10k_ªf_ouçut_Àn
 = 
	`°æí
(
Á°a_10k_ªf_ouçut
);

204 
	`¥ötf
("%d bíchm¨k†ªgi°îed\n", 
bíchm¨k_cou¡
);

205 
	`RunAŒ
();

206 
	`PrötSc‹es
();

207 
sc‹e
 = (Ë
	`GeomëricMón
();

208 #ifde‡
ARRAYFILE


209 
	`¨øyfûe_f˛o£
(
¨øyfûe_°dout
);

210 
¨øyfûe_°dout
 = 
NULL
;

212 
	`CÀ¨Bíchm¨ks
();

214 
	`¥öt_tŸÆ_°©s
();

217 
	`¥ötf
("Aggªg©êsc‹e: %d\n", 
sc‹e
);

219  
sc‹e
;

220 
	}
}

238 
	$maö
() {

240 
	`‰amew‹k_maö
(
kBíchm¨kSmÆl
);

242 
	`¥öt_°©
();

245 
	}
}

	@benchstringio.c

73 
	~<as£π.h
>

74 
	~<î∫o.h
>

75 
	~<°dio.h
>

76 
	~<°dlib.h
>

77 
	~<°döt.h
>

78 
	~<°rög.h
>

79 
	~<sys/ty≥s.h
>

80 
	~<sys/∑øm.h
>

81 
	~"bích°rögio.h
"

82 
	~"nvmÆloc_wøp.h
"

84 
	s°rögfûe_cookõ_°ru˘


86 *
	mbuf„r
;

87 
	mmybuf„r
;

88 
	mbömode
;

89 
size_t
 
	msize
;

90 
	mpos
;

91 
size_t
 
	mmaxpos
;

94 
°rögfûe_t
 *
	g°rögfûe_°dö
 = 
NULL
;

95 c⁄° 
size_t
 
	gkAºayfûeDeÁu…AŒoc
 = 4096;

96 
¨øyfûe_t
 *
	g¨øyfûe_°dout
;

98 
ssize_t


99 
	$°rögfûe_ªad
 (*
cookõ
, *
b
, 
size_t
 
s
)

101 
°rögfûe_t
 *
c
;

103 
c
 = (
°rögfûe_t
 *Ë
cookõ
;

105 i‡(
c
->
pos
 + 
s
 > c->
size
)

107 i‡((
size_t
Ë
c
->
pos
 =c->
size
)

109 
s
 = 
c
->
size
 - c->
pos
;

112 
	`mem˝y
 (
b
, &(
c
->
buf„r
[c->
pos
]), 
s
);

114 
c
->
pos
 +
s
;

115 i‡((
size_t
Ë
c
->
pos
 > c->
maxpos
)

116 
c
->
maxpos
 = c->
pos
;

118  
s
;

119 
	}
}

122 
ssize_t


123 
	$°rögfûe_wrôe
 (*
cookõ
, c⁄° *
b
, 
size_t
 
s
)

125 
°rögfûe_t
 *
c
;

126 
addnuŒc
;

128 
c
 = (
°rögfûe_t
 *Ë
cookõ
;

130 
addnuŒc
 = 
c
->
bömode
 =0 && (
s
 =0 || 
b
[s - 1] != '\0');

132 i‡(
c
->
pos
 + 
s
 + 
addnuŒc
 > c->
size
)

134 i‡((
size_t
Ë(
c
->
pos
 + 
addnuŒc
Ë=c->
size
)

136 
î∫o
 = 
ENOSPC
;

139 
s
 = 
c
->
size
 - c->
pos
 - 
addnuŒc
;

142 
	`mem˝y
 (&(
c
->
buf„r
[c->
pos
]), 
b
, 
s
);

144 
c
->
pos
 +
s
;

145 i‡((
size_t
Ë
c
->
pos
 > c->
maxpos
)

147 
c
->
maxpos
 = c->
pos
;

148 i‡(
addnuŒc
)

149 
c
->
buf„r
[c->
maxpos
] = '\0';

152  
s
;

153 
	}
}

157 
	$°rögfûe_£ek
 (*
cookõ
, *
p
, 
w
)

159 
≈
;

160 
°rögfûe_t
 *
c
;

162 
c
 = (
°rögfûe_t
 *Ë
cookõ
;

164 
w
)

166 
SEEK_SET
:

167 
≈
 = *
p
;

170 
SEEK_CUR
:

171 
≈
 = 
c
->
pos
 + *
p
;

174 
SEEK_END
:

175 
≈
 = (
c
->
bömode
 ? c->
size
 : c->
maxpos
Ë- *
p
;

182 i‡(
≈
 < 0 || (
size_t
Ë≈ > 
c
->
size
)

185 *
p
 = 
c
->
pos
 = 
≈
;

188 
	}
}

192 
	$°rögfûe_˛o£
 (*
cookõ
)

194 
°rögfûe_t
 *
c
;

196 
c
 = (
°rögfûe_t
 *Ë
cookõ
;

198 i‡(
c
->
mybuf„r
)

199 
	`nv_‰ì
 (
c
->
buf„r
);

200 
	`nv_‰ì
 (
c
);

203 
	}
}

206 
°rögfûe_t
 *

207 
	$°rögfûe_›í
 (*
buf
, 
size_t
 
Àn
, c⁄° *
mode
)

209 
°rögfûe_t
 *
c
;

211 i‡(
	`__buûtö_ex≥˘
 (
Àn
 == 0, 0))

213 
eövÆ
:

214 
î∫o
 = 
EINVAL
;

215  
NULL
;

218 
c
 = (
°rögfûe_t
 *Ë
	`Æloˇã_mem
 ( (stringfile_t));

219 i‡(
c
 =
NULL
)

220  
NULL
;

222 
c
->
mybuf„r
 = (
buf
 =
NULL
);

224 i‡(
c
->
mybuf„r
)

226 
c
->
buf„r
 = (*Ë
	`Æloˇã_mem
 (
Àn
);

227 i‡(
c
->
buf„r
 =
NULL
)

229 
	`nv_‰ì
 (
c
);

230  
NULL
;

232 
c
->
buf„r
[0] = '\0';

236 i‡(
	`__buûtö_ex≥˘
 ((
uöçå_t
Ë
Àn
 > -(uöçå_tË
buf
, 0))

238 
	`nv_‰ì
 (
c
);

239 
eövÆ
;

242 
c
->
buf„r
 = 
buf
;

245 
c
->
size
 = 
Àn
;

247 i‡(
mode
[0] == 'w')

248 
c
->
buf„r
[0] = '\0';

250 
c
->
maxpos
 = 
	`°æí
 (c->
buf„r
);

252 i‡(
mode
[0] == 'a')

253 
c
->
pos
 = c->
maxpos
;

255 
c
->
pos
 = 0;

257 
c
->
bömode
 = 
mode
[0] != '\0' && mode[1] == 'b';

259  
c
;

260 
	}
}

262 *
	$°rögfûe_fgës
(*
s
, 
size
, *
fûe
) {

263 
°rögfûe_t
 *
c
 = 
fûe
;

264 *
íd
;

265 
byãs_ªad
;

266 *
limô
 = 
	`MIN
(
c
->
buf„r
 + c->
maxpos
, c->buf„∏+ c->
pos
 + 
size
 - 1);

267 
íd
 = 
c
->
buf„r
 + c->
pos
;Énd < 
limô
 && *end != '\n';Énd++) ;

268 i‡(
íd
 < 
limô
)Énd++;

269 
byãs_ªad
 = 
	`°rögfûe_ªad
(
fûe
, 
s
, 
íd
 - (
c
->
buf„r
 + c->
pos
));

270 
	`as£π
(
byãs_ªad
 <
size
 - 1);

271 *(
s
 + 
byãs_ªad
) = '\0';

272 i‡(
byãs_ªad
 =0Ë 
NULL
;

273  
s
;

274 
	}
}

276 
	s¨øyfûe_°ru˘
 {

278 
	m¨øy_cou¡
;

279 *
	m¨øy_Àns
;

281 **
	m¨øy
;

282 *
	m¨øy_Ælocs
;

283 
	m¨øy_size
;

284 
	mkìp_ouçut
;

287 
¨øyfûe_t
 * 
	$¨øyfûe_f›í
(c⁄° *
«me
, c⁄° *
mode
) {

288 
¨øyfûe_t
 *
fûe
 = (¨øyfûe_à*)
	`Æloˇã_mem
((arrayfile_t));

289 i‡(!
fûe
Ë 
NULL
;

291 i‡(
mode
 && mode[0] != 'w') {

292 
	`¥ötf
("bad modê%†öáºayfûe_›í\n", 
mode
);

293 
¨øy_Áû
;

295 
fûe
->
kìp_ouçut
 = 1;

296 i‡(
mode
 && 
	`°æí
(mode) > 1) {

297 i‡(
mode
[1] == 'd') {

298 
fûe
->
kìp_ouçut
 = 0;

300 
	`¥ötf
("bad modê%†öáºayfûe_›í\n", 
mode
);

301 
¨øy_Áû
;

305 
	`¥ötf
("beforeárrayfile_fopen \n");

307 
fûe
->
¨øy
 = (**)
	`Æloˇã_mem
(
kAºayfûeDeÁu…AŒoc
 * (*));

308 i‡(!
fûe
->
¨øy
Ë
¨øy_Áû
;

309 
fûe
->
¨øy_size
 = 
kAºayfûeDeÁu…AŒoc
;

310 
fûe
->
¨øy_Àns
 = 
	`Æloˇã_mem
(fûe->
¨øy_size
 * ());

311 i‡(!
fûe
->
¨øy_Àns
Ë
Àns_Áû
;

312 
fûe
->
¨øy_Ælocs
 = 
	`Æloˇã_mem
(fûe->
¨øy_size
 * ());

313 i‡(!
fûe
->
¨øy_Ælocs
Ë
Ælocs_Áû
;

314 
fûe
->
¨øy_cou¡
 = 0;

316  
fûe
;

318 
Ælocs_Áû
:

319 
	`nv_‰ì
(
fûe
->
¨øy_Àns
);

320 
Àns_Áû
:

321 
	`nv_‰ì
(
fûe
->
¨øy
);

322 
¨øy_Áû
:

323 
	`nv_‰ì
(
fûe
);

324  
NULL
;

325 
	}
}

327 
	$¨øyfûe_£t_kìp_ouçut
(
¨øyfûe_t
 *
fûe
, 
kìp
) {

328 
fûe
->
kìp_ouçut
 = 
kìp
;

329 
	}
}

331 
size_t
 
	g¥ev_¨øy_Àns_size
 =0;

421 
ssize_t
 
	$¨øyfûe_fwrôe
(c⁄° *
b
, 
size_t
 
s
, size_à
n
, 
¨øyfûe_t
 *
fûe
) {

422 *
buf
;

423 
size_t
 
size
 = 
s
 * 
n
;

424 
cou¡
;

425 *
ãmp
 = 
NULL
;

427 i‡(!
fûe
)  0;

428 i‡(!
fûe
->
¨øy
)  0;

431 
cou¡
 = 
fûe
->
¨øy_cou¡
;

432 
	`as£π
(
cou¡
 <
fûe
->
¨øy_size
);

433 i‡(
cou¡
 =
fûe
->
¨øy_size
) {

434 i‡(
fûe
->
kìp_ouçut
) {

438 
ãmp
 = (**)
	`Æloˇã_mem
–
fûe
->
¨øy_size
 * (*) * 2);

439 
	`mem˝y
(
ãmp
, 
fûe
->
¨øy
, fûe->
¨øy_size
 * (*) );

440 
fûe
->
¨øy
 = (**)
ãmp
;

443 i‡(!
fûe
->
¨øy
)  0;

450 
ãmp
 = (**)
	`Æloˇã_mem
–
fûe
->
¨øy_size
 * () * 2);

451 
	`mem˝y
(
ãmp
, 
fûe
->
¨øy_Àns
, fûe->
¨øy_size
 * () );

452 
fûe
->
¨øy_Àns
 = (*)
ãmp
;

459 
ãmp
 = (**)
	`Æloˇã_mem
–
fûe
->
¨øy_size
 * () * 2);

460 
	`mem˝y
(
ãmp
, 
fûe
->
¨øy_Ælocs
, fûe->
¨øy_size
 * () );

461 
fûe
->
¨øy_Ælocs
(*)
ãmp
;

465 i‡(!
fûe
->
¨øy_Àns
 || !fûe->
¨øy_Ælocs
)  0;

467 
	`mem£t
(
fûe
->
¨øy
 + 
cou¡
, 0, count * (*));

468 
	`mem£t
(
fûe
->
¨øy_Àns
 + 
cou¡
, 0, count * ());

469 
	`mem£t
(
fûe
->
¨øy_Ælocs
 + 
cou¡
, 0, count * ());

470 
fûe
->
¨øy_size
 = file->array_size * 2;

477 i‡(
fûe
->
¨øy
[
cou¡
] &&

478 
fûe
->
¨øy_Àns
[
cou¡
] < 
size
 + 2) {

480 
	`nv_‰ì
(
fûe
->
¨øy
[
cou¡
]);

481 
fûe
->
¨øy
[
cou¡
] = 
NULL
;

483 i‡(
fûe
->
¨øy
[
cou¡
] =
NULL
) {

485 
buf
 = 
	`Æloˇã_mem
(
size
 + 2);

486 
fûe
->
¨øy_Ælocs
[
cou¡
] = 
size
 + 2;

488 
buf
 = 
fûe
->
¨øy
[
cou¡
];

490 i‡(!
buf
)  0;

491 
	`mem˝y
(
buf
, 
b
, 
size
);

492 
buf
[
size
] = '\0';

493 
fûe
->
¨øy
[
cou¡
] = 
buf
;

494 
fûe
->
¨øy_Àns
[
cou¡
] = 
size
;

495 
fûe
->
¨øy_cou¡
++;

496  
size
;

497 
	}
}

500 
ssize_t
 
	$¨øyfûe_fwrôe1
(c⁄° *
b
, 
size_t
 
s
, size_à
n
, 
¨øyfûe_t
 *
fûe
) {

501 *
buf
;

502 
size_t
 
size
 = 
s
 * 
n
;

503 
cou¡
;

504 i‡(!
fûe
)  0;

505 i‡(!
fûe
->
¨øy
)  0;

506 
cou¡
 = 
fûe
->
¨øy_cou¡
;

507 
	`as£π
(
cou¡
 <
fûe
->
¨øy_size
);

508 i‡(
cou¡
 =
fûe
->
¨øy_size
) {

509 i‡(
fûe
->
kìp_ouçut
) {

511 
fûe
->
¨øy
 = (**)
	`ªÆloc
(fûe->¨øy, fûe->
¨øy_size
 * (*) * 2);

512 i‡(!
fûe
->
¨øy
)  0;

513 
fûe
->
¨øy_Àns
 = 
	`ªÆloc
(file->array_lens,

514 
fûe
->
¨øy_size
 * () * 2);

515 
fûe
->
¨øy_Ælocs
 = 
	`ªÆloc
(file->array_allocs,

516 
fûe
->
¨øy_size
 * () * 2);

521 i‡(!
fûe
->
¨øy_Àns
 || !fûe->
¨øy_Ælocs
)  0;

523 
	`mem£t
(
fûe
->
¨øy
 + 
cou¡
, 0, count * (*));

524 
	`mem£t
(
fûe
->
¨øy_Àns
 + 
cou¡
, 0, count * ());

525 
	`mem£t
(
fûe
->
¨øy_Ælocs
 + 
cou¡
, 0, count * ());

526 
fûe
->
¨øy_size
 = file->array_size * 2;

533 i‡(
fûe
->
¨øy
[
cou¡
] &&

534 
fûe
->
¨øy_Àns
[
cou¡
] < 
size
 + 2) {

536 
	`nv_‰ì
(
fûe
->
¨øy
[
cou¡
]);

537 
fûe
->
¨øy
[
cou¡
] = 
NULL
;

539 i‡(
fûe
->
¨øy
[
cou¡
] =
NULL
) {

541 
buf
 = 
	`Æloˇã_mem
(
size
 + 2);

542 
fûe
->
¨øy_Ælocs
[
cou¡
] = 
size
 + 2;

544 
buf
 = 
fûe
->
¨øy
[
cou¡
];

546 i‡(!
buf
)  0;

547 
	`mem˝y
(
buf
, 
b
, 
size
);

548 
buf
[
size
] = '\0';

549 
fûe
->
¨øy
[
cou¡
] = 
buf
;

550 
fûe
->
¨øy_Àns
[
cou¡
] = 
size
;

551 
fûe
->
¨øy_cou¡
++;

552  
size
;

553 
	}
}

558 
	$¨øyfûe_Âutc
(
c
, 
¨øyfûe_t
 *
fûe
) {

559 
œ°
;

560 
buf
;

561 i‡(!
fûe
Ë 
EOF
;

562 
œ°
 = 
fûe
->
¨øy_cou¡
 - 1;

563 i‡(
fûe
->
¨øy_Ælocs
[
œ°
] > fûe->
¨øy_Àns
[last] + 1) {

564 
fûe
->
¨øy
[
œ°
][fûe->
¨øy_Àns
[œ°]] = 
c
;

565 
fûe
->
¨øy_Àns
[
œ°
]++;

566 
fûe
->
¨øy
[
œ°
][fûe->
¨øy_Àns
[last]] = '\0';

567  
c
;

569 
buf
 = (Ë
c
;

570 if(!
	`¨øyfûe_fwrôe
(&
buf
, 1, 1, 
fûe
)Ë 
EOF
;

571  
c
;

572 
	}
}

574 
	$¨øyfûe_Âuts
(c⁄° *
c
, 
¨øyfûe_t
 *
fûe
) {

575 if(!
	`¨øyfûe_fwrôe
(
c
, 1, 
	`°æí
(c), 
fûe
)Ë 
EOF
;

577 
	}
}

579 * 
	$¨øyfûe_joö
(
¨øyfûe_t
 *
fûe
, *
Àn
) {

580 
i
;

581 
tŸÆ_size
 = 0;

582 * 
joöbuf
;

583 
pos
 = 0;

584 i‡(!
fûe
Ë 
NULL
;

585 
i
 = 0; i < 
fûe
->
¨øy_cou¡
; i++) {

586 
tŸÆ_size
 +
fûe
->
¨øy_Àns
[
i
];

588 
joöbuf
 = 
	`Æloˇã_mem
(
tŸÆ_size
 + 1);

589 i‡(!
joöbuf
Ë 
NULL
;

590 
i
 = 0; i < 
fûe
->
¨øy_cou¡
; i++) {

591 
	`mem˝y
(
joöbuf
 + 
pos
, 
fûe
->
¨øy
[
i
], fûe->
¨øy_Àns
[i]);

592 
pos
 +
fûe
->
¨øy_Àns
[
i
];

594 
joöbuf
[
tŸÆ_size
] = '\0';

595 i‡(
Àn
Ë*À¿
tŸÆ_size
;

596  
joöbuf
;

597 
	}
}

599 
	$¨øyfûe_ªwöd
(
¨øyfûe_t
 *
fûe
) {

600 
fûe
->
¨øy_cou¡
 = 0;

601 
	`mem£t
(
fûe
->
¨øy_Àns
, 0, fûe->
¨øy_size
 * ());

602 
	}
}

604 
	$¨øyfûe_f˛o£
(
¨øyfûe_t
 *
fûe
) {

605 
i
;

606 i‡(!
fûe
Ë 
EOF
;

607 
i
 = 0; i < 
fûe
->
¨øy_size
; i++) {

608 
	`nv_‰ì
(
fûe
->
¨øy
[
i
]);

609 
fûe
->
¨øy
[
i
] = 
NULL
;

611 
	`nv_‰ì
(
fûe
->
¨øy
);

612 
	`nv_‰ì
(
fûe
->
¨øy_Àns
);

613 
	`nv_‰ì
(
fûe
->
¨øy_Ælocs
);

614 
	`nv_‰ì
(
fûe
);

616 
	}
}

	@benchstringio.h

1 #i‚de‡
BENCHSTRINGIO_H


2 
	#BENCHSTRINGIO_H


	)

4 #ifde‡
__˝lu•lus


8 
°rögfûe_cookõ_°ru˘
 
	t°rögfûe_t
;

11 
ssize_t
 
°rögfûe_ªad
 (*
cookõ
, *
b
, 
size_t
 
s
);

12 
ssize_t
 
°rögfûe_wrôe
 (*
cookõ
, c⁄° *
b
, 
size_t
 
s
);

13 
°rögfûe_£ek
 (*
cookõ
, *
p
, 
w
);

14 
°rögfûe_˛o£
 (*
cookõ
);

15 
°rögfûe_t
 * 
°rögfûe_›í
 (*
buf
, 
size_t
 
Àn
, c⁄° *
mode
);

16 *
°rögfûe_fgës
(*
s
, 
size
, *
cookõ
);

20 
¨øyfûe_°ru˘
 
	t¨øyfûe_t
;

21 
¨øyfûe_t
 * 
¨øyfûe_f›í
(c⁄° *
«me
, c⁄° *
mode
);

22 
¨øyfûe_£t_kìp_ouçut
(
¨øyfûe_t
 *
fûe
, 
kìp
);

23 
ssize_t
 
¨øyfûe_fwrôe
(c⁄° *
b
, 
size_t
 
s
, size_à
n
, 
¨øyfûe_t
 *
fûe
);

24 * 
¨øyfûe_joö
(
¨øyfûe_t
 *
fûe
, *
Àn
);

25 
¨øyfûe_Âutc
(
c
, 
¨øyfûe_t
 *
fûe
);

26 
¨øyfûe_Âuts
(c⁄° *
c
, 
¨øyfûe_t
 *
fûe
);

27 
¨øyfûe_ªwöd
(
¨øyfûe_t
 *
fûe
);

28 
¨øyfûe_f˛o£
(
¨øyfûe_t
 *
fûe
);

30 
¨øyfûe_t
 *
¨øyfûe_°dout
;

31 
°rögfûe_t
 *
°rögfûe_°dö
;

33 
	#ARRAYFILE


	)

35 #ifde‡
__˝lu•lus


	@binarytrees.cc

10 
	~<io°ªam
>

11 
	~<°dlib.h
>

12 
	~<°dio.h
>

13 
	~<°rög.h
>

16 
	~"ö˛ude/boo°/poﬁ/obje˘_poﬁ.hµ
"

18 
	~"bích-‰amew‹k.h
"

20 c⁄° 
size_t
 
	gLINE_SIZE
 = 64;

22 
size_t
 
	gtŸÆ_Æloc
 = 0;

24 
	sNode


26 
Node
 *
	ml
, *
	mr
;

27 
	mi
;

29 
Node
(
i2
Ë: 
l
(0), 
r
(0), 
i
(i2)

31 
Node
(Nodê*
l2
, 
i2
, Nodê*
r2
Ë: 
l
÷2), 
r
‘2), 
i
(i2)

34 
check
() const

36 i‡(
	ml
)

37  
	ml
->
check
(Ë+ 
	mi
 - 
	mr
->check();

38  
	mi
;

42 
	gboo°
::
	tobje˘_poﬁ
<
	tNode
> 
	tNodePoﬁ
;

45 
Node
 *
	$make
(
i
, 
d
, 
NodePoﬁ
 &
°‹e
)

47 i‡(
d
 > 0)

48  
°‹e
.
	`c⁄°ru˘
–
	`make
(2*
i
-1, 
d
-1, store),

49 
i
,

50 
	`make
(2*
i
, 
d
-1, 
°‹e
) );

51  
°‹e
.
	`c⁄°ru˘
(
i
);

52 
	}
}

54 
	$GëThªadCou¡
()

56 #ifde‡
__GLIBC__


57 
˝u_£t_t
 
cs
;

58 
	`CPU_ZERO
(&
cs
);

59 
	`sched_gëafföôy
(0, (
cs
), &cs);

61 
cou¡
 = 0;

62 
i
 = 0; i < 8; i++)

64 i‡(
	`CPU_ISSET
(
i
, &
cs
))

65 
cou¡
++;

67  
cou¡
;

71 
	}
}

73 
	$bö¨yåìs
(
dïth_¨g
)

75 
mö_dïth
 = 4;

76 
max_dïth
 = 
dïth_¨g
;

77 
°ªtch_dïth
 = 
max_dïth
+1;

79 vﬁ©ûê
v
;

83 
NodePoﬁ
 
°‹e
;

84 
Node
 *
c
 = 
	`make
(0, 
°ªtch_dïth
, 
°‹e
);

87 
v
 = 
c
->
	`check
();

90 
NodePoﬁ
 
l⁄g_lived_°‹e
;

91 
Node
 *
l⁄g_lived_åì
 = 
	`make
(0, 
max_dïth
, 
l⁄g_lived_°‹e
);

94 *
ouçut°r
 = (*)
	`mÆloc
(
LINE_SIZE
 * (
max_dïth
 +1) * ());

96 
tŸÆ_Æloc
 +
LINE_SIZE
 * (
max_dïth
 +1) * ();

98 #¥agm®
omp
 
∑øŒñ
 (
sh¨ed
Ë
	`num_thªads
(
	`GëThªadCou¡
()Ë
	`scheduÀ
(
dy«mic
, 1)

99 
d
 = 
mö_dïth
; d <
max_dïth
; d += 2)

101 
ôî©i⁄s
 = 1 << (
max_dïth
 - 
d
 + 
mö_dïth
);

102 
c
 = 0;

104 
i
 = 1; i <
ôî©i⁄s
; ++i)

106 
NodePoﬁ
 
°‹e
;

107 
Node
 *
a
 = 
	`make
(
i
, 
d
, 
°‹e
), *
b
 = make(-i, d, store);

108 
c
 +
a
->
	`check
(Ë+ 
b
->check();

112 
	`•rötf
(
ouçut°r
 + 
LINE_SIZE
 * 
d
, "%d\àåì†o‡dïth %d\àcheck: %d\n", (2 * 
ôî©i⁄s
), d, 
c
);

116 
d
 = 
mö_dïth
; d <
max_dïth
; d += 2)

117 
v
 = 
	`°æí
(
ouçut°r
);

119 
	`‰ì
(
ouçut°r
);

123 
v
 = 
l⁄g_lived_åì
->
	`check
();

126 
	}
}

129 
	$run_bö¨yåìs
(
n
) {

131 
	`Ârötf
(
°dîr
,"tŸÆ bö¨yÅªêÆlo¯%zu \n", 
tŸÆ_Æloc
);

133  
	`bö¨yåìs
(
n
);

134 
	}
}

	@cli.c

3 
	~<°d¨g.h
>

4 
	~<°dio.h
>

5 
	~"bích-‰amew‹k.h
"

7 
	$maö
(
¨gc
, **
¨gv
) {

8 
	`¥ötf
("Running small benchmarks\n");

9 
	`‰amew‹k_maö
(
kBíchm¨kSmÆl
);

10 
	`¥ötf
("RunningÜarge benchmarks (same sizeás webÖage)\n");

11 
	`‰amew‹k_maö
(
kBíchm¨kL¨ge
);

12 
	}
}

14 
	$Rï‹tSètus
(c⁄° *
f‹m©
, ...) {

15 
va_li°
 
≠
;

16 
	`va_°¨t
(
≠
, 
f‹m©
);

17 
	`v¥ötf
(
f‹m©
, 
≠
);

18 
	`va_íd
(
≠
);

19 
	`¥ötf
("\n");

20 
	}
}

	@deltablue.c

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

11 
	~<°rög.h
>

12 
	~<time.h
>

14 íum {
	mÁl£
, 
	måue
} 
	tBoﬁón
;

15 (*
	gProc
)();

16 * 
	tEÀmít
;

22 
EÀmít
 *
	m¶Ÿs
;

23 
	m¶ŸCou¡
;

24 
	mfú°
;

25 
	mœ°
;

26 } *
	tLi°
, 
	tLi°Såu˘
;

34 
	mS_ªquúed
= 0,

35 
	mS_°r⁄gPª„ºed
= 1,

36 
	mS_¥e„ºed
= 2,

37 
	mS_°r⁄gDeÁu…
= 3,

38 
	mS_deÁu…
= 4,

39 
	mS_wókDeÁu…
= 5,

40 
	mS_wóke°
= 6

41 } 
	tSåígth
;

43 
	gc⁄°øöt
;

46 
	mvÆue
;

47 
Li°
 
	mc⁄°øöts
;

48 
c⁄°øöt
* 
	mdëîmöedBy
;

49 
	mm¨k
;

50 
Såígth
 
	mwÆkSåígth
;

51 
Boﬁón
 
	m°ay
;

52 
	m«me
[10];

53 } *
	tV¨übÀ
, 
	tV¨übÀSåu˘
;

55 
	sc⁄°øöt
 {

56 
Proc
 
	mexecuã
;

57 
Boﬁón
 
	möputFœg
;

58 
Såígth
 
	m°ªngth
;

59 
	mwhichMëhod
;

60 
	mmëhodCou¡
;

61 
	mv¨Cou¡
;

62 
	mmëhodOuts
[7];

63 
V¨übÀ
 
	mv¨übÀs
[1];

64 } *
	tC⁄°øöt
, 
	tC⁄°øötSåu˘
;

67 
	#NO_METHOD
 (-1)

	)

68 
	#SATISFIED
(
c
Ë((c)->
whichMëhod
 !
NO_METHOD
)

	)

69 
	#Wókî
(
a
,
b
Ë◊ > b)

	)

85 
Eº‹
(*);

86 
Grow
(
Li°
);

87 
MakeRoom
(
Li°
);

88 * 
SåígthSåög
(
Såígth
 
°ªngth
);

91 
V¨übÀ
 
V¨übÀ_Cª©e
(*, );

92 
V¨übÀ
 
V¨übÀ_Cª©eC⁄°™t
(*, );

93 
V¨übÀ_De°roy
(
V¨übÀ
);

94 
V¨übÀ_Pröt
(
V¨übÀ
);

97 
C⁄°øöt
 
C⁄°øöt_Cª©e
(, 
Såígth
);

98 
C⁄°øöt_De°roy
(
C⁄°øöt
);

99 
C⁄°øöt_Pröt
(
C⁄°øöt
);

102 
ExecuãPœn
(
Li°
);

104 
C⁄°øöt
 
SèyC
(
V¨übÀ
 
v
, 
Såígth
);

105 
C⁄°øöt
 
EdôC
(
V¨übÀ
 
v
, 
Såígth
);

106 
C⁄°øöt
 
EquÆsC
(
V¨übÀ
 
a
, V¨übÀ 
b
, 
Såígth
);

108 
C⁄°øöt
 
SˇÀOff£tC
(
V¨übÀ
 
§c
, V¨übÀ 
sˇÀ
, V¨übÀ 
off£t
,

109 
V¨übÀ
 
de°
, 
Såígth
);

111 
InôDñèBlue
();

112 
AddV¨übÀ
(
V¨übÀ
);

113 
De°royV¨übÀ
(
V¨übÀ
);

114 
AddC⁄°øöt
(
C⁄°øöt
);

115 
De°royC⁄°øöt
(
C⁄°øöt
);

116 
Li°
 
Exåa˘Pœn
();

117 
Li°
 
Exåa˘PœnFromC⁄°øöt
(
C⁄°øöt
);

118 
Li°
 
Exåa˘PœnFromC⁄°øöts
(List);

124 
Li°
 
	$Li°_Cª©e
(
öôülCou¡
)

126 
Li°
 
√wLi°
;

128 
√wLi°
 = (
Li°
Ë
	`Æloˇã_mem
((
Li°Såu˘
));

129 i‡(
√wLi°
 =
NULL
Ë
	`Eº‹
("out of memory");

130 
√wLi°
->
¶Ÿs
 = (
EÀmít
 *Ë
	`Æloˇã_mem
(
öôülCou¡
 * (Element));

131 i‡(
√wLi°
->
¶Ÿs
 =
NULL
Ë
	`Eº‹
("out of memory");

132 
√wLi°
->
¶ŸCou¡
 = 
öôülCou¡
;

133 
√wLi°
->
fú°
 = 0;

134 
√wLi°
->
œ°
 = -1;

135  
√wLi°
;

136 
	}
}

138 
	$Li°_De°roy
(
Li°
 
li°
)

140 i‡(
li°
->
¶Ÿs
 =
NULL
Ë
	`Eº‹
("bad ListStruct;álreadyÇv_freed?");

141 
	`nv_‰ì
(
li°
->
¶Ÿs
);

142 
li°
->
¶Ÿs
 = 
NULL
;

143 
li°
->
¶ŸCou¡
 = 0;

144 
li°
->
fú°
 = 0;

145 
li°
->
œ°
 = -1;

146 
	`nv_‰ì
(
li°
);

147 
	}
}

151 
	$Li°_Do
(
Li°
 
li°
, 
Proc
 
¥oc
)

153 
EÀmít
 *
√xtPå
 = &(
li°
->
¶Ÿs
[li°->
fú°
]);

154 
EÀmít
 *
œ°På
 = &(
li°
->
¶Ÿs
[li°->
œ°
]);

156 
√xtPå
 <
œ°På
) {

157 (*
¥oc
)(*
√xtPå
++);

159 
	}
}

161 
	$Li°_Size
(
Li°
 
li°
)

163  (
li°
->
œ°
 -Üi°->
fú°
) + 1;

164 
	}
}

166 * 
	$Li°_At
(
Li°
 
li°
, 
ödex
)

168 i‡(
ödex
 < 0 || index > 
li°
->
œ°
 -Üi°->
fú°
 + 1)

169 
	`Eº‹
("Listáccess out of bounds");

170  
li°
->
¶Ÿs
[
ödex
 +Üi°->
fú°
];

171 
	}
}

175 
	$Li°_Add
(
Li°
 
li°
, 
EÀmít
 
ñemít
)

177 i‡(
li°
->
œ°
 >÷i°->
¶ŸCou¡
 - 1)Ë
	`MakeRoom
(list);

178 
li°
->
¶Ÿs
[++li°->
œ°
] = 
ñemít
;

179 
	}
}

181 
	$Li°_Aµíd
(
Li°
 
li°1
, Li° 
li°2
)

183 
EÀmít
 *
√xtPå
 = &(
li°2
->
¶Ÿs
[li°2->
fú°
]);

184 
EÀmít
 *
œ°På
 = &(
li°2
->
¶Ÿs
[li°2->
œ°
]);

186 
√xtPå
 <
œ°På
) {

187 
	`Li°_Add
(
li°1
, *
√xtPå
++);

189 
	}
}

193 
	$Li°_Remove
(
Li°
 
li°
, 
EÀmít
 
ñemít
)

195 
EÀmít
 *
§cPå
 = &
li°
->
¶Ÿs
[li°->
fú°
];

196 
EÀmít
 *
de°På
 = &
li°
->
¶Ÿs
[0];

197 
EÀmít
 *
œ°På
 = &
li°
->
¶Ÿs
[li°->
œ°
];

199 
li°
->
œ°
 =Üi°->œ° -Üi°->
fú°
;

200 
li°
->
fú°
 = 0;

201 
§cPå
 <
œ°På
) {

202 i‡(*
§cPå
 =
ñemít
) {

203 
li°
->
œ°
--;

205 *
de°På
++ = *
§cPå
;

207 
§cPå
++;

209 
	}
}

211 
EÀmít
 
	$Li°_RemoveFú°
(
Li°
 
li°
)

213 
EÀmít
 
ñemít
;

215 i‡(
li°
->
œ°
 <Üi°->
fú°
Ë 
NULL
;

216 
ñemít
 = 
li°
->
¶Ÿs
[li°->
fú°
++];

217  
ñemít
;

218 
	}
}

220 
	$Li°_RemoveAŒ
(
Li°
 
li°
)

222 
li°
->
fú°
 = 0;

223 
li°
->
œ°
 = -1;

224 
	}
}

228 
	#max
(
x
, 
y
Ë((xË> (yË? (xË: (y))

	)

229 
	#mö
(
x
, 
y
Ë((xË< (yË? (xË: (y))

	)

231 
	$Eº‹
(*
îr‹Såög
)

233 
	`¥ötf
("îr‹: %s.\n", 
îr‹Såög
);

234 
	`exô
(-1);

235 
	}
}

237 
	$Grow
(
Li°
 
li°
)

240 *
ãmp
 = 
NULL
;

241 
cou¡
 =0;

245 
li°
->
¶ŸCou¡
 +
	`mö
(
	`max
(list->slotCount, 2), 512);

253 
li°
->
¶Ÿs
 = 
	`mÆloc
(÷i°->
¶ŸCou¡
 * (
EÀmít
)));

256 i‡(
li°
->
¶Ÿs
 =
NULL
Ë
	`Eº‹
("out of memory");

257 
	}
}

259 
	$MakeRoom
(
Li°
 
li°
)

261 
EÀmít
 *
§cPå
 = &
li°
->
¶Ÿs
[li°->
fú°
];

262 
EÀmít
 *
de°På
 = &
li°
->
¶Ÿs
[0];

263 
EÀmít
 *
œ°På
 = &
li°
->
¶Ÿs
[li°->
œ°
];

265 i‡(((
li°
->
œ°
 -Üi°->
fú°
Ë+ 1Ë>li°->
¶ŸCou¡
Ë
	`Grow
(list);

266 i‡(
li°
->
fú°
 == 0) ;

267 
§cPå
 <
œ°På
) {

268 *
de°På
++ = *
§cPå
++;

270 
li°
->
œ°
 =Üi°->œ° -Üi°->
fú°
;

271 
li°
->
fú°
 = 0;

272 
	}
}

280 
	$Execuã
(
C⁄°øöt
 
c
)

282 
c
->
	`execuã
(c);

283 
	}
}

285 
	$No›
(
C⁄°øöt
 
c
)

288 
	}
};

292 
V¨übÀ
 
	$V¨übÀ_Cª©e
(*
«me
, 
öôülVÆue
)

294 
V¨übÀ
 
√w
;

296 
√w
 = (
V¨übÀ
Ë
	`Æloˇã_mem
((
V¨übÀSåu˘
));

297 i‡(
√w
 =
NULL
Ë
	`Eº‹
("out of memory");

298 
√w
->
vÆue
 = 
öôülVÆue
;

299 
√w
->
c⁄°øöts
 = 
	`Li°_Cª©e
(2);

300 
√w
->
dëîmöedBy
 = 
NULL
;

301 
√w
->
m¨k
 = 0;

302 
√w
->
wÆkSåígth
 = 
S_wóke°
;

303 
√w
->
°ay
 = 
åue
;

304 
	`°∫˝y
(
√w
->
«me
,Çame, 10);

305 
√w
->
«me
[9] = 0;

306 
	`AddV¨übÀ
(
√w
);

307  
√w
;

308 
	}
}

310 
V¨übÀ
 
	$V¨übÀ_Cª©eC⁄°™t
(*
«me
, 
vÆue
)

312 
V¨übÀ
 
√w
;

314 
√w
 = (
V¨übÀ
Ë
	`Æloˇã_mem
((
V¨übÀSåu˘
));

315 i‡(
√w
 =
NULL
Ë
	`Eº‹
("out of memory");

316 
√w
->
vÆue
 = value;

317 
√w
->
c⁄°øöts
 = 
	`Li°_Cª©e
(0);

318 
√w
->
dëîmöedBy
 = 
NULL
;

319 
√w
->
m¨k
 = 0;

320 
√w
->
wÆkSåígth
 = 
S_ªquúed
;

321 
√w
->
°ay
 = 
åue
;

322 
	`°∫˝y
(
√w
->
«me
,Çame, 10);

323 
√w
->
«me
[9] = 0;

324 
	`AddV¨übÀ
(
√w
);

325  
√w
;

326 
	}
}

328 
	$V¨übÀ_De°roy
(
V¨übÀ
 
v
)

330 i‡(
v
->
c⁄°øöts
 =
NULL
) {

331 
	`Eº‹
("bad VariableStruct;álreadyÇv_freed?");

333 
	`Li°_De°roy
(
v
->
c⁄°øöts
);

334 
v
->
c⁄°øöts
 = 
NULL
;

335 
	`nv_‰ì
(
v
);

336 
	}
}

338 
	$V¨übÀ_Pröt
(
V¨übÀ
 
v
)

340 
	`¥ötf
(

342 
v
->
«me
, 
	`SåígthSåög
(v->
wÆkSåígth
), v->
vÆue
);

343 
	}
}

347 
C⁄°øöt
 
	$C⁄°øöt_Cª©e
(
v¨übÀCou¡
, 
Såígth
 
°ªngth
)

349 
C⁄°øöt
 
√w
;

350 
i
;

352 
√w
 = (
C⁄°øöt
Ë
	`Æloˇã_mem
((
C⁄°øötSåu˘
)

353 + ((
v¨übÀCou¡
 - 1Ë* (
V¨übÀ
)));

354 i‡(
√w
 =
NULL
Ë
	`Eº‹
("out of memory");

355 
√w
->
execuã
 = 
No›
;

356 
√w
->
öputFœg
 = 
Ál£
;

357 
√w
->
°ªngth
 = strength;

358 
√w
->
whichMëhod
 = 
NO_METHOD
;

359 
√w
->
mëhodCou¡
 = 0;

360 
i
 = 0; i < 7; i++) {

361 
√w
->
mëhodOuts
[
i
] = 0;

363 
√w
->
v¨Cou¡
 = 
v¨übÀCou¡
;

364 
i
 = 0; i < 
√w
->
v¨Cou¡
; i++) {

365 
√w
->
v¨übÀs
[
i
] = 
NULL
;

367  
√w
;

368 
	}
}

370 
	$C⁄°øöt_De°roy
(
C⁄°øöt
 
c
)

372 i‡(
c
->
execuã
 =
NULL
) {

373 
	`Eº‹
("bad ConstraintStruct;álreadyÇv_freed?");

375 
c
->
execuã
 = 
NULL
;

376 
	`nv_‰ì
(
c
);

377 
	}
}

379 
	$C⁄°øöt_Pröt
(
C⁄°øöt
 
c
)

381 
i
, 
outIndex
;

383 i‡(!
	`SATISFIED
(
c
)) {

384 
	`¥ötf
("Unsatisfied(");

385 
i
 = 0; i < 
c
->
v¨Cou¡
; i++) {

386 
	`V¨übÀ_Pröt
(
c
->
v¨übÀs
[
i
]);

387 
	`¥ötf
(" ");

389 
	`¥ötf
(")");

391 
outIndex
 = 
c
->
mëhodOuts
[c->
whichMëhod
];

392 
	`¥ötf
("Satisfied(");

393 
i
 = 0; i < 
c
->
v¨Cou¡
; i++) {

394 i‡(
i
 !
outIndex
) {

395 
	`V¨übÀ_Pröt
(
c
->
v¨übÀs
[
i
]);

396 
	`¥ötf
(" ");

399 
	`¥ötf
("-> ");

400 
	`V¨übÀ_Pröt
(
c
->
v¨übÀs
[
outIndex
]);

401 
	`¥ötf
(")");

403 
	`¥ötf
("\n");

404 
	}
}

408 * 
	$SåígthSåög
(
Såígth
 
°ªngth
)

410 
ãmp
[20];

412 
°ªngth
) {

413 
S_ªquúed
:  "required";

414 
S_°r⁄gPª„ºed
:  "strongPreferred";

415 
S_¥e„ºed
:  "preferred";

416 
S_°r⁄gDeÁu…
:  "strongDefault";

417 
S_deÁu…
:  "default";

418 
S_wókDeÁu…
:  "weakDefault";

419 
S_wóke°
:  "weakest";

421 
	`•rötf
(
ãmp
, "°ªngth[%d]", 
°ªngth
);

422  
ãmp
;

424 
	}
}

426 
	$ExecuãPœn
(
Li°
 
li°
)

428 
	`Li°_Do
(
li°
, 
Execuã
);

429 
	}
}

440 
	#OUT_VAR
(
c
Ë(c->
v¨übÀs
[c->
mëhodOuts
[c->
whichMëhod
]])

	)

442 
FªeV¨übÀ
(
V¨übÀ
);

443 
AddIfS©isfõdI≈ut
(
C⁄°øöt
);

444 
CﬁÀ˘S©isfõdI≈uts
(
V¨übÀ
);

445 
Li°
 
MakePœn
();

446 
In¸emíèlAdd
(
C⁄°øöt
);

447 
AddAtSåígth
(
C⁄°øöt
);

448 
In¸emíèlRemove
(
C⁄°øöt
);

449 
Boﬁón
 
AddPr›ag©e
(
C⁄°øöt
);

450 
CﬁÀ˘Unßtisfõd
(
C⁄°øöt
);

451 
RemovePr›ag©eFrom
(
V¨übÀ
);

452 
C⁄°øöt
 
S©isfy
(Constraint);

453 
Choo£Mëhod
(
C⁄°øöt
);

454 
Reˇlcuœã
(
C⁄°øöt
);

455 
OuçutWÆkSåígth
(
C⁄°øöt
);

456 
Boﬁón
 
C⁄°™tOuçut
(
C⁄°øöt
);

457 
Boﬁón
 
I≈utsKnown
(
C⁄°øöt
);

458 
NewM¨k
();

459 
Eº‹
(*);

460 
C⁄°øöt
 
NextDown°ªamC⁄°øöt
(
Li°
, 
V¨übÀ
);

464 
Li°
 
	gÆlV¨übÀs
 = 
NULL
;

465 
	gcuºítM¨k
 = 0;

469 
	$InôDñèBlue
()

471 
V¨übÀ
 
v
;

473 i‡(
ÆlV¨übÀs
 =
NULL
ËÆlV¨übÀ†
	`Li°_Cª©e
(128);

474 
v
 = (
V¨übÀ
Ë
	`Li°_RemoveFú°
(
ÆlV¨übÀs
);

475 
v
 !
NULL
) {

476 
	`FªeV¨übÀ
(
v
);

477 
v
 = (
V¨übÀ
Ë
	`Li°_RemoveFú°
(
ÆlV¨übÀs
);

479 
	`Li°_RemoveAŒ
(
ÆlV¨übÀs
);

480 
cuºítM¨k
 = 0;

481 
	}
}

484 
	$FªeV¨übÀ
(
V¨übÀ
 
v
)

486 
C⁄°øöt
 
c
;

487 
i
;

489 
c
 = (
C⁄°øöt
Ë
	`Li°_RemoveFú°
(
v
->
c⁄°øöts
);

490 
c
 !
NULL
) {

491 
i
 = 
c
->
v¨Cou¡
 - 1; i >= 0; i--) {

492 
	`Li°_Remove
((
c
->
v¨übÀs
[
i
])->
c⁄°øöts
, (
EÀmít
) c);

494 
	`C⁄°øöt_De°roy
(
c
);

495 
c
 = (
C⁄°øöt
Ë
	`Li°_RemoveFú°
(
v
->
c⁄°øöts
);

497 
	`V¨übÀ_De°roy
(
v
);

498 
	}
}

502 
	$AddV¨übÀ
(
V¨übÀ
 
v
)

504 
	`Li°_Add
(
ÆlV¨übÀs
, 
v
);

505 
	}
}

507 
De°royC⁄°øöt
(
C⁄°øöt
 
c
);

509 
	$De°royV¨übÀ
(
V¨übÀ
 
v
)

511 
C⁄°øöt
 
c
;

513 
c
 = (
C⁄°øöt
Ë
	`Li°_RemoveFú°
(
v
->
c⁄°øöts
);

514 
c
 !
NULL
) {

515 
	`De°royC⁄°øöt
(
c
);

516 
c
 = (
C⁄°øöt
Ë
	`Li°_RemoveFú°
(
v
->
c⁄°øöts
);

518 
	`Li°_Remove
(
ÆlV¨übÀs
, 
v
);

519 
	`V¨übÀ_De°roy
(
v
);

520 
	}
}

522 
	$AddC⁄°øöt
(
C⁄°øöt
 
c
)

524 
i
;

526 
i
 = 
c
->
v¨Cou¡
 - 1; i >= 0; i--) {

527 
	`Li°_Add
((
c
->
v¨übÀs
[
i
])->
c⁄°øöts
, (
EÀmít
) c);

529 
c
->
whichMëhod
 = 
NO_METHOD
;

530 
	`In¸emíèlAdd
(
c
);

531 
	}
}

533 
	$De°royC⁄°øöt
(
C⁄°øöt
 
c
)

535 
i
;

537 i‡(
	`SATISFIED
(
c
)Ë
	`In¸emíèlRemove
(c);

538 
i
 = 
c
->
v¨Cou¡
 - 1; i >= 0; i--) {

539 
	`Li°_Remove
((
c
->
v¨übÀs
[
i
])->
c⁄°øöts
, (
EÀmít
) c);

541 
	`C⁄°øöt_De°roy
(
c
);

542 
	}
}

546 
Li°
 
	ghŸ
 = 
NULL
;

548 
	$AddIfS©isfõdI≈ut
(
C⁄°øöt
 
c
)

550 i‡(
c
->
öputFœg
 && 
	`SATISFIED
(c)) {

551 
	`Li°_Add
(
hŸ
, 
c
);

553 
	}
}

555 
	$CﬁÀ˘S©isfõdI≈uts
(
V¨übÀ
 
v
)

557 
	`Li°_Do
(
v
->
c⁄°øöts
, 
AddIfS©isfõdI≈ut
);

558 
	}
}

560 
Li°
 
	$Exåa˘Pœn
()

562 i‡(
hŸ
 =
NULL
ËhŸ = 
	`Li°_Cª©e
(128);

563 
	`Li°_RemoveAŒ
(
hŸ
);

564 
	`Li°_Do
(
ÆlV¨übÀs
, 
CﬁÀ˘S©isfõdI≈uts
);

565  
	`MakePœn
();

566 
	}
}

568 
Li°
 
	$Exåa˘PœnFromC⁄°øöt
(
C⁄°øöt
 
c
)

570 i‡(
hŸ
 =
NULL
ËhŸ = 
	`Li°_Cª©e
(128);

571 
	`Li°_RemoveAŒ
(
hŸ
);

572 
	`AddIfS©isfõdI≈ut
(
c
);

573  
	`MakePœn
();

574 
	}
}

576 
Li°
 
	$Exåa˘PœnFromC⁄°øöts
(
Li°
 
c⁄°øöts
)

578 i‡(
hŸ
 =
NULL
ËhŸ = 
	`Li°_Cª©e
(128);

579 
	`Li°_RemoveAŒ
(
hŸ
);

580 
	`Li°_Do
(
c⁄°øöts
, 
AddIfS©isfõdI≈ut
);

581  
	`MakePœn
();

582 
	}
}

586 
Li°
 
	$MakePœn
()

588 
Li°
 
∂™
;

589 
C⁄°øöt
 
√xtC
;

590 
V¨übÀ
 
out
;

592 
	`NewM¨k
();

593 
∂™
 = 
	`Li°_Cª©e
(128);

594 
√xtC
 = (
C⁄°øöt
Ë
	`Li°_RemoveFú°
(
hŸ
);

595 
√xtC
 !
NULL
) {

596 
out
 = 
	`OUT_VAR
(
√xtC
);

597 i‡((
out
->
m¨k
 !
cuºítM¨k
Ë&& 
	`I≈utsKnown
(
√xtC
)) {

598 
	`Li°_Add
(
∂™
, 
√xtC
);

599 
out
->
m¨k
 = 
cuºítM¨k
;

600 
√xtC
 = 
	`NextDown°ªamC⁄°øöt
(
hŸ
, 
out
);

602 
√xtC
 = (
C⁄°øöt
Ë
	`Li°_RemoveFú°
(
hŸ
);

605  
∂™
;

606 
	}
}

608 
Boﬁón
 
	$I≈utsKnown
(
C⁄°øöt
 
c
)

610 
outIndex
, 
i
;

611 
V¨übÀ
 
ö
;

613 
outIndex
 = 
c
->
mëhodOuts
[c->
whichMëhod
];

614 
i
 = 
c
->
v¨Cou¡
 - 1; i >= 0; i--) {

615 i‡(
i
 !
outIndex
) {

616 
ö
 = 
c
->
v¨übÀs
[
i
];

617 i‡((
ö
->
m¨k
 !
cuºítM¨k
) &&

618 (!
ö
->
°ay
) &&

619 (
ö
->
dëîmöedBy
 !
NULL
)) {

620  
Ál£
;

624  
åue
;

625 
	}
}

629 
	$In¸emíèlAdd
(
C⁄°øöt
 
c
)

631 
C⁄°øöt
 
ovîriddí
;

633 
	`NewM¨k
();

634 
ovîriddí
 = 
	`S©isfy
(
c
);

635 
ovîriddí
 !
NULL
) {

636 
ovîriddí
 = 
	`S©isfy
(overridden);

638 
	}
}

640 
C⁄°øöt
 
	$S©isfy
(
C⁄°øöt
 
c
)

642 
outIndex
, 
i
;

643 
C⁄°øöt
 
ovîriddí
;

644 
V¨übÀ
 
out
;

646 
c
->
whichMëhod
 = 
	`Choo£Mëhod
(c);

647 i‡(
	`SATISFIED
(
c
)) {

649 
outIndex
 = 
c
->
mëhodOuts
[c->
whichMëhod
];

650 
i
 = 
c
->
v¨Cou¡
 - 1; i >= 0; i--) {

651 i‡(
i
 !
outIndex
) {

652 
c
->
v¨übÀs
[
i
]->
m¨k
 = 
cuºítM¨k
;

655 
out
 = 
c
->
v¨übÀs
[
outIndex
];

656 
ovîriddí
 = (
C⁄°øöt
Ë
out
->
dëîmöedBy
;

657 i‡(
ovîriddí
 !
NULL
Ëovîriddí->
whichMëhod
 = 
NO_METHOD
;

658 
out
->
dëîmöedBy
 = 
c
;

659 i‡(!
	`AddPr›ag©e
(
c
)) {

660 
	`Eº‹
("CycleÉncountered");

661  
NULL
;

663 
out
->
m¨k
 = 
cuºítM¨k
;

664  
ovîriddí
;

666 i‡(
c
->
°ªngth
 =
S_ªquúed
) {

667 
	`Eº‹
("CouldÇot satisfyáÑequired constraint");

669  
NULL
;

671 
	}
}

673 
	$Choo£Mëhod
(
C⁄°øöt
 
c
)

675 
be°
, 
m
;

676 
Såígth
 
be°OutSåígth
;

677 
V¨übÀ
 
mOut
;

679 
be°
 = 
NO_METHOD
;

680 
be°OutSåígth
 = 
c
->
°ªngth
;

681 
m
 = 
c
->
mëhodCou¡
 - 1; m >= 0; m--) {

682 
mOut
 = 
c
->
v¨übÀs
[c->
mëhodOuts
[
m
]];

683 i‡((
mOut
->
m¨k
 !
cuºítM¨k
) &&

684 (
	`Wókî
(
mOut
->
wÆkSåígth
, 
be°OutSåígth
))) {

685 
be°
 = 
m
;

686 
be°OutSåígth
 = 
mOut
->
wÆkSåígth
;

689  
be°
;

690 
	}
}

692 
Boﬁón
 
	$AddPr›ag©e
(
C⁄°øöt
 
c
)

694 
Li°
 
todo
;

695 
C⁄°øöt
 
√xtC
;

696 
V¨übÀ
 
out
;

698 
todo
 = 
	`Li°_Cª©e
(8);

699 
√xtC
 = 
c
;

700 
√xtC
 !
NULL
) {

701 
out
 = 
	`OUT_VAR
(
√xtC
);

702 i‡(
out
->
m¨k
 =
cuºítM¨k
) {

704 
	`In¸emíèlRemove
(
c
);

705  
Ál£
;

707 
	`Reˇlcuœã
(
√xtC
);

708 
√xtC
 = 
	`NextDown°ªamC⁄°øöt
(
todo
, 
out
);

710 
	`Li°_De°roy
(
todo
);

711  
åue
;

712 
	}
}

716 
Li°
 
	gunßtisfõd
;

717 
Såígth
 
	g°ªngth
;

719 
	$AddAtSåígth
(
C⁄°øöt
 
c
)

721 i‡(
c
->
°ªngth
 =°ªngthË
	`In¸emíèlAdd
(c);

722 
	}
}

724 
	$CﬁÀ˘Unßtisfõd
(
C⁄°øöt
 
c
)

726 i‡(!
	`SATISFIED
(
c
)Ë
	`Li°_Add
(
unßtisfõd
, c);

727 
	}
}

729 
	$In¸emíèlRemove
(
C⁄°øöt
 
c
)

731 
V¨übÀ
 
out
;

732 
i
;

734 
out
 = 
	`OUT_VAR
(
c
);

735 
c
->
whichMëhod
 = 
NO_METHOD
;

736 
i
 = 
c
->
v¨Cou¡
 - 1; i >= 0; i--) {

737 
	`Li°_Remove
((
c
->
v¨übÀs
[
i
])->
c⁄°øöts
, (
EÀmít
) c);

739 
unßtisfõd
 = 
	`Li°_Cª©e
(8);

740 
	`RemovePr›ag©eFrom
(
out
);

741 
°ªngth
 = 
S_ªquúed
; såígth <
S_wóke°
; strength++) {

742 
	`Li°_Do
(
unßtisfõd
, 
AddAtSåígth
);

744 
	`Li°_De°roy
(
unßtisfõd
);

745 
	}
}

747 
	$RemovePr›ag©eFrom
(
V¨übÀ
 
v
)

749 
C⁄°øöt
 
√xtC
;

750 
Li°
 
todo
;

752 
v
->
dëîmöedBy
 = 
NULL
;

753 
v
->
wÆkSåígth
 = 
S_wóke°
;

754 
v
->
°ay
 = 
åue
;

755 
todo
 = 
	`Li°_Cª©e
(8);

756 
åue
) {

757 
	`Li°_Do
(
v
->
c⁄°øöts
, 
CﬁÀ˘Unßtisfõd
);

758 
√xtC
 = 
	`NextDown°ªamC⁄°øöt
(
todo
, 
v
);

759 i‡(
√xtC
 =
NULL
) {

762 
	`Reˇlcuœã
(
√xtC
);

763 
v
 = 
	`OUT_VAR
(
√xtC
);

766 
	`Li°_De°roy
(
todo
);

767 
	}
}

771 
	$Reˇlcuœã
(
C⁄°øöt
 
c
)

773 
V¨übÀ
 
out
;

775 
out
 = 
	`OUT_VAR
(
c
);

776 
out
->
wÆkSåígth
 = 
	`OuçutWÆkSåígth
(
c
);

777 
out
->
°ay
 = 
	`C⁄°™tOuçut
(
c
);

778 i‡(
out
->
°ay
Ë
c
->
	`execuã
(c);

779 
	}
}

781 
	$OuçutWÆkSåígth
(
C⁄°øöt
 
c
)

783 
outIndex
, 
m
, 
mOutIndex
;

784 
Såígth
 
möSåígth
;

786 
möSåígth
 = 
c
->
°ªngth
;

787 
outIndex
 = 
c
->
mëhodOuts
[c->
whichMëhod
];

788 
m
 = 
c
->
mëhodCou¡
 - 1; m >= 0; m--) {

789 
mOutIndex
 = 
c
->
mëhodOuts
[
m
];

790 i‡((
mOutIndex
 !
outIndex
) &&

791 (
	`Wókî
(
c
->
v¨übÀs
[
mOutIndex
]->
wÆkSåígth
, 
möSåígth
))) {

792 
möSåígth
 = 
c
->
v¨übÀs
[
mOutIndex
]->
wÆkSåígth
;

795  
möSåígth
;

796 
	}
}

798 
Boﬁón
 
	$C⁄°™tOuçut
(
C⁄°øöt
 
c
)

800 
outIndex
, 
i
;

802 i‡(
c
->
öputFœg
Ë 
Ál£
;

803 
outIndex
 = 
c
->
mëhodOuts
[c->
whichMëhod
];

804 
i
 = 
c
->
v¨Cou¡
 - 1; i >= 0; i--) {

805 i‡(
i
 !
outIndex
) {

806 i‡(!
c
->
v¨übÀs
[
i
]->
°ay
Ë 
Ál£
;

809  
åue
;

810 
	}
}

814 
	$NewM¨k
()

816 
cuºítM¨k
++;

817 
	}
}

819 
C⁄°øöt
 
	$NextDown°ªamC⁄°øöt
(
Li°
 
todo
, 
V¨übÀ
 
v¨übÀ
)

821 
Li°
 
ÆlC
 = 
v¨übÀ
->
c⁄°øöts
;

822 
C⁄°øöt
 *
√xtPå
 = (C⁄°øöà*Ë&(
ÆlC
->
¶Ÿs
[ÆlC->
fú°
]);

823 
C⁄°øöt
 *
œ°På
 = (C⁄°øöà*Ë&(
ÆlC
->
¶Ÿs
[ÆlC->
œ°
]);

824 
C⁄°øöt
 
dëîmöögC
 = 
v¨übÀ
->
dëîmöedBy
;

825 
C⁄°øöt
 
fú°
 = 
NULL
;

827  ; 
√xtPå
 <
œ°På
;ÇextPtr++) {

828 i‡((*
√xtPå
 !
dëîmöögC
Ë&& 
	`SATISFIED
(*nextPtr)) {

829 i‡(
fú°
 =
NULL
) {

830 
fú°
 = *
√xtPå
;

832 
	`Li°_Add
(
todo
, *
√xtPå
);

836 i‡(
fú°
 =
NULL
) {

837 
fú°
 = (
C⁄°øöt
Ë
	`Li°_RemoveFú°
(
todo
);

839  
fú°
;

840 
	}
}

850 
	#v¨
(
i
Ë((
c
->
v¨übÀs
[i])->
vÆue
)

	)

854 
C⁄°øöt
 
	$SèyC
(
V¨übÀ
 
v
, 
Såígth
 
°ªngth
)

856 
C⁄°øöt
 
√w
 = 
	`C⁄°øöt_Cª©e
(1, 
°ªngth
);

857 
√w
->
v¨übÀs
[0] = 
v
;

858 
√w
->
mëhodCou¡
 = 1;

859 
√w
->
mëhodOuts
[0] = 0;

860 
	`AddC⁄°øöt
(
√w
);

861  
√w
;

862 
	}
};

866 
C⁄°øöt
 
	$EdôC
(
V¨übÀ
 
v
, 
Såígth
 
°ªngth
)

868 
C⁄°øöt
 
√w
 = 
	`C⁄°øöt_Cª©e
(1, 
°ªngth
);

869 
√w
->
öputFœg
 = 
åue
;

870 
√w
->
v¨übÀs
[0] = 
v
;

871 
√w
->
mëhodCou¡
 = 1;

872 
√w
->
mëhodOuts
[0] = 0;

873 
	`AddC⁄°øöt
(
√w
);

874  
√w
;

875 
	}
};

879 
	$EquÆsC_Execuã
(
C⁄°øöt
 
c
)

882 
c
->
whichMëhod
) {

884 
	`v¨
(0) = var(1);

887 
	`v¨
(1) = var(0);

890 
	}
}

892 
C⁄°øöt
 
	$EquÆsC
(
V¨übÀ
 
a
, V¨übÀ 
b
, 
Såígth
 
°ªngth
)

894 
C⁄°øöt
 
√w
 = 
	`C⁄°øöt_Cª©e
(2, 
°ªngth
);

895 
√w
->
execuã
 = 
EquÆsC_Execuã
;

896 
√w
->
v¨übÀs
[0] = 
a
;

897 
√w
->
v¨übÀs
[1] = 
b
;

898 
√w
->
mëhodCou¡
 = 2;

899 
√w
->
mëhodOuts
[0] = 0;

900 
√w
->
mëhodOuts
[1] = 1;

901 
	`AddC⁄°øöt
(
√w
);

902  
√w
;

903 
	}
};

907 
	$AddC_Execuã
(
C⁄°øöt
 
c
)

910 
c
->
whichMëhod
) {

912 
	`v¨
(2) = var(0) + var(1);

915 
	`v¨
(1) = var(2) - var(0);

918 
	`v¨
(0) = var(2) - var(1);

921 
	}
}

923 
C⁄°øöt
 
	$AddC
(
V¨übÀ
 
a
, V¨übÀ 
b
, V¨übÀ 
sum
, 
Såígth
 
°ªngth
)

925 
C⁄°øöt
 
√w
 = 
	`C⁄°øöt_Cª©e
(3, 
°ªngth
);

926 
√w
->
execuã
 = 
AddC_Execuã
;

927 
√w
->
v¨übÀs
[0] = 
a
;

928 
√w
->
v¨übÀs
[1] = 
b
;

929 
√w
->
v¨übÀs
[2] = 
sum
;

930 
√w
->
mëhodCou¡
 = 3;

931 
√w
->
mëhodOuts
[0] = 2;

932 
√w
->
mëhodOuts
[1] = 1;

933 
√w
->
mëhodOuts
[2] = 0;

934 
	`AddC⁄°øöt
(
√w
);

935  
√w
;

936 
	}
};

940 
	$SˇÀOff£tC_Execuã
(
C⁄°øöt
 
c
)

943 
c
->
whichMëhod
) {

945 
	`v¨
(3) = (var(0) * var(1)) + var(2);

948 
	`v¨
(0) = (var(3) - var(2)) / var(1);

951 
	}
}

953 
C⁄°øöt
 
	$SˇÀOff£tC
(
V¨übÀ
 
§c
, V¨übÀ 
sˇÀ
, V¨übÀ 
off£t
,

954 
V¨übÀ
 
de°
, 
Såígth
 
°ªngth
)

956 
C⁄°øöt
 
√w
 = 
	`C⁄°øöt_Cª©e
(4, 
°ªngth
);

957 
√w
->
execuã
 = 
SˇÀOff£tC_Execuã
;

958 
√w
->
v¨übÀs
[0] = 
§c
;

959 
√w
->
v¨übÀs
[1] = 
sˇÀ
;

960 
√w
->
v¨übÀs
[2] = 
off£t
;

961 
√w
->
v¨übÀs
[3] = 
de°
;

962 
√w
->
mëhodCou¡
 = 2;

963 
√w
->
mëhodOuts
[0] = 3;

964 
√w
->
mëhodOuts
[1] = 0;

965 
	`AddC⁄°øöt
(
√w
);

966  
√w
;

967 
	}
};

975 
	g°¨tTime
;

977 
	$Mûli£c⁄ds
()

979 
mûli£c⁄dsPîClock
 = 
CLOCKS_PER_SEC
 / 1000;

980  (
	`˛ock
(Ë/ 
mûli£c⁄dsPîClock
);

981 
	}
}

983 
	$Sèπ
()

985 
°¨tTime
 = 
	`Mûli£c⁄ds
();

986 
	}
}

988 
	$Föish
(*
mûli£c⁄ds
)

990 *
mûli£c⁄ds
 = 
	`Mûli£c⁄ds
(Ë- 
°¨tTime
;

991 
	}
}

1008 
	$ChaöTe°
(
n
)

1010 
m£cs
, 
i
;

1011 
«me
[20];

1012 
V¨übÀ
 
¥ev
, 
v
, 
fú°
, 
œ°
;

1013 
C⁄°øöt
 
edôC
;

1014 
Li°
 
∂™
;

1016 
	`InôDñèBlue
();

1017 
¥ev
 = 
fú°
 = 
œ°
 = 
NULL
;

1019 
i
 = 0; i < 
n
; i++) {

1020 
	`•rötf
(
«me
, "v%ld", 
i
);

1021 
v
 = 
	`V¨übÀ_Cª©e
(
«me
, 0);

1022 i‡(
¥ev
 !
NULL
) {

1023 
	`EquÆsC
(
¥ev
, 
v
, 
S_ªquúed
);

1025 i‡(
i
 =0Ë
fú°
 = 
v
;

1026 i‡(
i
 =(
n
-1)Ë
œ°
 = 
v
;

1027 
¥ev
 = 
v
;

1029 
	`SèyC
(
œ°
, 
S_deÁu…
);

1030 
edôC
 = 
	`EdôC
(
fú°
, 
S_°r⁄gDeÁu…
);

1031 
∂™
 = 
	`Exåa˘PœnFromC⁄°øöt
(
edôC
);

1032 
i
 = 0; i < 100; i++) {

1033 
fú°
->
vÆue
 = 
i
;

1034 
	`ExecuãPœn
(
∂™
);

1035 i‡(
œ°
->
vÆue
 !
i
)

1036 
	`Eº‹
("ChainTest failed!");

1038 
	`Li°_De°roy
(
∂™
);

1039 
	`De°royC⁄°øöt
(
edôC
);

1040 
	}
}

1051 
	$Ch™ge
(
V¨übÀ
 
v
, 
√wVÆue
)

1053 
C⁄°øöt
 
edôC
;

1054 
i
, 
m£cs
;

1055 
Li°
 
∂™
;

1057 
edôC
 = 
	`EdôC
(
v
, 
S_°r⁄gDeÁu…
);

1058 
∂™
 = 
	`Exåa˘PœnFromC⁄°øöt
(
edôC
);

1059 
v
->
vÆue
 = 
√wVÆue
;

1060 
i
 = 0; i < 10; i++) {

1061 
	`ExecuãPœn
(
∂™
);

1063 
	`Li°_De°roy
(
∂™
);

1064 
	`De°royC⁄°øöt
(
edôC
);

1065 
	}
}

1067 
	$Proje˘i⁄Te°
(
n
)

1069 
V¨übÀ
 
§c
, 
sˇÀ
, 
off£t
, 
de°
;

1070 
m£cs
, 
i
;

1071 
«me
[20];

1072 
Li°
 
de°s
;

1074 
	`InôDñèBlue
();

1076 
sˇÀ
 = 
	`V¨übÀ_Cª©e
("scale", 10);

1077 
off£t
 = 
	`V¨übÀ_Cª©e
("offset", 1000);

1078 
de°s
 = 
	`Li°_Cª©e
(
n
);

1080 
i
 = 1; i <
n
; i++) {

1082 
	`•rötf
(
«me
, "§c%ld", 
i
);

1083 
§c
 = 
	`V¨übÀ_Cª©e
(
«me
, 
i
);

1084 
	`•rötf
(
«me
, "de°%ld", 
i
);

1085 
de°
 = 
	`V¨übÀ_Cª©e
(
«me
, 
i
);

1086 
	`Li°_Add
(
de°s
, 
de°
);

1089 
	`SèyC
(
§c
, 
S_deÁu…
);

1092 
	`SˇÀOff£tC
(
§c
, 
sˇÀ
, 
off£t
, 
de°
, 
S_ªquúed
);

1094 
	`Ch™ge
(
§c
, 17);

1095 i‡(
de°
->
vÆue
 != 1170)

1096 
	`Eº‹
("Projection Test 1 failed!");

1098 
	`Ch™ge
(
de°
, 1050);

1099 i‡(
§c
->
vÆue
 != 5)

1100 
	`Eº‹
("Projection Test 2 failed!");

1102 
	`Ch™ge
(
sˇÀ
, 5);

1103 
i
 = 1; i < 
	`Li°_Size
(
de°s
); ++i)

1104 i‡(((
V¨übÀ
)
	`Li°_At
(
de°s
, 
i
 - 1))->
vÆue
 != i * 5 + 1000)

1105 
	`Eº‹
("Projection Test 3 failed!");

1107 
	`Ch™ge
(
off£t
, 2000);

1108 
i
 = 1; i < 
	`Li°_Size
(
de°s
); ++i)

1109 i‡(((
V¨übÀ
)
	`Li°_At
(
de°s
, 
i
 - 1))->
vÆue
 != i * 5 + 2000)

1110 
	`Eº‹
("Projection Test 4 failed!");

1112 
	`Li°_De°roy
(
de°s
);

1113 
	}
}

1115 
	$run_dñèblue
(
n
)

1117 c⁄° 
ôî©i⁄s
= 1;

1118 
j
;

1119 
m£cs
;

1121 
	`Sèπ
();

1122 
j
0; j < 
ôî©i⁄s
; ++j) {

1123 
	`ChaöTe°
(
n
);

1124 
	`Proje˘i⁄Te°
(
n
);

1126 
	`Föish
(&
m£cs
);

1131 
	}
}

	@fannkuchredux.c

10 
	~<°dio.h
>

11 
	~<°dlib.h
>

13 
	~"bích-‰amew‹k.h
"

14 
	~"nvmÆloc_wøp.h
"

16 
ölöe
 
	$max
(
a
, 
b
)

18  
a
 > 
b
 ?á : b;

19 
	}
}

23 
	gªf_checksum
 = 73196;

24 
	gªf_Êùs
 = 38;

26 
	$Á¬kuchªdux
(
n
)

28 *
≥rm
;

29 
≥rm1
[
n
];

30 
cou¡
[
n
];

31 
maxFlùsCou¡
 = 0;

32 
≥rmCou¡
 = 0;

33 
checksum
 = 0;

35 
i
;

37 
≥rm
 = (*)
	`Æloˇã_mem
(
n
);

39 
i
=0; i<
n
; i+=1)

40 
≥rm1
[
i
] = i;

41 
r
 = 
n
;

44 
r
 != 1) {

45 
cou¡
[
r
-1] =Ñ;

46 
r
 -= 1;

49 
i
=0; i<
n
; i+=1)

50 
≥rm
[
i
] = 
≥rm1
[i];

51 
ÊùsCou¡
 = 0;

52 
k
;

54  !((
k
 = 
≥rm
[0]) == 0) ) {

55 
k2
 = (
k
+1) >> 1;

56 
i
=0; i<
k2
; i++) {

57 
ãmp
 = 
≥rm
[
i
];Öîm[i] =Öîm[
k
-i];Öerm[k-i] =Åemp;

59 
ÊùsCou¡
 += 1;

62 
maxFlùsCou¡
 = 
	`max
(maxFlùsCou¡, 
ÊùsCou¡
);

63 
checksum
 +
≥rmCou¡
 % 2 =0 ? 
ÊùsCou¡
 : -flipsCount;

67 i‡(
r
 =
n
) {

68 i‡(
n
 =10 && 
checksum
 !
ªf_checksum
)  -1;

69 i‡(
n
 =10 && 
maxFlùsCou¡
 !
ªf_Êùs
)  -1;

73 
≥rm0
 = 
≥rm1
[0];

74 
i
 = 0;

75 
i
 < 
r
) {

76 
j
 = 
i
 + 1;

77 
≥rm1
[
i
] =Öîm1[
j
];

78 
i
 = 
j
;

80 
≥rm1
[
r
] = 
≥rm0
;

81 
cou¡
[
r
] = count[r] - 1;

82 i‡(
cou¡
[
r
] > 0) ;

83 
r
++;

85 
≥rmCou¡
++;

87 
	}
}

98 
	$run_Á¬kuch
(
n
) {

99  
	`Á¬kuchªdux
(
n
);

100 
	}
}

	@fasta.c

8 
	~<as£π.h
>

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

11 
	~<°rög.h
>

12 
	~"bích-‰amew‹k.h
"

13 
	~"bích°rögio.h
"

14 
	~"nvmÆloc_wøp.h
"

16 
	#ARRAY_SIZE
(
a
Ë(◊)/◊[0]))

	)

17 
	#u∆ikñy
(
x
Ë
	`__buûtö_ex≥˘
((x), 0)

	)

19 
	#IM
 139968

	)

20 
	#IA
 3877

	)

21 
	#IC
 29573

	)

23 
	#LINE_LEN
 60

	)

24 
	#LOOKUP_SIZE
 4096

	)

25 
	#LOOKUP_SCALE
 (()(
LOOKUP_SIZE
 - 1))

	)

27 #ifde‡
ARRAYFILE


28 
	#bích_°dout
 
¨øyfûe_°dout


	)

29 #unde‡
fwrôe_u∆ocked


30 
	#Âuts_u∆ocked
 
¨øyfûe_Âuts


	)

31 
	#fwrôe_u∆ocked
 
¨øyfûe_fwrôe


	)

32 
	#Âutc_u∆ocked
 
¨øyfûe_Âutc


	)

34 
	#bích_°dout
 
°dout


	)

35 #i‚de‡
__GLIBC__


36 
	#Âuts_u∆ocked
 
Âuts


	)

37 
	#fwrôe_u∆ocked
 
fwrôe


	)

38 
	#Âutc_u∆ocked
 
Âutc


	)

42 *
	gÁ°a_ouçut
 = 
NULL
;

43 
	gÁ°a_ouçut_Àn
;

45 
	tøndom_t
;

48 
	$øndom_öô
(
øndom_t
 *
øndom
) {

49 *
øndom
 = 42;

50 
	}
}

53 
ölöe


55 
	$øndom_√xt_lookup
(
øndom_t
 *
øndom
) {

56 *
øndom
 = (*øndom*
IA
 + 
IC
)%
IM
;

58  (*
øndom
)*(
LOOKUP_SCALE
/
IM
);

59 
	}
}

61 
	samöo_acid
 {

62 
	msym
;

63 
	m¥ob
;

64 
	m˝rob_lookup
;

68 
	$ª≥©
(c⁄° *
Æu
, c⁄° *
tôÀ
, 
n
) {

69 
Àn
 = 
	`°æí
(
Æu
);

70 
buf„r
[
Àn
 + 
LINE_LEN
];

71 
pos
 = 0;

73 
	`mem˝y
(
buf„r
, 
Æu
, 
Àn
);

74 
	`mem˝y
(
buf„r
 + 
Àn
, 
Æu
, 
LINE_LEN
);

76 
	`Âuts_u∆ocked
(
tôÀ
, 
bích_°dout
);

77 
n
 > 0) {

78 
byãs
 = 
n
 > 
LINE_LEN
 ? LINE_LEN :Ç;

80 
	`fwrôe_u∆ocked
(
buf„r
 + 
pos
, 
byãs
, 1, 
bích_°dout
);

81 
pos
 +
byãs
;

82 i‡(
pos
 > 
Àn
) {

83 
pos
 -
Àn
;

85 
	`Âutc_u∆ocked
('\n', 
bích_°dout
);

86 
n
 -
byãs
;

88 
	}
}

101 
	$fûl_lookup
(
amöo_acid
 **
lookup
, amöo_acid *amöo_acid, 
amöo_acid_size
) {

102 
p
 = 0;

103 
i
 = 0; i < 
amöo_acid_size
; i++) {

104 
p
 +
amöo_acid
[
i
].
¥ob
;

105 
amöo_acid
[
i
].
˝rob_lookup
 = 
p
*
LOOKUP_SCALE
;

109 
amöo_acid
[
amöo_acid_size
 - 1].
˝rob_lookup
 = 
LOOKUP_SIZE
 - 1;

111 
i
 = 0, 
j
 = 0; i < 
LOOKUP_SIZE
; i++) {

112 
amöo_acid
[
j
].
˝rob_lookup
 < 
i
) {

113 
j
++;

115 
lookup
[
i
] = &
amöo_acid
[
j
];

119 
	}
}

122 
	$øndomize
(
amöo_acid
 *amöo_acid, 
amöo_acid_size
,

123 c⁄° *
tôÀ
, 
n
, 
øndom_t
 *
ønd
) {

124 
amöo_acid
 *
lookup
[
LOOKUP_SIZE
];

125 
löe_buf„r
[
LINE_LEN
 + 1];

126 
i
, 
j
;

128 
löe_buf„r
[
LINE_LEN
] = '\n';

130 
	`fûl_lookup
(
lookup
, 
amöo_acid
, 
amöo_acid_size
);

132 
	`Âuts_u∆ocked
(
tôÀ
, 
bích_°dout
);

134 
i
 = 0, 
j
 = 0; i < 
n
; i++, j++) {

135 i‡(
j
 =
LINE_LEN
) {

136 
	`fwrôe_u∆ocked
(
löe_buf„r
, 
LINE_LEN
 + 1, 1, 
bích_°dout
);

137 
j
 = 0;

140 
r
 = 
	`øndom_√xt_lookup
(
ønd
);

141 
amöo_acid
 *
u
 = 
lookup
[()
r
];

142 
	`u∆ikñy
(
u
->
˝rob_lookup
 < 
r
)) {

143 ++
u
;

145 
löe_buf„r
[
j
] = 
u
->
sym
;

147 
löe_buf„r
[
j
] = '\n';

148 
	`fwrôe_u∆ocked
(
löe_buf„r
, 
j
 + 1, 1, 
bích_°dout
);

149 
	}
}

151 
amöo_acid
 
	gamöo_acid
[] = {

170 
amöo_acid
 
	ghomo_ßpõns
[] = {

177 c⁄° 
	gÆu
[] =

187 
	$Á°a_bích
(
n
) {

188 
øndom_t
 
ønd
;

190 
	`øndom_öô
(&
ønd
);

192 
	`ª≥©
(
Æu
, ">ONE Homÿßpõn†Æu\n", 
n
*2);

194 
	`øndomize
(
amöo_acid
, 
	`ARRAY_SIZE
(amino_acid),

195 ">TWO IUBámbiguôy codes\n", 
n
*3, &
ønd
);

197 
	`øndomize
(
homo_ßpõns
, 
	`ARRAY_SIZE
(homo_sapiens),

198 ">THREE Homÿßpõn†‰equícy\n", 
n
*5, &
ønd
);

201 
	}
}

203 
	$run_Á°a
(
n
) {

204 #ifde‡
ARRAYFILE


205 
	`¨øyfûe_£t_kìp_ouçut
(
¨øyfûe_°dout
, 1);

208 
	`Á°a_bích
(
n
);

209 #ifde‡
ARRAYFILE


210 
ouçut_Àn
 = 0;

211 *
ouçut
 = 
	`¨øyfûe_joö
(
¨øyfûe_°dout
, &
ouçut_Àn
);

212 
	`¨øyfûe_ªwöd
(
¨øyfûe_°dout
);

218 
ªt
 = 0;

219 i‡(
n
 == 10000) {

220 
ªt
 = 
	`°rcmp
(
ouçut
, 
Á°a_10k_ªf_ouçut
);

222 
ªt
 = 0;

224 i‡(
Á°a_ouçut
Ë
	`nv_‰ì
(fasta_output);

225 
Á°a_ouçut
 = 
ouçut
;

226 
Á°a_ouçut_Àn
 = 
ouçut_Àn
;

228  
ªt
;

231 
	}
}

	@fasta_10k_ref_output.c

1 c⁄° *
	gÁ°a_10k_ªf_ouçut
 =

1674 
	gÁ°a_10k_ªf_ouçut_Àn
;

	@fasta_file.c

8 
	~<as£π.h
>

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

11 
	~<°rög.h
>

12 
	~"bích-‰amew‹k.h
"

13 
	~"bích°rögio.h
"

14 
	~"nvmÆloc_wøp.h
"

15 
	~<°dio.h
>

16 
	~<°dlib.h
>

17 
	~"IOtimî.h
"

19 
	#ARRAY_SIZE
(
a
Ë(◊)/◊[0]))

	)

20 
	#u∆ikñy
(
x
Ë
	`__buûtö_ex≥˘
((x), 0)

	)

22 
	#IM
 139968

	)

23 
	#IA
 3877

	)

24 
	#IC
 29573

	)

26 
	#LINE_LEN
 60

	)

27 
	#LOOKUP_SIZE
 4096

	)

28 
	#LOOKUP_SCALE
 (()(
LOOKUP_SIZE
 - 1))

	)

30 #ifde‡
ARRAYFILE


31 
	#bích_°dout
 
¨øyfûe_°dout1


	)

32 #unde‡
fwrôe_u∆ocked


33 
	#Âuts_u∆ocked
 
¨øyfûe_Âuts


	)

34 
	#fwrôe_u∆ocked
 
¨øyfûe_fwrôe


	)

35 
	#Âutc_u∆ocked
 
¨øyfûe_Âutc


	)

37 #i‚de‡
__GLIBC__


39 
	#Âuts_u∆ocked
 
Âuts


	)

40 
	#fwrôe_u∆ocked
 
fwrôe


	)

41 
	#Âutc_u∆ocked
 
Âutc


	)

45 
	#OUTFILE
 "Á°a_ouçut"

	)

47 
FILE
 *
	gbích_°dout
;

49 *
	gÁ°a_ouçut
 = 
NULL
;

50 
	gÁ°a_ouçut_Àn
;

54 *
	gÁ°a_10k_ªf_ouçut12
 =

1727 
	tøndom_t
;

1730 
	$øndom_öô
(
øndom_t
 *
øndom
) {

1731 *
øndom
 = 42;

1732 
	}
}

1735 
ölöe


1737 
	$øndom_√xt_lookup
(
øndom_t
 *
øndom
) {

1738 *
øndom
 = (*øndom*
IA
 + 
IC
)%
IM
;

1740  (*
øndom
)*(
LOOKUP_SCALE
/
IM
);

1741 
	}
}

1743 
	samöo_acid
 {

1744 
	msym
;

1745 
	m¥ob
;

1746 
	m˝rob_lookup
;

1750 
	$ª≥©
(c⁄° *
Æu
, c⁄° *
tôÀ
, 
n
) {

1751 
Àn
 = 
	`°æí
(
Æu
);

1752 
buf„r
[
Àn
 + 
LINE_LEN
];

1753 
pos
 = 0;

1755 
	`mem˝y
(
buf„r
, 
Æu
, 
Àn
);

1756 
	`mem˝y
(
buf„r
 + 
Àn
, 
Æu
, 
LINE_LEN
);

1758 
	`_Âuts
(
tôÀ
, 
bích_°dout
);

1759 
n
 > 0) {

1760 
byãs
 = 
n
 > 
LINE_LEN
 ? LINE_LEN :Ç;

1762 
	`_fwrôe
(
buf„r
 + 
pos
, 
byãs
, 1, 
bích_°dout
);

1763 
pos
 +
byãs
;

1764 i‡(
pos
 > 
Àn
) {

1765 
pos
 -
Àn
;

1767 
	`_Âuts
((*)"\n", 
bích_°dout
);

1768 
n
 -
byãs
;

1770 
	}
}

1783 
	$fûl_lookup
(
amöo_acid
 **
lookup
, amöo_acid *amöo_acid, 
amöo_acid_size
) {

1784 
p
 = 0;

1785 
i
 = 0; i < 
amöo_acid_size
; i++) {

1786 
p
 +
amöo_acid
[
i
].
¥ob
;

1787 
amöo_acid
[
i
].
˝rob_lookup
 = 
p
*
LOOKUP_SCALE
;

1791 
amöo_acid
[
amöo_acid_size
 - 1].
˝rob_lookup
 = 
LOOKUP_SIZE
 - 1;

1793 
i
 = 0, 
j
 = 0; i < 
LOOKUP_SIZE
; i++) {

1794 
amöo_acid
[
j
].
˝rob_lookup
 < 
i
) {

1795 
j
++;

1797 
lookup
[
i
] = &
amöo_acid
[
j
];

1801 
	}
}

1804 
	$øndomize
(
amöo_acid
 *amöo_acid, 
amöo_acid_size
,

1805 c⁄° *
tôÀ
, 
n
, 
øndom_t
 *
ønd
) {

1806 
amöo_acid
 *
lookup
[
LOOKUP_SIZE
];

1807 
löe_buf„r
[
LINE_LEN
 + 1];

1808 
i
, 
j
;

1810 
löe_buf„r
[
LINE_LEN
] = '\n';

1812 
	`fûl_lookup
(
lookup
, 
amöo_acid
, 
amöo_acid_size
);

1814 
	`_Âuts
(
tôÀ
, 
bích_°dout
);

1816 
i
 = 0, 
j
 = 0; i < 
n
; i++, j++) {

1817 i‡(
j
 =
LINE_LEN
) {

1818 
	`_fwrôe
(
löe_buf„r
, 
LINE_LEN
 + 1, 1, 
bích_°dout
);

1819 
j
 = 0;

1822 
r
 = 
	`øndom_√xt_lookup
(
ønd
);

1823 
amöo_acid
 *
u
 = 
lookup
[()
r
];

1824 
	`u∆ikñy
(
u
->
˝rob_lookup
 < 
r
)) {

1825 ++
u
;

1827 
löe_buf„r
[
j
] = 
u
->
sym
;

1829 
löe_buf„r
[
j
] = '\n';

1830 
	`_fwrôe
(
löe_buf„r
, 
j
 + 1, 1, 
bích_°dout
);

1831 
	}
}

1833 
amöo_acid
 
	gamöo_acid
[] = {

1852 
amöo_acid
 
	ghomo_ßpõns
[] = {

1859 c⁄° 
	gÆu
[] =

1869 
	$Á°a_bích
(
n
) {

1870 
øndom_t
 
ønd
;

1872 
	`øndom_öô
(&
ønd
);

1874 
	`ª≥©
(
Æu
, ">ONE Homÿßpõn†Æu\n", 
n
*2);

1875 
	`øndomize
(
amöo_acid
, 
	`ARRAY_SIZE
(amino_acid),

1876 ">TWO IUBámbiguôy codes\n", 
n
*3, &
ønd
);

1877 
	`øndomize
(
homo_ßpõns
, 
	`ARRAY_SIZE
(homo_sapiens),

1878 ">THREE Homÿßpõn†‰equícy\n", 
n
*5, &
ønd
);

1881 
	}
}

1883 
	glSize
;

1885 *
	$¨øyfûe_joö1
 (
FILE
 *
pFûe
) {

1886 * 
buf„r
;

1887 
size_t
 
ªsu…
;

1889 if(!
pFûe
Ë
	`Ârötf
(
°dîr
,"invalid file \n");

1893 
	`f£ek
 (
pFûe
 , 0 , 
SEEK_END
);

1894 
lSize
 = 
	`·ñl
 (
pFûe
);

1895 
	`ªwöd
 (
pFûe
);

1899 
buf„r
 = (*Ë
	`mÆloc
 (()*
lSize
);

1900 i‡(
buf„r
 =
NULL
Ë{
	`Âuts
 ("Mem‹yÉº‹",
°dîr
); 
	`exô
 (2);}

1903 
ªsu…
 = 
	`_‰ód
 (
buf„r
,1,
lSize
,
pFûe
);

1904 i‡(
ªsu…
 !
lSize
Ë{
	`Âuts
 ("RódögÉº‹",
°dîr
); 
	`exô
 (3);}

1909 
	`f˛o£
 (
pFûe
);

1911  
buf„r
;

1914 
	}
}

1916 
	$run_Á°a
(
n
) {

1921 
bích_°dout
 = 
	`f›í
 ( 
OUTFILE
 , "w+" );

1922 i‡(
bích_°dout
==
NULL
Ë{
	`Âuts
 ("Fûêîr‹",
°dîr
); 
	`exô
 (1);}

1925 
	`Á°a_bích
(
n
);

1926 
ouçut_Àn
 = 0;

1928 *
ouçut
 = 
	`¨øyfûe_joö1
(
bích_°dout
);

1930 
ªt
 = 0;

1931 i‡(
n
 == 10000) {

1932 
ªt
 = 
	`°rcmp
(
ouçut
, 
Á°a_10k_ªf_ouçut
);

1937 
ªt
 = 0;

1939 
Á°a_ouçut
 = 
ouçut
;

1940 
Á°a_ouçut_Àn
 = 
ouçut_Àn
;

1945 
	`fsync
(
	`fûío
(
bích_°dout
));

1947  
ªt
;

1949 
	}
}

	@fasta_nvram.c

8 
	~<as£π.h
>

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

11 
	~<°rög.h
>

12 
	~"bích-‰amew‹k.h
"

13 
	~"bích°rögio.h
"

14 
	~"nvmÆloc_wøp.h
"

15 
	~<°dio.h
>

16 
	~<°dlib.h
>

17 
	~"IOtimî.h
"

19 
	#ARRAY_SIZE
(
a
Ë(◊)/◊[0]))

	)

20 
	#u∆ikñy
(
x
Ë
	`__buûtö_ex≥˘
((x), 0)

	)

22 
	#IM
 139968

	)

23 
	#IA
 3877

	)

24 
	#IC
 29573

	)

26 
	#LINE_LEN
 60

	)

27 
	#LOOKUP_SIZE
 4096

	)

28 
	#LOOKUP_SCALE
 (()(
LOOKUP_SIZE
 - 1))

	)

30 #ifde‡
ARRAYFILE


31 
	#bích_°dout
 
¨øyfûe_°dout1


	)

32 #unde‡
fwrôe_u∆ocked


33 
	#Âuts_u∆ocked
 
¨øyfûe_Âuts


	)

34 
	#fwrôe_u∆ocked
 
¨øyfûe_fwrôe


	)

35 
	#Âutc_u∆ocked
 
¨øyfûe_Âutc


	)

37 #i‚de‡
__GLIBC__


39 
	#Âuts_u∆ocked
 
Âuts


	)

40 
	#fwrôe_u∆ocked
 
fwrôe


	)

41 
	#Âutc_u∆ocked
 
Âutc


	)

45 
	#OUTFILE
 "Á°a_ouçut"

	)

47 
FILE
 *
	gbích_°dout
;

49 *
	gÁ°a_ouçut
 = 
NULL
;

50 
	gÁ°a_ouçut_Àn
;

52 *
	gouçå
 = 
NULL
;

53 *
	göô_ouçå
 = 
NULL
;

56 *
	gÁ°a_10k_ªf_ouçut12
 =

1729 
	tøndom_t
;

1732 
	$øndom_öô
(
øndom_t
 *
øndom
) {

1733 *
øndom
 = 42;

1734 
	}
}

1737 
ölöe


1739 
	$øndom_√xt_lookup
(
øndom_t
 *
øndom
) {

1740 *
øndom
 = (*øndom*
IA
 + 
IC
)%
IM
;

1742  (*
øndom
)*(
LOOKUP_SCALE
/
IM
);

1743 
	}
}

1745 
	samöo_acid
 {

1746 
	msym
;

1747 
	m¥ob
;

1748 
	m˝rob_lookup
;

1752 
	gtŸÆ_byãs
 = 0;

1755 
	$ª≥©
(c⁄° *
Æu
, c⁄° *
tôÀ
, 
n
) {

1756 
Àn
 = 
	`°æí
(
Æu
);

1757 
buf„r
[
Àn
 + 
LINE_LEN
];

1758 
pos
 = 0;

1759 
idx
 = 0;

1761 
	`mem˝y
(
buf„r
, 
Æu
, 
Àn
);

1762 
	`mem˝y
(
buf„r
 + 
Àn
, 
Æu
, 
LINE_LEN
);

1766 
idx
 = 
	`°æí
(
tôÀ
);

1767 
	`mem˝y
(
ouçå
, 
tôÀ
, 
idx
);

1768 
ouçå
 = ouçå + 
idx
;

1770 
n
 > 0) {

1771 
byãs
 = 
n
 > 
LINE_LEN
 ? LINE_LEN :Ç;

1776 if(
ouçå
 && 
buf„r
) {

1777 
	`mem˝y
(
ouçå
, 
buf„r
 + 
pos
, 
byãs
 * 1);

1778 
ouçå
 = ouçå + (
byãs
 * 1);

1780 
tŸÆ_byãs
 =ÅŸÆ_byã†+ (
byãs
 * 1);

1788 
pos
 +
byãs
;

1789 i‡(
pos
 > 
Àn
) {

1790 
pos
 -
Àn
;

1793 
	`mem˝y
(
ouçå
, "\n", 1);

1794 
ouçå
++;

1795 
n
 -
byãs
;

1798 
	}
}

1811 
	$fûl_lookup
(
amöo_acid
 **
lookup
, amöo_acid *amöo_acid, 
amöo_acid_size
) {

1812 
p
 = 0;

1813 
i
 = 0; i < 
amöo_acid_size
; i++) {

1814 
p
 +
amöo_acid
[
i
].
¥ob
;

1815 
amöo_acid
[
i
].
˝rob_lookup
 = 
p
*
LOOKUP_SCALE
;

1819 
amöo_acid
[
amöo_acid_size
 - 1].
˝rob_lookup
 = 
LOOKUP_SIZE
 - 1;

1821 
i
 = 0, 
j
 = 0; i < 
LOOKUP_SIZE
; i++) {

1822 
amöo_acid
[
j
].
˝rob_lookup
 < 
i
) {

1823 
j
++;

1825 
lookup
[
i
] = &
amöo_acid
[
j
];

1829 
	}
}

1832 
	$øndomize
(
amöo_acid
 *amöo_acid, 
amöo_acid_size
,

1833 c⁄° *
tôÀ
, 
n
, 
øndom_t
 *
ønd
) {

1834 
amöo_acid
 *
lookup
[
LOOKUP_SIZE
];

1835 
löe_buf„r
[
LINE_LEN
 + 1];

1836 
i
, 
j
;

1837 
idx
 = 0;

1839 
löe_buf„r
[
LINE_LEN
] = '\n';

1841 
	`fûl_lookup
(
lookup
, 
amöo_acid
, 
amöo_acid_size
);

1845 
idx
 = 
	`°æí
(
tôÀ
);

1846 
	`mem˝y
(
ouçå
, 
tôÀ
, 
idx
);

1847 
ouçå
 = ouçå + 
idx
;

1849 
i
 = 0, 
j
 = 0; i < 
n
; i++, j++) {

1850 i‡(
j
 =
LINE_LEN
) {

1853 
	`mem˝y
 ( 
ouçå
, 
löe_buf„r
, 
LINE_LEN
 + 1 * 1);

1854 
ouçå
 = ouçå + 
LINE_LEN
 + 1 * 1;

1856 
j
 = 0;

1859 
r
 = 
	`øndom_√xt_lookup
(
ønd
);

1860 
amöo_acid
 *
u
 = 
lookup
[()
r
];

1861 
	`u∆ikñy
(
u
->
˝rob_lookup
 < 
r
)) {

1862 ++
u
;

1864 
löe_buf„r
[
j
] = 
u
->
sym
;

1866 
löe_buf„r
[
j
] = '\n';

1869 
	`mem˝y
 ( 
ouçå
, 
löe_buf„r
, (
j
 + 1) * 1);

1870 
ouçå
 = ouçå + (
j
 + 1) * 1;

1874 
	}
}

1876 
amöo_acid
 
	gamöo_acid
[] = {

1895 
amöo_acid
 
	ghomo_ßpõns
[] = {

1902 c⁄° 
	gÆu
[] =

1912 
	$Á°a_bích
(
n
) {

1913 
øndom_t
 
ønd
;

1915 
	`øndom_öô
(&
ønd
);

1917 
	`ª≥©
(
Æu
, ">ONE Homÿßpõn†Æu\n", 
n
*2);

1918 
	`øndomize
(
amöo_acid
, 
	`ARRAY_SIZE
(amino_acid),

1919 ">TWO IUBámbiguôy codes\n", 
n
*3, &
ønd
);

1920 
	`øndomize
(
homo_ßpõns
, 
	`ARRAY_SIZE
(homo_sapiens),

1921 ">THREE Homÿßpõn†‰equícy\n", 
n
*5, &
ønd
);

1924 
	}
}

1926 
	glSize
;

1928 *
	$¨øyfûe_joö1
 (
FILE
 *
pFûe
) {

1929 * 
buf„r
;

1930 
size_t
 
ªsu…
;

1931 
rq°_°ru˘
 
rq°
;

1937 
rq°
.
byãs
 = 
MAXSIZE
;

1938 
rq°
.
pid
 = 
PROC_ID
;

1939 
rq°
.
id
 = 
CHUNK_ID
;

1941 
buf„r
 = 
	`≤vªad
(
rq°
.
byãs
, &rqst);

1942 
	`Ârötf
(
°dout
, "ªadÜígth %d \n",
rq°
.
byãs
);

1953  
buf„r
;

1956 
	}
}

1958 
	$run_Á°a
(
n
) {

1960 
rq°_°ru˘
 
rq°
;

1961 
ouçut_Àn
 = 0;

1962 
ªt
 = 0;

1964 
rq°
.
byãs
 = 
MAXSIZE
;

1965 
rq°
.
pid
 = 
PROC_ID
;

1966 
rq°
.
id
 = 
CHUNK_ID
;

1971 
ouçå
 = 
	`≤vmÆloc
(
MAXSIZE
, &
rq°
);

1972 
öô_ouçå
 = 
ouçå
;

1974 
	`Á°a_bích
(
n
);

1975 
	`¥ötf
(
°dîr
, "ouçuà%†\n", 
öô_ouçå
 );

1977 #i‚de‡
USE_BENCHMARKING


1978 *
ouçut
 = 
	`¨øyfûe_joö1
(
bích_°dout
);

1980 i‡(
n
 == 10000) {

1981 
ªt
 = 
	`°rcmp
(
öô_ouçå
, 
Á°a_10k_ªf_ouçut
);

1985 
ªt
 = 0;

1989 
Á°a_ouçut
 = 
ouçå
;

1990 
Á°a_ouçut_Àn
 = 
ouçut_Àn
;

1995 
	}
}

	@fft.c

1 
	~<as£π.h
>

2 
	~<°dio.h
>

3 
	~<°döt.h
>

4 
	~<°rög.h
>

5 
	~<m©h.h
>

6 
	~<f·w3.h
>

9 
f·w_∂™
 
	gf·_∂™
;

10 
f·w_com∂ex
 *
	gf·_ouçut
;

11 *
	gf·_öput
;

12 *
	g•e˘rum_ouçut
;

16 
	$v8_ønd
() {

17 
uöt64_t
 
£ed
 = 49734321;

19 
£ed
 = ((seed + 0x7ed55d16LL) + (seed << 12)) & 0xffffffff;

20 
£ed
 = ((seed ^ 0xc761c23cLL) ^ (seed >> 19)) & 0xffffffff;

21 
£ed
 = ((seed + 0x165667b1LL) + (seed << 5)) & 0xffffffff;

22 
£ed
 = ((seed + 0xd3a2646cLL) ^ (seed << 9)) & 0xffffffff;

23 
£ed
 = ((seed + 0xfd7046c5LL) + (seed << 3)) & 0xffffffff;

24 
£ed
 = ((seed ^ 0xb55a4f09LL) ^ (seed >> 16)) & 0xffffffff;

25  ()(
£ed
 & 0xfffffff) / ()(0x10000000);

26 
	}
}

28 
	$£tup_f·
(
size
) {

29 
f·_ouçut
 = 
	`f·w_mÆloc
((
f·w_com∂ex
Ë* 
size
);

30 
f·_öput
 = 
	`f·w_mÆloc
((Ë* 
size
);

31 
f·_∂™
 = 
	`f·w_∂™_d·_r2c_1d
(
size
, 
f·_öput
, 
f·_ouçut
, 
FFTW_ESTIMATE
);

32 
•e˘rum_ouçut
 = 
	`f·w_mÆloc
((Ë* 
size
);

34 
i
 = 0; i < 
size
; i++) {

35 
f·_öput
[
i
] = 
	`v8_ønd
();

39 
	}
}

41 
ölöe
 
	$my_ˇbs
(
f·w_com∂ex
 
n
) {

42  
	`sqπ
(
n
[0] *Ç[0] +Ç[1] *Ç[1]);

43 
	}
}

45 
	$f·_check_ªsu…
(
size
, 
sum
) {

46 
ªf
;

47 
size
) {

49 
ªf
 = 9.241991558475528e+00;

52 
ªf
 = 2.629580990915497e+02;

55 
ªf
 = 0.0;

58 i‡(!
	`Ábs
(
sum
 - 
ªf
 < 1e-10)) {

59 
	`¥ötf
("sizê%d, sum %.15e,Ñe‡%.15e\n", 
size
, 
sum
, 
ªf
);

61 
	}
}

63 
	$run_f·
(
∑øm
) {

65 
	`f·w_execuã
(
f·_∂™
);

66 
sum
 = 0.0;

67 
i
=0; i < 
∑øm
 / 2; i++) {

68 
•e˘rum_ouçut
[
i
] = 2.0 * 
	`my_ˇbs
(
f·_ouçut
[i]Ë/ 
∑øm
;

69 
sum
 +
•e˘rum_ouçut
[
i
];

73 
	`f·_check_ªsu…
(
∑øm
, 
sum
);

76 
	}
}

78 
	$ã¨down_f·
(
∑øm
) {

79 
	`f·w_de°roy_∂™
(
f·_∂™
);

80 
	`f·w_‰ì
(
f·_ouçut
);

81 
	`f·w_‰ì
(
f·_öput
);

82 
	`f·w_‰ì
(
•e˘rum_ouçut
);

83 
	}
}

	@gtthread.h

1 
	~<£tjmp.h
>

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<uni°d.h
>

5 
	~<löux/uni°d.h
>

6 
	~<sig«l.h
>

7 
	~<sys/ty≥s.h
>

8 
	~<sys/time.h
>

9 
	~<sys/waô.h
>

10 
	~<±hªad.h
>

11 
	~<sched.h
>

13 
	#MUTEX_FREE
 -100

	)

15 
	#gâhªad_t
 

	)

17 
	sgâhªad_muãx
 {

18 
	mmuãx
;

19 
	mtid_hﬁdî
;

22 
gâhªad_¸óã
(
gâhªad_t
* 
thid
, 
‚
 (*), *
¨g
);

24 
gâhªad_öô
(
timevÆ
 *
timî
) ;

26 
gâhªad_exô
(* 
exô_code
);

28 
gâhªad_yeûd
();

30 
gâhªad_£lf
();

32 
gâhªad_equÆ
(
t1
, 
t2
);

34 
gâhªad_muãx_öô
(
gâhªad_muãx
 *
muãx
);

36 
gâhªad_muãx_lock
(
gâhªad_muãx
 *
muãx
);

38 
gâhªad_muãx_u∆ock
(
gâhªad_muãx
 *
muãx
);

40 
gâhªad_joö
(
gâid
, ** 
°©us
);

42 
gâhªad_joö_Æl
() ;

	@hash_map.cc

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

5 
	~<io°ªam
>

6 
	~<m≠
>

7 
	~"hash_m≠.h
"

9 
usög
 
«me•a˚
 
	g°d
;

10 
	gm≠
<,
	gsize_t
> 
	gmym≠
;

11 
	gm≠
<,
	gsize_t
>::
ôî©‹
 
ô
;

13 
	$hash_ö£π
–
key
, 
size_t
 
vÆ
 )

15 
ô
 = 
mym≠
.
	`föd
–
key
 );

16 i‡–
ô
 !
mym≠
.
	`íd
())

18 
mym≠
[
key
] = 
vÆ
;

20 
mym≠
[
key
] = 
vÆ
;

22 
	}
}

24 
size_t
 
	$hash_föd
–
key
) {

26 
size_t
 
vÆ
 =0;

28 
ô
 = 
mym≠
.
	`föd
(
key
 );

29 i‡–
ô
 !
mym≠
.
	`íd
())

31 
vÆ
 = 
ô
->
£c⁄d
;

33 
vÆ
 = 0;

35  
vÆ
 ;

36 
	}
}

39 
	$hash_dñëe
–
key
) {

41 
ô
 = 
mym≠
.
	`föd
(
key
 );

42 i‡–
ô
 !
mym≠
.
	`íd
())

44 
mym≠
.
	`îa£
 (
ô
);

47 
	}
}

49 
size_t
 
	$föd_hash_tŸÆ
() {

51 
size_t
 
tŸÆ_vÆ
 =0;

53  
ô
 = 
mym≠
.
	`begö
(); ià!mym≠.
	`íd
(); it++){

54 
tŸÆ_vÆ
 +
ô
->
£c⁄d
;

57  
tŸÆ_vÆ
;

58 
	}
}

	@hash_map.h

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

6 #ifde‡
__˝lu•lus


11 
hash_ö£π
–
key
, 
size_t
 
vÆ
);

12 
size_t
 
hash_föd
–
key
);

13 
hash_dñëe
–
key
);

14 
size_t
 
föd_hash_tŸÆ
();

16 #ifde‡
__˝lu•lus


	@hello_world.cc

1 
	~<as£π.h
>

2 
	~<m©h.h
>

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

5 
	~<°rög.h
>

6 
	~<sys/time.h
>

7 
	~"bích-‰amew‹k.h
"

8 
	~"bích°rögio.h
"

9 
	~"nvmÆloc_wøp.h
"

12 c⁄° 
	gkMöBíchRu¡ime
 = 1000000;

13 
	gbíchm¨k_cou¡
 = 0;

14 
	g°¨ãd
 = 0;

15 
bích_öfo
 
	gbích_öfo_li°
[
MAX_BENCHMARKS
];

16 
run_d©a
 
	gbích_run_d©a
[
MAX_BENCHMARKS
];

18 
	erun_modñ_t
 { 
	mkRunModñRïóãd
, 
	mkRunModñOn˚
 };

19 
run_modñ_t
 
	grun_modñ
;

21 
	$Regi°îBíchm¨k
(*
«me
, 
bích_fun˘i⁄
 
íåy
, 
∑øm
, 
time_ªf
, bích_fun˘i⁄ 
£tup
, bích_fun˘i⁄ 
ã¨down
) {

22 i‡(
bíchm¨k_cou¡
 =
MAX_BENCHMARKS
) {

24 
	`exô
(1);

26 
bích_öfo_li°
[
bíchm¨k_cou¡
].
«me
 =Çame;

27 
bích_öfo_li°
[
bíchm¨k_cou¡
].
run
 = 
íåy
;

28 
bích_öfo_li°
[
bíchm¨k_cou¡
].
£tup
 = setup;

29 
bích_öfo_li°
[
bíchm¨k_cou¡
].
ã¨down
 =Åeardown;

30 
bích_öfo_li°
[
bíchm¨k_cou¡
].
time_ªf
 =Åime_ref;

31 
bích_öfo_li°
[
bíchm¨k_cou¡
].
∑øm
 =Öaram;

32 
bíchm¨k_cou¡
++;

33 
	}
}

35 
	$CÀ¨Bíchm¨ks
() {

36 
i
 = 0; i < 
bíchm¨k_cou¡
; i++Ë
	`‰ì
(
bích_öfo_li°
[i].
«me
);

37 
bíchm¨k_cou¡
 = 0;

38 
	}
}

40 
	$RunO√
(
bích_öfo
 *
bích
, 
run_d©a
 *
d©a
) {

41 
timevÆ
 
°¨t
, 
íd
;

42 
diff
;

43 i‡(
bích
->
£tup
Ëbích->
	`£tup
(bích->
∑øm
);

44 i‡(
run_modñ
 =
kRunModñRïóãd
) {

47 
bích
->
	`run
(bích->
∑øm
);

49 
	`gëtimeofday
(&
°¨t
, 
NULL
);

50 i‡(
run_modñ
 =
kRunModñRïóãd
) {

51 
d©a
->
runs
 = 0; d©a->
ñ≠£d
 < 
kMöBíchRu¡ime
 || data->runs < 16;

52 
d©a
->
runs
++) {

53 
	`as£π
(
bích
->
	`run
(bích->
∑øm
) == 0);

54 
	`gëtimeofday
(&
íd
, 
NULL
);

55 
diff
 = (
íd
.
tv_£c
 - 
°¨t
.tv_sec) * 1000000 +

56 (
íd
.
tv_u£c
 - 
°¨t
.tv_usec);

57 
d©a
->
ñ≠£d
 = 
diff
;

60 
	`as£π
(
bích
->
	`run
(bích->
∑øm
) == 0);

61 
	`gëtimeofday
(&
íd
, 
NULL
);

62 
diff
 = (
íd
.
tv_£c
 - 
°¨t
.tv_sec) * 1000000 +

63 (
íd
.
tv_u£c
 - 
°¨t
.tv_usec);

64 
d©a
->
ñ≠£d
 = 
diff
;

65 
d©a
->
runs
 = 1;

67 i‡(
bích
->
ã¨down
Ëbích->
	`ã¨down
(bích->
∑øm
);

69 
	}
}

71 
	$RunAŒ
() {

72 
i
;

73 
i
 = 0; i < 
bíchm¨k_cou¡
; i++) {

74 
run_d©a
 *
rd
 = &
bích_run_d©a
[
i
];

75 
bích_öfo
 *
bi
 = &
bích_öfo_li°
[
i
];

76 
u£c_≥r_run
;

77 
	`¥ötf
("Ru¬ög %s\n", 
bi
->
«me
);

78 ++
°¨ãd
;

80 
	`RunO√
(
bi
, 
rd
);

81 
u£c_≥r_run
 = ()
rd
->
ñ≠£d
 / (Ïd->
runs
;

82 
rd
->
sc‹e
 = 100.0 * 
bi
->
time_ªf
 / 
u£c_≥r_run
;

83 
	`¥ötf
("u£c_≥r_ru¿%f\n", 
u£c_≥r_run
);

86 
°¨ãd
 = 0;

87 
	}
}

89 
	$PrötSc‹es
() {

90 
i
;

91 
i
 = 0; i < 
bíchm¨k_cou¡
; i++) {

92 
	`¥ötf
("Benchmark %s: usec %d, iters %d, usec/run %d score %.2f\n",

93 
bích_öfo_li°
[
i
].
«me
,

94 
bích_run_d©a
[
i
].
ñ≠£d
,

95 
bích_run_d©a
[
i
].
runs
,

96 
bích_run_d©a
[
i
].
ñ≠£d
 / bích_run_d©a[i].
runs
,

97 
bích_run_d©a
[
i
].
sc‹e
);

99 
	}
}

101 
	$GeomëricMón
() {

102 
i
;

103 
log_tŸÆ
 = 0.0;

104 
i
 = 0; i < 
bíchm¨k_cou¡
; i++) {

105 
log_tŸÆ
 +
	`log
(
bích_run_d©a
[
i
].
sc‹e
);

107  
	`pow
(
M_E
, 
log_tŸÆ
 / 
bíchm¨k_cou¡
);

108 
	}
}

110 
	$SëupSmÆlBíchm¨ks
() {

111 
	`Regi°îBíchm¨k
(
	`°rdup
("Rich¨ds"), 
run_rich¨ds
, 10000, 2499257,

112 
NULL
, NULL);

113 
	`Regi°îBíchm¨k
(
	`°rdup
("Dñèblue"), 
run_dñèblue
, 100, 429919,

114 
NULL
, NULL);

115 
	`Regi°îBíchm¨k
(
	`°rdup
("F™nkuchªdux"), 
run_Á¬kuch
, 10, 64052288,

116 
NULL
, NULL);

119 
	`Regi°îBíchm¨k
(
	`°rdup
("S≥˘ø ‹m"), 
run_•e˘ø ‹m
, 350, 150020779,

120 
NULL
, NULL);

121 
	`Regi°îBíchm¨k
(
	`°rdup
("Fa°a"), 
run_Á°a
, 10000, 51667385, 
NULL
, NULL);

122 
	`Regi°îBíchm¨k
(
	`°rdup
("Revcomp"), 
run_ªvcomp
, 0, 23542857, 
NULL
, NULL);

123 
	`Regi°îBíchm¨k
(
	`°rdup
("Bö¨yåìs"), 
run_bö¨yåìs
, 15, 383306452,

124 
NULL
, NULL);

125 
	`Regi°îBíchm¨k
(
	`°rdup
("Knu˛eŸide"), 
run_knu˛eŸide
, 0, 433893130,

126 
NULL
, NULL);

131 
run_modñ
 = 
kRunModñRïóãd
;

132 
	}
}

134 
	$SëupL¨geBíchm¨ks
() {

135 
	`Regi°îBíchm¨k
(
	`°rdup
("Rich¨ds"), 
run_rich¨ds
, 1000000, 2499257,

136 
NULL
, NULL);

137 
	`Regi°îBíchm¨k
(
	`°rdup
("Dñèblue"), 
run_dñèblue
, 10000, 429919,

138 
NULL
, NULL);

139 
	`Regi°îBíchm¨k
(
	`°rdup
("F™nkuchªdux"), 
run_Á¬kuch
, 11, 64052288,

140 
NULL
, NULL);

143 
	`Regi°îBíchm¨k
(
	`°rdup
("S≥˘ø ‹m"), 
run_•e˘ø ‹m
, 5500, 150020779,

144 
NULL
, NULL);

145 
	`Regi°îBíchm¨k
(
	`°rdup
("Fa°a"), 
run_Á°a
, 3000000, 51667385, 
NULL
, NULL);

146 
	`Regi°îBíchm¨k
(
	`°rdup
("Revcomp"), 
run_ªvcomp
, 0, 23542857, 
NULL
, NULL);

147 
	`Regi°îBíchm¨k
(
	`°rdup
("Bö¨yåìs"), 
run_bö¨yåìs
, 18, 383306452,

148 
NULL
, NULL);

149 
	`Regi°îBíchm¨k
(
	`°rdup
("Knu˛eŸide"), 
run_knu˛eŸide
, 0, 433893130,

150 
NULL
, NULL);

155 
run_modñ
 = 
kRunModñOn˚
;

156 
	}
}

160 
	$‰amew‹k_maö
(
bíchm¨k_size_t
 
size
) {

161 
sc‹e
;

162 
	`mem£t
(
bích_öfo_li°
, 0, (bench_info_list));

163 
	`mem£t
(
bích_run_d©a
, 0, (bench_run_data));

165 #ifde‡
ARRAYFILE


166 
¨øyfûe_°dout
 = 
	`¨øyfûe_f›í
("arrayfile", "w");

167 
	`as£π
(
¨øyfûe_°dout
);

170 i‡(
size
 =
kBíchm¨kSmÆl
) {

171 
	`SëupSmÆlBíchm¨ks
();

173 
	`SëupL¨geBíchm¨ks
();

176 
Á°a_10k_ªf_ouçut_Àn
 = 
	`°æí
(
Á°a_10k_ªf_ouçut
);

178 
	`¥ötf
("%d bíchm¨k†ªgi°îed\n", 
bíchm¨k_cou¡
);

179 
	`RunAŒ
();

180 
	`PrötSc‹es
();

181 
sc‹e
 = (Ë
	`GeomëricMón
();

182 #ifde‡
ARRAYFILE


183 
	`¨øyfûe_f˛o£
(
¨øyfûe_°dout
);

184 
¨øyfûe_°dout
 = 
NULL
;

187 
	`¥öt_tŸÆ_°©s
();

189 
	`CÀ¨Bíchm¨ks
();

190 
	`¥ötf
("Aggªg©êsc‹e: %d\n", 
sc‹e
);

191  
sc‹e
;

192 
	}
}

	@knucleotide.c

17 
	#_GNU_SOURCE


	)

18 
	~"sim∂e_hash3.h
"

20 
	~<˘y≥.h
>

21 
	~<±hªad.h
>

22 
	~<sched.h
>

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

26 
	~<sys/mm™.h
>

27 
	~<sys/°©.h
>

28 
	~<uni°d.h
>

29 
	~"bích-‰amew‹k.h
"

30 
	~"bích°rögio.h
"

32 
	~"nvmÆloc_wøp.h
"

34 
	#HT_SIZE
 2000000

	)

36 #ifde‡
ARRAYFILE


37 
	#fgës_u∆ocked
 
°rögfûe_fgës


	)

38 #unde‡
°dö


39 
	#°dö
 
°rögfûe_°dö


	)

41 #i‚de‡
__GLIBC__


42 
	#fgës_u∆ocked
 
fgës


	)

47 
	tuöt8_t
;

48 c⁄° 
uöt8_t
 
	g£À˘‹
[] = { -1, 0,-1, 1, 3,-1,-1, 2 };

49 c⁄° 
	gèbÀ
[] = {'A', 'C', 'G', 'T'};

105 
	sç_íåy
 {

106 *
	mjob
;

107 *
	m∑øm
;

110 
	sç
 {

111 
ç_íåy
 *
	mjobs
;

112 
	mˇ∑côy
;

113 
	msize
;

114 
±hªad_muãx_t
 
	mmuãx
;

117 
ç
 *

118 
	$ç_¸óã
(
max_jobs
) {

119 
ç
 *
poﬁ
 = 
	`Æloˇã_mem
((*pool));

121 
poﬁ
->
jobs
 = 
	`Æloˇã_mem
((
ç_íåy
)*
max_jobs
);

122 
poﬁ
->
ˇ∑côy
 = 
max_jobs
;

123 
poﬁ
->
size
 = 0;

124 
	`±hªad_muãx_öô
(&
poﬁ
->
muãx
, 0);

126  
poﬁ
;

127 
	}
}

130 
	$ç_de°roy
(
ç
 *
poﬁ
) {

131 
	`nv_‰ì
(
poﬁ
->
jobs
);

132 
	`±hªad_muãx_de°roy
(&
poﬁ
->
muãx
);

133 
	`nv_‰ì
(
poﬁ
);

134 
	}
}

137 
	$ç_add_job
(
ç
 *
poﬁ
, *
job
, *
∑øm
) {

138 i‡(
poﬁ
->
size
 <Öoﬁ->
ˇ∑côy
) {

139 
poﬁ
->
jobs
[poﬁ->
size
].
job
 = job;

140 
poﬁ
->
jobs
[poﬁ->
size
].
∑øm
 =Öaram;

141 ++
poﬁ
->
size
;

143 
	}
}

146 
	$_ç_run
(*
∑øm
) {

147 
ç
 *
poﬁ
 = 
∑øm
;

150 (*
job
)(*) = 0;

151 *
∑øm
 = 0;

153 
	`±hªad_muãx_lock
(&
poﬁ
->
muãx
);

154 i‡(
poﬁ
->
size
 > 0) {

155 
job
 = 
poﬁ
->
jobs
[poﬁ->
size
 - 1].job;

156 
∑øm
 = 
poﬁ
->
jobs
[poﬁ->
size
 - 1].param;

157 --
poﬁ
->
size
;

159 
	`±hªad_muãx_u∆ock
(&
poﬁ
->
muãx
);

160 i‡(
job
 == 0) {

163 
	`job
(
∑øm
);

166 
	}
}

169 
	$ç_run
(
ç
 *
poﬁ
, 
max_thªads
) {

170 
±hªad_t
 
thªads
[
max_thªads
];

171 
i
 = 0; i < 
max_thªads
; i++) {

172 
	`±hªad_¸óã
(&
thªads
[
i
], 0, &
_ç_run
, 
poﬁ
);

175 
i
 = 0; i < 
max_thªads
; i++) {

176 
	`±hªad_joö
(
thªads
[
i
], 0);

178 
	}
}

181 
	$ªad_°dö
(*
°dö_size
) {

182 
öput_size
;

183 *
ãmp
 = 
NULL
;

185 #ifde‡
ARRAYFILE


186 
öput_size
 = 
Á°a_ouçut_Àn
;

188 
°©
 stat;

189 
	`f°©
(0, &
°©
);

190 
öput_size
 = 
°©
.
°_size
;

192 *
ªsu…
 = 
	`Æloˇã_mem
(
öput_size
);

195 
	`as£π
(
	`fgës_u∆ocked
(
ªsu…
, 
öput_size
, 
°dö
));

196 } 
	`°∫cmp
(
ªsu…
, ">THREE", 6));

198 
ªad
 = 0;

199 
	`fgës_u∆ocked
(
ªsu…
 + 
ªad
, 
öput_size
 -Ñód, 
°dö
)) {

200 
Àn
 = 
	`°æí
(
ªsu…
 + 
ªad
);

201 i‡(
Àn
 =0 || 
ªsu…
[
ªad
] == '>') {

204 
ªad
 +
Àn
;

205 i‡(
ªsu…
[
ªad
 - 1] == '\n') {

206 
ªad
--;

210 
ªsu…
[
ªad
++] = '>';

212 
ãmp
 = 
	`Æloˇã_mem
(
ªad
);

213 if(!
ãmp
) {

214  
NULL
;

216 
	`mem˝y
(
ãmp
,
ªsu…
, 
ªad
);

218 
	`nv_‰ì
(
ªsu…
);

221 
ªsu…
 = 
ãmp
;

223 *
°dö_size
 = 
ªad
;

225  
ªsu…
;

226 
	}
}

229 
ölöe
 *

230 
	$√xt_ch¨
(*
p
) {

232 ++
p
;

233 } 
	`is•a˚
(*
p
));

235  
p
;

236 
	}
}

239 
ölöe
 
uöt64_t


240 
	$push_ch¨
(
uöt64_t
 
cur
, 
uöt8_t
 
c
) {

241  (
cur
 << 2Ë+ 
£À˘‹
[(
c
 & 7)];

242 
	}
}

244 
uöt64_t


245 
	$∑ck_key
(*
key
, 
Àn
) {

246 
uöt64_t
 
code
 = 0;

247 
i
 = 0; i < 
Àn
; i++) {

248 
code
 = 
	`push_ch¨
(code, *
key
);

249 
key
 = 
	`√xt_ch¨
(key);

252  
code
;

253 
	}
}

256 
	$u≈ack_key
(
uöt64_t
 
key
, 
Àngth
, *
buf„r
) {

257 
i
;

259 
i
 = 
Àngth
 - 1; i > -1; i--) {

260 
buf„r
[
i
] = 
èbÀ
[
key
 & 3];

261 
key
 >>= 2;

263 
buf„r
[
Àngth
] = 0;

264 
	}
}

267 
	$gíî©e_£qí˚s
(*
°¨t
, 
Àngth
, 
‰ame
, 
ht_ht
 *
ht
) {

268 
uöt64_t
 
code
 = 0;

269 
uöt64_t
 
mask
 = (1uŒ << 2*
‰ame
) - 1;

270 *
p
 = 
°¨t
;

271 *
íd
 = 
°¨t
 + 
Àngth
;

275 
i
 = 0; i < 
‰ame
; i++) {

276 
code
 = 
	`push_ch¨
(code, *
p
);

277 ++
p
;

279 
	`ht_föd_√w
(
ht
, 
code
)->
vÆ
++;

281 
p
 < 
íd
) {

282 
code
 = 
	`push_ch¨
(code, *
p
Ë& 
mask
;

283 
	`ht_föd_√w
(
ht
, 
code
)->
vÆ
++;

284 ++
p
;

285 i‡(*
p
 & 8) {

286 i‡(*
p
 & 1) {

287 ++
p
;

292 
	}
}

295 
	$key_cou¡_cmp
(c⁄° *
l
, c⁄° *
r
) {

296 c⁄° 
ht_node
 *
lhs
 = 
l
, *
rhs
 = 
r
;

298 i‡(
lhs
->
vÆ
 !
rhs
->val) {

299  
rhs
->
vÆ
 - 
lhs
->val;

305 i‡(
lhs
->
key
 < 
rhs
->key) {

307 } i‡(
lhs
->
key
 > 
rhs
->key) {

313 
	}
}

315 
	s¥öt_‰eqs_∑øm
 {

316 *
	m°¨t
;

317 
	mÀngth
;

318 
	m‰ame
;

319 *
	mouçut
;

320 
	mouçut_size
;

323 
ht_node
 *

324 
	$ht_vÆues_as_ve˘‹
(
ht_ht
 *
ht
) {

325 
ht_node
 *
v
 = 
	`Æloˇã_mem
(
ht
->
ôems
*(ht_node));

326 
ht_node
 *
n
 = 
	`ht_fú°
(
ht
);

328 
i
 = 0; i < 
ht
->
ôems
; i++) {

329 
v
[
i
] = *
n
;

330 
n
 = 
	`ht_√xt
(
ht
);

333  
v
;

334 
	}
}

337 
	$¥öt_‰eqs
(
¥öt_‰eqs_∑øm
 *
∑øm
) {

338 *
°¨t
 = 
∑øm
->start;

339 
Àngth
 = 
∑øm
->length;

340 
‰ame
 = 
∑øm
->frame;

341 *
ouçut
 = 
∑øm
->output;

342 
ouçut_size
 = 
∑øm
->output_size;

344 
ht_ht
 *
ht
 = 
	`ht_¸óã
(32);

345 
buf„r
[
‰ame
 + 1];

346 
ouçut_pos
 = 0;

348 
	`gíî©e_£qí˚s
(
°¨t
, 
Àngth
, 
‰ame
, 
ht
);

350 
ht_node
 *
cou¡s
 = 
	`ht_vÆues_as_ve˘‹
(
ht
);

351 
size
 = 
ht
->
ôems
;

353 
	`qs‹t
(
cou¡s
, 
size
, (
ht_node
), &
key_cou¡_cmp
);

355 
tŸÆ_cou¡
 = 0;

356 
i
 = 0; i < 
size
; i++) {

357 
tŸÆ_cou¡
 +
cou¡s
[
i
].
vÆ
;

360 
i
 = 0; i < 
size
; i++) {

361 
	`u≈ack_key
(
cou¡s
[
i
].
key
, 
‰ame
, 
buf„r
);

362 
ouçut_pos
 +
	`¢¥ötf
(
ouçut
 + ouçut_pos, 
ouçut_size
 - output_pos,

363 "%†%.3f\n", 
buf„r
, 
cou¡s
[
i
].
vÆ
*100.0f/
tŸÆ_cou¡
);

366 
	`nv_‰ì
(
cou¡s
);

367 
	`ht_de°roy
(
ht
);

368 
	}
}

370 
	s¥öt_occuªn˚s_∑øm
 {

371 *
	m°¨t
;

372 
	mÀngth
;

373 *
	mnuc_£q
;

374 *
	mouçut
;

375 
	mouçut_size
;

379 
	$¥öt_occuªn˚s
(
¥öt_occuªn˚s_∑øm
 *
∑øm
) {

380 *
°¨t
 = 
∑øm
->start;

381 
Àngth
 = 
∑øm
->length;

382 *
nuc_£q
 = 
∑øm
->nuc_seq;

383 *
ouçut
 = 
∑øm
->output;

384 
ouçut_size
 = 
∑øm
->output_size;

385 
nuc_£q_Àn
 = 
	`°æí
(
nuc_£q
);

386 
ht_ht
 *
ht
 = 
	`ht_¸óã
(
HT_SIZE
);

388 
	`gíî©e_£qí˚s
(
°¨t
, 
Àngth
, 
nuc_£q_Àn
, 
ht
);

390 
uöt64_t
 
key
 = 
	`∑ck_key
(
nuc_£q
, 
nuc_£q_Àn
);

391 
cou¡
 = 
	`ht_föd_√w
(
ht
, 
key
)->
vÆ
;

392 
	`¢¥ötf
(
ouçut
, 
ouçut_size
, "%d\t%s\n", 
cou¡
, 
nuc_£q
);

394 
	`ht_de°roy
(
ht
);

395 
	}
}

398 
	$gë_˝u_cou¡
() {

399 #ifde‡
__GLIBC__


400 
˝u_£t_t
 
˝u_£t
;

402 
	`CPU_ZERO
(&
˝u_£t
);

403 
	`sched_gëafföôy
(0, (
˝u_£t
), &cpu_set);

405  
	`CPU_COUNT
(&
˝u_£t
);

409 
	}
}

411 
	#MAX_OUTPUT
 1024

	)

415 
	$knu˛eŸide_maö
() {

416 
°dö_size
;

417 *
°dö_mem
 = 
	`ªad_°dö
(&
°dö_size
);

418 
˝u_cou¡
 = 
	`gë_˝u_cou¡
();

420 
ouçut_buf„r
[7][
MAX_OUTPUT
];

422 
	#DECLARE_PARAM
(
o
, 
n
) {\

423 .
°¨t
 = 
°dö_mem
, \

424 .
Àngth
 = 
°dö_size
, \

425 .
‰ame
 = 
n
,\

426 .
ouçut
 = 
ouçut_buf„r
[
o
],\

427 .
ouçut_size
 = 
MAX_OUTPUT
 }

	)

429 
¥öt_‰eqs_∑øm
 
‰eq_∑øms
[2] = {

430 
	`DECLARE_PARAM
(0, 1),

431 
	`DECLARE_PARAM
(1, 2)

434 #unde‡
DECLARE_PARAM


437 
	#DECLARE_PARAM
(
o
, 
s
) {\

438 .
°¨t
 = 
°dö_mem
, \

439 .
Àngth
 = 
°dö_size
, \

440 .
nuc_£q
 = 
s
,\

441 .
ouçut
 = 
ouçut_buf„r
[
o
],\

442 .
ouçut_size
 = 
MAX_OUTPUT
 }

	)

444 
¥öt_occuªn˚s_∑øm
 
occuªn˚s_∑øms
[5] = {

445 
	`DECLARE_PARAM
(2, "GGT"),

446 
	`DECLARE_PARAM
(3, "GGTA"),

447 
	`DECLARE_PARAM
(4, "GGTATT"),

448 
	`DECLARE_PARAM
(5, "GGTATTTTAATT"),

449 
	`DECLARE_PARAM
(6, "GGTATTTTAATTTATAGT")

452 #unde‡
DECLARE_PARAM


455 
ç
 *ç = 
	`ç_¸óã
(7);

457 
i
 = 0 ; i < 2; i++) {

458 
	`ç_add_job
(
ç
, &
¥öt_‰eqs
, &
‰eq_∑øms
[
i
]);

460 
i
 = 0 ;i < 5; i++) {

461 
	`ç_add_job
(
ç
, &
¥öt_occuªn˚s
, &
occuªn˚s_∑øms
[
i
]);

464 
	`ç_run
(
ç
, 
˝u_cou¡
 + 1);

466 
	`ç_de°roy
(
ç
);

468 vﬁ©ûê
Àn
;

469 
i
 = 0; i < 2; i++) {

471 
Àn
 = 
	`°æí
(
ouçut_buf„r
[
i
]);

473 
i
 = 2; i < 7; i++) {

475 
Àn
 = 
	`°æí
(
ouçut_buf„r
[
i
]);

478 
	`nv_‰ì
(
°dö_mem
);

481 
	}
}

483 
	$run_knu˛eŸide
(
ign‹ed
) {

485 #ifde‡
ARRAYFILE


486 
°rögfûe_°dö
 = 
	`°rögfûe_›í
((*)
Á°a_ouçut
, 
Á°a_ouçut_Àn
, "r");

487 if(!
°rögfûe_°dö
)  -1;

490 
	`knu˛eŸide_maö
();

492 #ifde‡
ARRAYFILE


493 
	`°rögfûe_˛o£
(
°rögfûe_°dö
);

496 
	}
}

	@knucleotide_file.c

17 
	#_GNU_SOURCE


	)

18 
	~"sim∂e_hash3.h
"

19 
	~<˘y≥.h
>

20 
	~<±hªad.h
>

21 
	~<sched.h
>

22 
	~<°dio.h
>

23 
	~<°dlib.h
>

24 
	~<°rög.h
>

25 
	~<sys/mm™.h
>

26 
	~<sys/°©.h
>

27 
	~<uni°d.h
>

28 
	~"IOtimî.h
"

33 
	#HT_SIZE
 2000000

	)

35 #ifde‡
ARRAYFILE


36 
	#fgës_u∆ocked
 
°rögfûe_fgës


	)

37 #unde‡
°dö


38 
	#°dö
 
°rögfûe_°dö


	)

40 #i‚de‡
__GLIBC__


41 
	#fgës_u∆ocked
 
fgës


	)

45 
	#INFILE
 "Á°a_ouçut"

	)

47 
FILE
 *
	göput_fûe
;

49 
	tuöt8_t
;

50 c⁄° 
uöt8_t
 
	g£À˘‹
[] = { -1, 0,-1, 1, 3,-1,-1, 2 };

51 c⁄° 
	gèbÀ
[] = {'A', 'C', 'G', 'T'};

107 
	sç_íåy
 {

108 *
	mjob
;

109 *
	m∑øm
;

112 
	sç
 {

113 
ç_íåy
 *
	mjobs
;

114 
	mˇ∑côy
;

115 
	msize
;

116 
±hªad_muãx_t
 
	mmuãx
;

119 
ç
 *

120 
	$ç_¸óã
(
max_jobs
) {

121 
ç
 *
poﬁ
 = 
	`_mÆloc
((*pool));

123 
poﬁ
->
jobs
 = 
	`_mÆloc
((
ç_íåy
)*
max_jobs
);

124 
poﬁ
->
ˇ∑côy
 = 
max_jobs
;

125 
poﬁ
->
size
 = 0;

126 
	`±hªad_muãx_öô
(&
poﬁ
->
muãx
, 0);

128  
poﬁ
;

129 
	}
}

132 
	$ç_de°roy
(
ç
 *
poﬁ
) {

133 
	`‰ì
(
poﬁ
->
jobs
);

134 
	`±hªad_muãx_de°roy
(&
poﬁ
->
muãx
);

135 
	`‰ì
(
poﬁ
);

136 
	}
}

139 
	$ç_add_job
(
ç
 *
poﬁ
, *
job
, *
∑øm
) {

140 i‡(
poﬁ
->
size
 <Öoﬁ->
ˇ∑côy
) {

141 
poﬁ
->
jobs
[poﬁ->
size
].
job
 = job;

142 
poﬁ
->
jobs
[poﬁ->
size
].
∑øm
 =Öaram;

143 ++
poﬁ
->
size
;

145 
	}
}

148 
	$_ç_run
(*
∑øm
) {

149 
ç
 *
poﬁ
 = 
∑øm
;

152 (*
job
)(*) = 0;

153 *
∑øm
 = 0;

155 
	`±hªad_muãx_lock
(&
poﬁ
->
muãx
);

156 i‡(
poﬁ
->
size
 > 0) {

157 
job
 = 
poﬁ
->
jobs
[poﬁ->
size
 - 1].job;

158 
∑øm
 = 
poﬁ
->
jobs
[poﬁ->
size
 - 1].param;

159 --
poﬁ
->
size
;

161 
	`±hªad_muãx_u∆ock
(&
poﬁ
->
muãx
);

162 i‡(
job
 == 0) {

165 
	`job
(
∑øm
);

168 
	}
}

171 
	$ç_run
(
ç
 *
poﬁ
, 
max_thªads
) {

172 
±hªad_t
 
thªads
[
max_thªads
];

173 
i
 = 0; i < 
max_thªads
; i++) {

174 
	`±hªad_¸óã
(&
thªads
[
i
], 0, &
_ç_run
, 
poﬁ
);

177 
i
 = 0; i < 
max_thªads
; i++) {

178 
	`±hªad_joö
(
thªads
[
i
], 0);

180 
	}
}

183 
	$ªad_°dö
(*
°dö_size
) {

184 
öput_size
;

185 *
ãmp
 = 
NULL
;

187 
°©
 stat;

188 
	`f°©
(
	`fûío
(
öput_fûe
), &
°©
);

189 
öput_size
 = 
°©
.
°_size
;

191 *
ªsu…
 = 
	`_mÆloc
(
öput_size
);

194 
	`as£π
(
	`_fgës
(
ªsu…
, 
öput_size
, 
öput_fûe
));

195 } 
	`°∫cmp
(
ªsu…
, ">THREE", 6));

197 
ªad
 = 0;

200 
	`_fgës
(
ªsu…
 + 
ªad
, 
öput_size
 -Ñód, 
öput_fûe
)) {

201 
Àn
 = 
	`°æí
(
ªsu…
 + 
ªad
);

202 i‡(
Àn
 =0 || 
ªsu…
[
ªad
] == '>') {

205 
ªad
 +
Àn
;

206 i‡(
ªsu…
[
ªad
 - 1] == '\n') {

207 
ªad
--;

211 
ªsu…
[
ªad
++] = '>';

212 
ªsu…
 = 
	`ªÆloc
‘esu…, 
ªad
);

213 *
°dö_size
 = 
ªad
;

215  
ªsu…
;

216 
	}
}

219 
ölöe
 *

220 
	$√xt_ch¨
(*
p
) {

222 ++
p
;

223 } 
	`is•a˚
(*
p
));

225  
p
;

226 
	}
}

229 
ölöe
 
uöt64_t


230 
	$push_ch¨
(
uöt64_t
 
cur
, 
uöt8_t
 
c
) {

231  (
cur
 << 2Ë+ 
£À˘‹
[(
c
 & 7)];

232 
	}
}

234 
uöt64_t


235 
	$∑ck_key
(*
key
, 
Àn
) {

236 
uöt64_t
 
code
 = 0;

237 
i
 = 0; i < 
Àn
; i++) {

238 
code
 = 
	`push_ch¨
(code, *
key
);

239 
key
 = 
	`√xt_ch¨
(key);

242  
code
;

243 
	}
}

246 
	$u≈ack_key
(
uöt64_t
 
key
, 
Àngth
, *
buf„r
) {

247 
i
;

249 
i
 = 
Àngth
 - 1; i > -1; i--) {

250 
buf„r
[
i
] = 
èbÀ
[
key
 & 3];

251 
key
 >>= 2;

253 
buf„r
[
Àngth
] = 0;

254 
	}
}

257 
	$gíî©e_£qí˚s
(*
°¨t
, 
Àngth
, 
‰ame
, 
ht_ht
 *
ht
) {

258 
uöt64_t
 
code
 = 0;

259 
uöt64_t
 
mask
 = (1uŒ << 2*
‰ame
) - 1;

260 *
p
 = 
°¨t
;

261 *
íd
 = 
°¨t
 + 
Àngth
;

265 
i
 = 0; i < 
‰ame
; i++) {

266 
code
 = 
	`push_ch¨
(code, *
p
);

267 ++
p
;

269 
	`ht_föd_√w
(
ht
, 
code
)->
vÆ
++;

271 
p
 < 
íd
) {

272 
code
 = 
	`push_ch¨
(code, *
p
Ë& 
mask
;

273 
	`ht_föd_√w
(
ht
, 
code
)->
vÆ
++;

274 ++
p
;

275 i‡(*
p
 & 8) {

276 i‡(*
p
 & 1) {

277 ++
p
;

282 
	}
}

285 
	$key_cou¡_cmp
(c⁄° *
l
, c⁄° *
r
) {

286 c⁄° 
ht_node
 *
lhs
 = 
l
, *
rhs
 = 
r
;

288 i‡(
lhs
->
vÆ
 !
rhs
->val) {

289  
rhs
->
vÆ
 - 
lhs
->val;

295 i‡(
lhs
->
key
 < 
rhs
->key) {

297 } i‡(
lhs
->
key
 > 
rhs
->key) {

303 
	}
}

305 
	s¥öt_‰eqs_∑øm
 {

306 *
	m°¨t
;

307 
	mÀngth
;

308 
	m‰ame
;

309 *
	mouçut
;

310 
	mouçut_size
;

313 
ht_node
 *

314 
	$ht_vÆues_as_ve˘‹
(
ht_ht
 *
ht
) {

315 
ht_node
 *
v
 = 
	`_mÆloc
(
ht
->
ôems
*(ht_node));

316 
ht_node
 *
n
 = 
	`ht_fú°
(
ht
);

318 
i
 = 0; i < 
ht
->
ôems
; i++) {

319 
v
[
i
] = *
n
;

320 
n
 = 
	`ht_√xt
(
ht
);

323  
v
;

324 
	}
}

327 
	$¥öt_‰eqs
(
¥öt_‰eqs_∑øm
 *
∑øm
) {

328 *
°¨t
 = 
∑øm
->start;

329 
Àngth
 = 
∑øm
->length;

330 
‰ame
 = 
∑øm
->frame;

331 *
ouçut
 = 
∑øm
->output;

332 
ouçut_size
 = 
∑øm
->output_size;

334 
ht_ht
 *
ht
 = 
	`ht_¸óã
(32);

335 
buf„r
[
‰ame
 + 1];

336 
ouçut_pos
 = 0;

338 
	`gíî©e_£qí˚s
(
°¨t
, 
Àngth
, 
‰ame
, 
ht
);

340 
ht_node
 *
cou¡s
 = 
	`ht_vÆues_as_ve˘‹
(
ht
);

341 
size
 = 
ht
->
ôems
;

343 
	`qs‹t
(
cou¡s
, 
size
, (
ht_node
), &
key_cou¡_cmp
);

345 
tŸÆ_cou¡
 = 0;

346 
i
 = 0; i < 
size
; i++) {

347 
tŸÆ_cou¡
 +
cou¡s
[
i
].
vÆ
;

350 
i
 = 0; i < 
size
; i++) {

351 
	`u≈ack_key
(
cou¡s
[
i
].
key
, 
‰ame
, 
buf„r
);

352 
ouçut_pos
 +
	`¢¥ötf
(
ouçut
 + ouçut_pos, 
ouçut_size
 - output_pos,

353 "%†%.3f\n", 
buf„r
, 
cou¡s
[
i
].
vÆ
*100.0f/
tŸÆ_cou¡
);

356 
	`‰ì
(
cou¡s
);

357 
	`ht_de°roy
(
ht
);

358 
	}
}

360 
	s¥öt_occuªn˚s_∑øm
 {

361 *
	m°¨t
;

362 
	mÀngth
;

363 *
	mnuc_£q
;

364 *
	mouçut
;

365 
	mouçut_size
;

369 
	$¥öt_occuªn˚s
(
¥öt_occuªn˚s_∑øm
 *
∑øm
) {

370 *
°¨t
 = 
∑øm
->start;

371 
Àngth
 = 
∑øm
->length;

372 *
nuc_£q
 = 
∑øm
->nuc_seq;

373 *
ouçut
 = 
∑øm
->output;

374 
ouçut_size
 = 
∑øm
->output_size;

375 
nuc_£q_Àn
 = 
	`°æí
(
nuc_£q
);

376 
ht_ht
 *
ht
 = 
	`ht_¸óã
(
HT_SIZE
);

378 
	`gíî©e_£qí˚s
(
°¨t
, 
Àngth
, 
nuc_£q_Àn
, 
ht
);

380 
uöt64_t
 
key
 = 
	`∑ck_key
(
nuc_£q
, 
nuc_£q_Àn
);

381 
cou¡
 = 
	`ht_föd_√w
(
ht
, 
key
)->
vÆ
;

382 
	`¢¥ötf
(
ouçut
, 
ouçut_size
, "%d\t%s\n", 
cou¡
, 
nuc_£q
);

384 
	`ht_de°roy
(
ht
);

385 
	}
}

388 
	$gë_˝u_cou¡
() {

389 #ifde‡
__GLIBC__


390 
˝u_£t_t
 
˝u_£t
;

392 
	`CPU_ZERO
(&
˝u_£t
);

393 
	`sched_gëafföôy
(0, (
˝u_£t
), &cpu_set);

395  
	`CPU_COUNT
(&
˝u_£t
);

399 
	}
}

401 
	#MAX_OUTPUT
 1024

	)

405 
	$knu˛eŸide_maö
() {

406 
°dö_size
;

407 *
°dö_mem
 = 
	`ªad_°dö
(&
°dö_size
);

408 
˝u_cou¡
 = 
	`gë_˝u_cou¡
();

410 
ouçut_buf„r
[7][
MAX_OUTPUT
];

412 
	#DECLARE_PARAM
(
o
, 
n
) {\

413 .
°¨t
 = 
°dö_mem
, \

414 .
Àngth
 = 
°dö_size
, \

415 .
‰ame
 = 
n
,\

416 .
ouçut
 = 
ouçut_buf„r
[
o
],\

417 .
ouçut_size
 = 
MAX_OUTPUT
 }

	)

419 
¥öt_‰eqs_∑øm
 
‰eq_∑øms
[2] = {

420 
	`DECLARE_PARAM
(0, 1),

421 
	`DECLARE_PARAM
(1, 2)

424 #unde‡
DECLARE_PARAM


427 
	#DECLARE_PARAM
(
o
, 
s
) {\

428 .
°¨t
 = 
°dö_mem
, \

429 .
Àngth
 = 
°dö_size
, \

430 .
nuc_£q
 = 
s
,\

431 .
ouçut
 = 
ouçut_buf„r
[
o
],\

432 .
ouçut_size
 = 
MAX_OUTPUT
 }

	)

434 
¥öt_occuªn˚s_∑øm
 
occuªn˚s_∑øms
[5] = {

435 
	`DECLARE_PARAM
(2, "GGT"),

436 
	`DECLARE_PARAM
(3, "GGTA"),

437 
	`DECLARE_PARAM
(4, "GGTATT"),

438 
	`DECLARE_PARAM
(5, "GGTATTTTAATT"),

439 
	`DECLARE_PARAM
(6, "GGTATTTTAATTTATAGT")

442 #unde‡
DECLARE_PARAM


445 
ç
 *ç = 
	`ç_¸óã
(7);

447 
i
 = 0 ; i < 2; i++) {

448 
	`ç_add_job
(
ç
, &
¥öt_‰eqs
, &
‰eq_∑øms
[
i
]);

450 
i
 = 0 ;i < 5; i++) {

451 
	`ç_add_job
(
ç
, &
¥öt_occuªn˚s
, &
occuªn˚s_∑øms
[
i
]);

454 
	`ç_run
(
ç
, 
˝u_cou¡
 + 1);

456 
	`ç_de°roy
(
ç
);

458 vﬁ©ûê
Àn
;

459 
i
 = 0; i < 2; i++) {

461 
Àn
 = 
	`°æí
(
ouçut_buf„r
[
i
]);

463 
i
 = 2; i < 7; i++) {

465 
Àn
 = 
	`°æí
(
ouçut_buf„r
[
i
]);

468 
	`‰ì
(
°dö_mem
);

471 
	}
}

473 
	$run_knu˛eŸide
(
ign‹ed
) {

475 
öput_fûe
 = 
	`f›í
((*)
INFILE
, "r");

476 i‡(!
öput_fûe
)  -1;

479 
	`knu˛eŸide_maö
();

481 
	`f˛o£
(
öput_fûe
);

484 
	}
}

	@list.h

1 #i‚de‡
__LIST_H


2 
	#__LIST_H


	)

20 
	sli°_hód
 {

21 
li°_hód
 *
	m√xt
, *
	m¥ev
;

24 
	#LIST_HEAD_INIT
(
«me
Ë{ &“ame), &“ameË}

	)

26 
	#LIST_HEAD
(
«me
Ë\

	)

27 
li°_hód
 
	g«me
 = 
	$LIST_HEAD_INIT
(
«me
)

29 
	#INIT_LIST_HEAD
(
±r
Ëdÿ{ \

	)

30 (
±r
)->
√xt
 = (±r); (±r)->
¥ev
 = (ptr); \

31 
	}
} 0)

39 
ölöe
 
	$__li°_add
(
li°_hód
 *
√w1
,

40 
li°_hód
 *
¥ev
,

41 
li°_hód
 *
√xt
)

43 
√xt
->
¥ev
 = 
√w1
;

44 
√w1
->
√xt
 =Çext;

45 
√w1
->
¥ev
 =Örev;

46 
¥ev
->
√xt
 = 
√w1
;

47 
	}
}

57 
ölöe
 
	$li°_add
(
li°_hód
 *
√w1
, li°_hód *
hód
)

59 
	`__li°_add
(
√w1
, 
hód
, hód->
√xt
);

60 
	}
}

70 
ölöe
 
	$li°_add_èû
(
li°_hód
 *
√w1
, li°_hód *
hód
)

72 
	`__li°_add
(
√w1
, 
hód
->
¥ev
, head);

73 
	}
}

82 
ölöe
 
	$__li°_dñ
(
li°_hód
 *
¥ev
, li°_hód *
√xt
)

84 
√xt
->
¥ev
 =Örev;

85 
¥ev
->
√xt
 =Çext;

86 
	}
}

93 
ölöe
 
	$li°_dñ
(
li°_hód
 *
íåy
)

95 
	`__li°_dñ
(
íåy
->
¥ev
,É¡ry->
√xt
);

98 
íåy
->
√xt
 = (
li°_hód
 *)0;

99 
íåy
->
¥ev
 = (
li°_hód
 *)0;

100 
	}
}

106 
ölöe
 
	$li°_dñ_öô
(
li°_hód
 *
íåy
)

108 
	`__li°_dñ
(
íåy
->
¥ev
,É¡ry->
√xt
);

109 
	`INIT_LIST_HEAD
(
íåy
);

110 
	}
}

117 
ölöe
 
	$li°_move
(
li°_hód
 *
li°
, li°_hód *
hód
)

119 
	`__li°_dñ
(
li°
->
¥ev
,Üi°->
√xt
);

120 
	`li°_add
(
li°
, 
hód
);

121 
	}
}

128 
ölöe
 
	$li°_move_èû
(
li°_hód
 *
li°
,

129 
li°_hód
 *
hód
)

131 
	`__li°_dñ
(
li°
->
¥ev
,Üi°->
√xt
);

132 
	`li°_add_èû
(
li°
, 
hód
);

133 
	}
}

139 
ölöe
 
	$li°_em±y
(
li°_hód
 *
hód
)

141  
hód
->
√xt
 == head;

142 
	}
}

144 
ölöe
 
	$__li°_•li˚
(
li°_hód
 *
li°
,

145 
li°_hód
 *
hód
)

147 
li°_hód
 *
fú°
 = 
li°
->
√xt
;

148 
li°_hód
 *
œ°
 = 
li°
->
¥ev
;

149 
li°_hód
 *
©
 = 
hód
->
√xt
;

151 
fú°
->
¥ev
 = 
hód
;

152 
hód
->
√xt
 = 
fú°
;

154 
œ°
->
√xt
 = 
©
;

155 
©
->
¥ev
 = 
œ°
;

156 
	}
}

163 
ölöe
 
	$li°_•li˚
(
li°_hód
 *
li°
, li°_hód *
hód
)

165 i‡(!
	`li°_em±y
(
li°
))

166 
	`__li°_•li˚
(
li°
, 
hód
);

167 
	}
}

176 
ölöe
 
	$li°_•li˚_öô
(
li°_hód
 *
li°
,

177 
li°_hód
 *
hód
)

179 i‡(!
	`li°_em±y
(
li°
)) {

180 
	`__li°_•li˚
(
li°
, 
hód
);

181 
	`INIT_LIST_HEAD
(
li°
);

183 
	}
}

191 
	#li°_íåy
(
±r
, 
ty≥
, 
membî
Ë\

	)

192 ((
	gty≥
 *)((*)(
	g±r
)-()(&(—y≥ *)0)->
	gmembî
)))

199 
	#li°_f‹_óch
(
pos
, 
hód
Ë\

	)

200 
	gpos
 = (
hód
)->
√xt
;Öos != (head); \

201 
	gpos
 = 
pos
->
√xt
)

207 
	#li°_f‹_óch_¥ev
(
pos
, 
hód
Ë\

	)

208 
	gpos
 = (
hód
)->
¥ev
;Öos != (head); \

209 
	gpos
 = 
pos
->
¥ev
)

217 
	#li°_f‹_óch_ß„
(
pos
, 
n
, 
hód
Ë\

	)

218 
	gpos
 = (
hód
)->
√xt
, 
	gn
 = 
pos
->next;Öos != (head); \

219 
	gpos
 = 
n
, 
	gn
 = 
pos
->
√xt
)

227 
	#li°_f‹_óch_íåy
(
pos
, 
hód
, 
membî
Ë\

	)

228 
	gpos
 = 
li°_íåy
((
hód
)->
√xt
, 
ty≥of
(*
pos
), 
membî
); \

229 &
	gpos
->
	gmembî
 !(
hód
); \

230 
	gpos
 = 
li°_íåy
(
pos
->
membî
.
√xt
, 
ty≥of
(*pos), member))

239 
	#li°_f‹_óch_íåy_ß„
(
pos
, 
n
, 
hód
, 
membî
Ë\

	)

240 
	gpos
 = 
li°_íåy
((
hód
)->
√xt
, 
ty≥of
(*
pos
), 
membî
), \

241 
	gn
 = 
li°_íåy
(
pos
->
membî
.
√xt
, 
ty≥of
(*pos), member); \

242 &
	gpos
->
	gmembî
 !(
hód
); \

243 
	gpos
 = 
n
, 
	gn
 = 
li°_íåy
“->
membî
.
√xt
, 
ty≥of
(*n), member))

	@mmap_read_multi_page_test.c

1 
	#_GNU_SOURCE


	)

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<sys/ty≥s.h
>

5 
	~<sys/°©.h
>

6 
	~<uni°d.h
>

7 
	~<f˙é.h
>

8 
	~<uni°d.h
>

9 
	~<sys/mm™.h
>

11 
	#FILEPATH
 "/tmp/mm≠≥d3.bö"

	)

12 
	#NUMINTS
 (90)

	)

13 
	#FILESIZE
 (
NUMINTS
 * ())

	)

15 
	#__NR_nv_mm≠_pgoff
 302

	)

17 
	#MAP_SIZE
 4096

	)

18 
	#SEEK_BYTES
 1024 * 1024 * 5

	)

20 
	#INVALID_INPUT
 -2;

	)

22 * 
	$ªÆloc_m≠
 (*
addr
, 
size_t
 
Àn
, size_à
ﬁd_size
)

24 *
p
;

26 
p
 = 
	`mªm≠
 (
addr
, 
ﬁd_size
, 
Àn
, 
MREMAP_MAYMOVE
);

27  
p
;

28 
	}
}

30 
	snvm≠_¨g_°ru˘
{

32 
	mfd
;

33 
	moff£t
;

34 
	mchunk_id
;

35 
	m¥oc_id
;

36 
	mpÊags
;

41 
	$gíî©e_øndom_ãxt
–*
addr
, 
Àn
, 
num_w‹ds
 ) {

43 
idxa
 =0, 
idxb
 =0;

44 
˙å
 =0;

45 
w‹dsize
;

46 
maxw‹dsize
 = 0 ;

47 
idxc
 =0;

49 
maxw‹dsize
 = 
Àn
 / 
num_w‹ds
;

51 c⁄° 
Æph™um
[] = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";

53 
idxa
 = 0; idx®< 
num_w‹ds
; idxa++) {

55 
w‹dsize
 = 
	`ønd
()% 
maxw‹dsize
;

57 
idxb
 = 0; idxb < 
w‹dsize
; idxb++) {

59 if–
˙å
 >
Àn
) ;

61 
idxc
 = 
	`ønd
()% ((
Æph™um
)/(alphanum[0]) - 1);

62 
addr
[
˙å
] = 
Æph™um
[
idxc
];

63 
˙å
++;

65 
addr
[
˙å
] = ' ';

66 
˙å
++;

68  
˙å
;

70 
	}
}

72 
	$°r_cmp
–*
addr1
, *
addr2
, 
size_t
 
Àn
) {

74 
size_t
 
idx
 = 0;

76 if(
Àn
 < 1 || !
addr1
 || !
addr2
) {

77 
	`¥ötf
("invaludÜen oráddr \n");

78  
INVALID_INPUT
;

81 
idx
 < 
Àn
) {

83 if–*
addr1
 !*
addr2
) {

84 
	`¥ötf
("°rögÇŸÉquÆ:áddr1 %c,áddr2 %¯\n", *
addr1
 , *
addr2
);

87 
	`¥ötf
 ("addr1 %c,áddr2 %¯\n", *
addr1
 , *
addr2
);

88 
addr1
++;

89 
addr2
++;

90 
idx
++;

94 
	}
}

96 
	$maö
(
¨gc
, *
¨gv
[])

98 
i
;

99 
fd
;

100 
ªsu…
;

101 *
m≠
, *
m≠2
, *
m≠_ªad
;

102 *
°¨t_addr
;

103 
cou¡
 =0;

104 
off£t
 = 0;

105 
chunk_id
 = 1;

106 
¥oc_id
 = 0;

107 
nvm≠_¨g_°ru˘
 
a
;

109 
¥oc_id
 = 
	`©oi
(
¨gv
[1]);

110 if(!
¥oc_id
) {

111 
	`Ârötf
(
°dîr
,"proc id isÇull \n");

115 
fd
 = 
	`›í
(
FILEPATH
, 
O_RDWR
 | 
O_CREAT
 | 
O_TRUNC
, (
mode_t
)0600);

116 i‡(
fd
 == -1) {

117 
	`≥º‹
("Error opening file for writing");

118 
	`exô
(
EXIT_FAILURE
);

121 
ªsu…
 = 
	`l£ek
(
fd
, 
SEEK_BYTES
, 
SEEK_SET
);

122 i‡(
ªsu…
 == -1) {

123 
	`˛o£
(
fd
);

124 
	`≥º‹
("Error callingÜseek()Åo 'stretch'Åhe file");

125 
	`exô
(
EXIT_FAILURE
);

128 
ªsu…
 = 
	`wrôe
(
fd
, "", 1);

129 i‡(
ªsu…
 != 1) {

130 
	`˛o£
(
fd
);

131 
	`≥º‹
("Error writingÜast byte ofÅhe file");

132 
	`exô
(
EXIT_FAILURE
);

136 
i
 =0;

138 
a
.
fd
 = fd;

139 
a
.
off£t
 = offset;

140 
a
.
chunk_id
 =chunk_id;

141 
a
.
¥oc_id
 =Öroc_id;

142 
a
.
pÊags
 = 1;

146 
	`¥ötf
("goingÅo mmapÑeadd \n");

148 
m≠_ªad
 = (*Ë
	`sysˇŒ
(
__NR_nv_mm≠_pgoff
, 0, 
MAP_SIZE
, 
PROT_READ
|
PROT_WRITE
, 
MAP_PRIVATE
, &
a
 );

150 i‡(
m≠_ªad
 =
MAP_FAILED
) {

151 
	`˛o£
(
fd
);

152 
	`≥º‹
("Error mmappingÅhe file");

153 
	`exô
(
EXIT_FAILURE
);

160  
i
 < 
MAP_SIZE
) {

162 
	`Ârötf
(
°dout
, "%c", 
m≠_ªad
[
i
]);

163 
i
++;

167 if(
	`°r_cmp
(
m≠
, 
m≠_ªad
, 
MAP_SIZE
)) {

168 
	`¥ötf
("multipageÅest failed \n");

170 
	`¥ötf
("multipageÅest succeeded \n");

175 
	`˛o£
(
fd
);

178 
	}
}

	@nbody.c

11 
	~<m©h.h
>

12 
	~<°dio.h
>

13 
	~<°dlib.h
>

14 
	~<°rög.h
>

15 
	~"bích-‰amew‹k.h
"

17 
	#pi
 3.141592653589793

	)

18 
	#sﬁ¨_mass
 (4 * 
pi
 *Öi)

	)

19 
	#days_≥r_yór
 365.24

	)

21 
	tv2df
 
	t__©åibuã__
 (–
	tve˘‹_size
(2*()) ));

23 
	#lowî
(
_V
Ë(((*)&_V)[0])

	)

25 
	s∂™ë
 {

26 
v2df
 
	mxy
;

27 
v2df
 
	mz0
;

28 
v2df
 
	mvxvy
;

29 
v2df
 
	mvz00
;

30 
v2df
 
	mmassmass
;

33 
	#NBODIES
 5

	)

34 
∂™ë
 
	gbodõs_öô
[
NBODIES
] = {

36 {0, 0}, {0,0}, {0, 0}, {0,0}, {
sﬁ¨_mass
,solar_mass}

42 {1.66007664274403694e-03 * 
days_≥r_yór
,

43 7.69901118419740425e-03 * 
days_≥r_yór
},

44 {-6.90460016972063023e-05 * 
days_≥r_yór
,0},

45 {9.54791938424326609e-04 * 
sﬁ¨_mass
,9.54791938424326609e-04 * solar_mass}

51 {-2.76742510726862411e-03 * 
days_≥r_yór
,

52 4.99852801234917238e-03 * 
days_≥r_yór
},

53 {2.30417297573763929e-05 * 
days_≥r_yór
,0},

54 {2.85885980666130812e-04 * 
sﬁ¨_mass
,2.85885980666130812e-04 * solar_mass}

60 {2.96460137564761618e-03 * 
days_≥r_yór
,

61 2.37847173959480950e-03 * 
days_≥r_yór
},

62 {-2.96589568540237556e-05 * 
days_≥r_yór
,0},

63 {4.36624404335156298e-05 * 
sﬁ¨_mass
,4.36624404335156298e-05 * solar_mass}

69 {2.68067772490389322e-03 * 
days_≥r_yór
,

70 1.62824170038242295e-03 * 
days_≥r_yór
},

71 {-9.51592254519715870e-05 * 
days_≥r_yór
,0},

72 {5.15138902046611451e-05 * 
sﬁ¨_mass
,5.15138902046611451e-05 * solar_mass}

76 
∂™ë
 
	gbodõs
[
NBODIES
];

78 c⁄° 
v2df
 
	gdtdt_öô
 = {0.01, 0.01};

80 
v2df
 
	gdtdt
 = {0.01, 0.01};

82 
	$adv™˚
(
q
)

84 
∂™ë
 *
b
, *
b2
;

85 
v2df
 
dxdy
, 
dz00
, 
tsqu¨e
, 
di°™˚2
, 
magmag
;

86 
i
, 
j
, 
k
;

87 
k
=1; k<=
q
; ++k) {

88 
i
 = 0; i < 
NBODIES
; ++i) {

89 
b
 = &(
bodõs
[
i
]);

90 
j
 = 
i
 + 1; j < 
NBODIES
; j++) {

91 
b2
 = &(
bodõs
[
j
]);

92 
dxdy
 = 
b
->
xy
 - 
b2
->xy;

93 
dz00
 = 
b
->
z0
 - 
b2
->z0;

95 
tsqu¨e
 = 
	`__buûtö_ü32_haddpd
(
dxdy
*dxdy,
dz00
*dz00);

97 
di°™˚2
 = 
	`__buûtö_ü32_haddpd
(
tsqu¨e
,tsquare);

98 
magmag
 = 
dtdt
 / (
	`__buûtö_ü32_sqπpd
(
di°™˚2
)*distance2);

99 
dxdy
 *
magmag
;

100 
dz00
 *
magmag
;

101 
b
->
vxvy
 -
dxdy
 * 
b2
->
massmass
;

102 
b
->
vz00
 -
dz00
 * 
b2
->
massmass
;

103 
b2
->
vxvy
 +
dxdy
 * 
b
->
massmass
;

104 
b2
->
vz00
 +
dz00
 * 
b
->
massmass
;

107 
i
 = 0; i < 
NBODIES
; i++) {

108 
bodõs
[
i
].
xy
 +
dtdt
 * bodõs[i].
vxvy
;

109 
bodõs
[
i
].
z0
 +
dtdt
 * bodõs[i].
vz00
;

112 
	}
}

114 
	$íîgy
()

116 
v2df
 
e
 = {0.0, 0.0};

117 
v2df
 
hÆf
 = {0.5, 0.5};

118 
v2df
 
sq
, 
dxdy
, 
dz00
, 
di°™˚
;

119 c⁄° 
∂™ë
 *
b
, *
b2
;

120 
i
, 
j
;

122 
i
 = 0; i < 
NBODIES
; i++) {

123 
b
 = &(
bodõs
[
i
]);

125 
sq
 = 
b
->
massmass
 * 
	`__buûtö_ü32_haddpd
(b->
vxvy
*b->vxvy, b->
vz00
*b->vz00);

126 
sq
 = 
	`__buûtö_ü32_haddpd
(sq, sq);

127 
e
 +
hÆf
 * 
sq
;

128 
j
 = 
i
 + 1; j < 
NBODIES
; j++) {

129 
b2
 = &(
bodõs
[
j
]);

130 
dxdy
 = 
b
->
xy
 - 
b2
->xy;

131 
dz00
 = 
b
->
z0
 - 
b2
->z0;

133 
di°™˚
 = 
	`__buûtö_ü32_haddpd
(
dxdy
*dxdy, 
dz00
*dz00);

134 
di°™˚
 = 
	`__buûtö_ü32_sqπpd
(
	`__buûtö_ü32_haddpd
(distance,distance));

135 
e
 -(
b
->
massmass
 * 
b2
->massmassË/ 
di°™˚
;

138  
	`lowî
(
e
);

139 
	}
}

141 
	$off£t_momítum
()

143 
v2df
 
pxpy
 = {0.0, 0.0};

144 
v2df
 
pz00
 = {0.0, 0.0};

145 
v2df
 
sﬁ¨_mass_öv
 = { 1.0 / 
sﬁ¨_mass
, 1.0 / solar_mass};

146 
i
;

147 
i
 = 0; i < 
NBODIES
; i++) {

148 
pxpy
 +
bodõs
[
i
].
vxvy
 * bodõs[i].
massmass
;

149 
pz00
 +
bodõs
[
i
].
vz00
 * bodõs[i].
massmass
;

151 
bodõs
[0].
vxvy
 = - 
pxpy
 * 
sﬁ¨_mass_öv
;

152 
bodõs
[0].
vz00
 = - 
pz00
 * 
sﬁ¨_mass_öv
;

153 
	}
}

155 c⁄° 
	g°¨t_íîgy_ªf
 = -0.169075164;

156 c⁄° 
	gíd_íîgy_ªf
 = -0.169086185;

158 
	$nbody
(
°ïs
)

160 
dtdt
 = 
dtdt_öô
;

161 
	`mem˝y
(
bodõs
, 
bodõs_öô
, (bodies));

162 
	`off£t_momítum
();

167 i‡(
	`Ábs
(
	`íîgy
(Ë- 
°¨t_íîgy_ªf
) > .0000001)  1;

169 
	`adv™˚
(
°ïs
);

172 i‡(
°ïs
 =1000000 && 
	`Ábs
(
	`íîgy
(Ë- 
íd_íîgy_ªf
) > .0000001)  1;

174 
	}
}

176 
	$run_nbody
(
°ïs
)

178  
	`nbody
(
°ïs
);

179 
	}
}

	@nv_def.h

2 #i‚de‡
NV_DEF_H_


3 
	#NV_DEF_H_


	)

7 
	#SHMEM_ID
 2078

	)

8 
	#PAGE_SIZE
 4096

	)

13 
	#METADATA_MAP_SIZE
 1024 * 1024 *100

	)

16 
	#PROT_NV_RW
 
PROT_READ
|
PROT_WRITE


	)

20 
	#FILEPATH
 "/tmp/chk±"

	)

21 
	#MAPMETADATA_PATH
 "/tmp/chkmëa"

	)

23 
	#SUCCESS
 0

	)

24 
	#FAILURE
 -1

	)

27 
	#SHMSZ
 100*1024 * 1024

	)

31 
	#NUMINTS
 (10)

	)

32 
	#FILESIZE
 (
NUMINTS
 * ())

	)

33 
	#__NR_nv_mm≠_pgoff
 302

	)

34 
	#__NR_mm≠
 192

	)

37 
	#MMAP_FLAGS
 
MAP_PRIVATE


	)

43 
	#ENABLE_LOCK
 1

	)

45 
	#MAX_DATA_SIZE
 1024 * 1024 *1524

	)

47 
	#NVRAM_DATASZ
 1024 * 1024 * 100

	)

52 
	#MAX_PROCESS
 64

	)

57 
	#RANDOM_VAL
 1433

	)

	@nv_map.c

2 
	~<°dio.h
>

3 
	~<sys/ty≥s.h
>

4 
	~<sys/°©.h
>

5 
	~<sys/mm™.h
>

6 
	~<f˙é.h
>

7 
	~<uni°d.h
>

8 
	~"nv_m≠.h
"

9 
	~"li°.h
"

10 
	~<sys/mm™.h
>

13 
	~<time.h
>

14 
	~"nv_def.h
"

15 
	~<öây≥s.h
>

21 
	gdummy_v¨
 = 0;

24 
li°_hód
 
	g¥oc_objli°
;

26 
	g¥oc_li°_öô
 = 0;

28 
	g¥oc_m≠
;

29 
	g¥oc_m≠_°¨t
;

30 
	gg_fûe_desc_nv
 = -1;

33 
nvm≠_¨g_°ru˘
 
	gnv¨g
;

36 
¥oc_obj
 * 
ªad_m≠_‰om_pmem
(
pid
);

38 * 
	$gíî©e_fûe_«me
(*
ba£_«me
, 
pid
, *
de°
) {

40 
Àn
 = 
	`°æí
(
ba£_«me
);

41 
c_pid
[16];

43 
	`•rötf
(
c_pid
, "%d", 
pid
);

44 
	`mem˝y
(
de°
,
ba£_«me
, 
Àn
);

45 
Àn
++;

46 
	`°rˇt
(
de°
, 
c_pid
);

48  
de°
;

49 
	}
}

52 
chunk
* 
	$¸óã_chunk_obj
(
rq°_°ru˘
 *
rq°
, 
cuº_off£t
, 
¥oc_obj
*Öroc_obj) {

54 
chunk
 *chunk = 
NULL
;

55 
addr
 = 0;

57 
addr
 = 
¥oc_m≠_°¨t
;

59 
addr
 =ádd∏+ 
¥oc_obj
->
mëa_off£t
;

60 #ifde‡
NV_DEBUG


63 
chunk
 = (chunk*Ë
addr
;

64 
¥oc_obj
->
mëa_off£t
 +(
chunk
);

66 if(
chunk
 =
NULL
) {

67 
	`Ârötf
(
°dîr
,"chunk creation failed\n");

68  
NULL
;

71 if(
rq°
 =
NULL
) {

72 
	`Ârötf
(
°dîr
,"chunk creation failed\n");

73  
NULL
;

76 
chunk
->
vma_id
 = 
rq°
->
id
;

77 
chunk
->
Àngth
 = 
rq°
->
byãs
;

78 
chunk
->
¥oc_id
 = 
rq°
->
pid
;

80 
chunk
->
off£t
 = 
cuº_off£t
;

82 #ifde‡
CHCKPT_HPC


83 
chunk
->
‹dî_id
 = 
rq°
->order_id;

86 #ifde‡
NV_DEBUG


90  
chunk
;

91 
	}
}

94 
	$£tup_m≠_fûe_nv
(*
fûï©h
, 
byãs
)

96 
ªsu…
;

97 
fd
;

99 
fd
 = 
	`›í
(
fûï©h
, 
O_RDWR
 | 
O_CREAT
 | 
O_TRUNC
, (
mode_t
) 0600);

100 i‡(
fd
 == -1) {

101 
	`≥º‹
("Error opening file for writing");

102 
	`exô
(
EXIT_FAILURE
);

105 
ªsu…
 = 
	`l£ek
(
fd
,
byãs
, 
SEEK_SET
);

106 i‡(
ªsu…
 == -1) {

107 
	`˛o£
(
fd
);

108 
	`≥º‹
("Error callingÜseek()Åo 'stretch'Åhe file");

109 
	`exô
(
EXIT_FAILURE
);

112 
ªsu…
 = 
	`wrôe
(
fd
, "", 1);

113 i‡(
ªsu…
 != 1) {

114 
	`˛o£
(
fd
);

115 
	`≥º‹
("Error writingÜast byte ofÅhe file");

116 
	`exô
(
EXIT_FAILURE
);

118  
fd
;

119 
	}
}

122 
	$gí_ønd
()

124 
n
=0;

125 
i£ed
 = ()
	`time
(
NULL
);

126 
	`§™d
 (
i£ed
);

129 
n
=
	`ønd
();

130 (
n
);

131 
	}
}

135 
	gMAGIC1
 = 1453;

136 
	$gíî©e_vmaid
(c⁄° *
key
) {

138 
hash
 = 0;

140 *
key
) {

141 
hash
 +((hash % 
MAGIC1
Ë+ 1Ë* (Ë*
key
++;

144  
hash
 % 1699;

145 
	}
}

154 
¥oc_obj
* 
	$gë_¥o˚ss_obj
(
chunk
 *chunk) {

156 if(!
chunk
) {

157 
	`Ârötf
(
°dîr
, "get_process_obj: chunkÇull \n");

158  
NULL
;

160  
chunk
->
¥oc_obj
;

161 
	}
}

167 
chunk
* 
	$föd_chunk
(
vma_id
, 
¥oc_obj
 *proc_obj ) {

169 
chunk
 *
t_chunk
 = 
NULL
;

170 
li°_hód
 *
pos
 = 
NULL
;

173 #ifde‡
NV_DEBUG


174 
	`Ârötf
(
°dîr
, "föd_chunk vma_id:%u \n",
vma_id
);

175 if(
¥oc_obj
)

176 
	`Ârötf
(
°dîr
,"tŸÆ chunk†¥oc_obj->num_chunks:%u \n",
¥oc_obj
->
num_chunks
);

179 if(!
¥oc_obj
) {

180 
	`Ârötf
(
°dîr
, "couldÇot identifyÖroject id \n");

181  
NULL
;

185 i‡(!
¥oc_obj
->
chunk_öôülized
){

186 
	`INIT_LIST_HEAD
(&(
¥oc_obj
->
chunk_li°
));

187 
¥oc_obj
->
chunk_öôülized
 = 1;

188  
NULL
;

192 
	`li°_f‹_óch
(
pos
, &
¥oc_obj
->
chunk_li°
) {

194 i‡(
pos
 !
NULL
) {

195 
t_chunk

	`li°_íåy
(
pos
, 
chunk
, 
√xt_chunk
);

196 i‡(
t_chunk
 &&Å_chunk->
vma_id
 == vma_id) {

197  
t_chunk
;

200 #ifde‡
NV_DEBUG


201 if(
t_chunk
){

202 
	`Ârötf
(
°dîr
, "ôî©ög ....Å_chunk %u \n", 
t_chunk
->
vma_id
);

204 
	`Ârötf
(
°dîr
, "iterating ....Å_chunk isÇull \n");

208 if(!
t_chunk
 ||Å_chunk->
vma_id
 == 0)

210 
t_chunk
 = 
NULL
;

215 #ifde‡
NV_DEBUG


216 if(
t_chunk
)

217 
	`Ârötf
(
°dîr
, "föd_chunk foundÅ_chunk %u \n", 
t_chunk
->
vma_id
);

220  
t_chunk
;

222 
	}
}

225 
	$add_chunk
(
chunk
 *chunk, 
¥oc_obj
 *proc_obj) {

227 i‡(!
chunk
)

230 i‡(!
¥oc_obj
->
chunk_öôülized
){

231 
	`INIT_LIST_HEAD
(&(
¥oc_obj
->
chunk_li°
));

232 
¥oc_obj
->
chunk_öôülized
 = 1;

234 
	`li°_add
(&(
chunk
->
√xt_chunk
), &(
¥oc_obj
->
chunk_li°
));

236 
chunk
->
¥oc_obj
 =Öroc_obj;

238 
	}
}

242 
¥oc_obj
 * 
	$¸óã_¥oc_obj
(
pid
) {

244 
¥oc_obj
 *¥oc_obj = 
NULL
;

245 
size_t
 
byãs
 = (
¥oc_obj
);

246 
fûe_«me
[256];

249 
	`bzîo
(
fûe_«me
, 256);

250 
	`gíî©e_fûe_«me
(
MAPMETADATA_PATH
, 
pid
, 
fûe_«me
);

251 #ifde‡
NV_DEBUG


252 
	`Ârötf
(
°dîr
, "%†mëad©®fûê«mê \n",
fûe_«me
);

254 
¥oc_m≠
 = 
	`£tup_m≠_fûe_nv
(
fûe_«me
, 
METADATA_MAP_SIZE
);

255 i‡(
¥oc_m≠
 < 1) {

256 
	`¥ötf
("failedÅo createá map\n");

257  
NULL
;

260 #ifde‡
NV_DEBUG


261 
	`Ârötf
(
°dîr
, "create_proc_obj:Before mmap \n");

263 
¥oc_obj
 = (¥oc_obj *Ë
	`mm≠
(0, 
METADATA_MAP_SIZE
, 
PROT_READ
 | 
PROT_WRITE
,

264 
MAP_SHARED
, 
¥oc_m≠
, 0);

268 i‡(
¥oc_obj
 =
MAP_FAILED
) {

269 
	`˛o£
(
¥oc_m≠
);

270 
	`≥º‹
("Error mmappingÅhe file");

271 
	`exô
(
EXIT_FAILURE
);

274 
	`mem£t
 ((*)
¥oc_obj
,0,
byãs
);

276 
¥oc_m≠_°¨t
 = (Ë
¥oc_obj
;

278 i‡(!
¥oc_obj
) {

279 #ifde‡
NV_DEBUG


280 
	`Ârötf
(
°dîr
, "create_proc_obj:create_proc_obj failed\n");

282  
NULL
;

284 #ifde‡
NV_DEBUG


285 
	`Ârötf
(
°dîr
, "create_proc_obj:create_proc_obj succeeded\n");

287  
¥oc_obj
;

288 
	}
}

296 
¥oc_obj
 *
	$föd_¥oc_obj
(
¥oc_id
) {

298 
¥oc_obj
 *¥oc_obj = 
NULL
;

299 
li°_hód
 *
pos
 = 
NULL
;

300 
fûe_«me
[256];

303 
	`bzîo
(
fûe_«me
,256);

305 i‡(!
¥oc_li°_öô
) {

306 #ifde‡
NV_DEBUG


307 
	`Ârötf
(
°dîr
, "find_proc_obj:proc objectÅreeÇot yet initialized\n");

309 
	`INIT_LIST_HEAD
(&
¥oc_objli°
);

310 
¥oc_li°_öô
 = 1;

311  
NULL
;

315 
	`li°_f‹_óch
(
pos
, &
¥oc_objli°
) {

318 i‡(
pos
 !
NULL
) {

319 
¥oc_obj
 = 
	`li°_íåy
(
pos
, ¥oc_obj, 
√xt_¥oc
);

320 i‡(
¥oc_obj
 &&Öroc_obj->
pid
 =
¥oc_id
) {

322  
¥oc_obj
;

326  
NULL
;

327 
	}
}

331 
	göôülized
 =0;

336 
	$add_to_¥o˚ss_chunk
(
¥oc_obj
 *¥oc_obj, 
rq°_°ru˘
 *
rq°
, 
off£t
) {

338 
chunk
 *chunk = 
NULL
;

340 
chunk
 = 
	`¸óã_chunk_obj
–
rq°
, 
off£t
, 
¥oc_obj
);

343 i‡(
chunk
){

344 
	`add_chunk
(
chunk
, 
¥oc_obj
);

345 
¥oc_obj
->
num_chunks
++;

347 
chunk
->
mm≠_id
 = 
rq°
->mmap_id;

349 if(
chunk
->
mm≠_id
 > 
¥oc_obj
->
num_mm≠s
) {

350 
¥oc_obj
->
num_mm≠s
 = 
chunk
->
mm≠_id
;

351 #ifde‡
NV_DEBUG


352 
	`Ârötf
(
°dîr
,"updatingÖrocess mmapÇum\n");

355 #ifde‡
NV_DEBUG


356 
	`¥öt_chunk
(
chunk
);

360 
	}
}

363 
	$add_¥oc_obj
(
¥oc_obj
 *proc_obj) {

365 i‡(!
¥oc_obj
)

370 i‡(!
¥oc_li°_öô
) {

371 
	`INIT_LIST_HEAD
(&
¥oc_objli°
);

372 
¥oc_li°_öô
 = 1;

375 
	`li°_add
(&
¥oc_obj
->
√xt_¥oc
, &
¥oc_objli°
);

376 #ifde‡
NV_DEBUG


377 
	`Ârötf
(
°dîr
,"add_¥oc_obj:Öroc_obj->pid %d \n", 
¥oc_obj
->
pid
);

380 
	}
}

385 
¥oc_obj
* 
	$föd_¥o˚ss
(
pid
) {

387 
li°_hód
 *
pos
 = 
NULL
;

388 
¥oc_obj
* 
t_¥oc_obj
 = 
NULL
;

390 #ifde‡
NV_DEBUG


391 
	`Ârötf
(
°dîr
, "föd_¥o˚ss:%u %u\n",
pid
, 
¥oc_li°_öô
);

394 if(!
¥oc_li°_öô
){

395  
NULL
;

400 
	`li°_f‹_óch
(
pos
, &
¥oc_objli°
) {

402 i‡(
pos
 !
NULL
) {

403 
t_¥oc_obj

	`li°_íåy
(
pos
, 
¥oc_obj
, 
√xt_¥oc
);

404 i‡(
t_¥oc_obj
 &&Å_¥oc_obj->
pid
 ==Öid) {

405  
t_¥oc_obj
;

407 #ifde‡
NV_DEBUG


408 if(
t_¥oc_obj
){

409 
	`Ârötf
(
°dîr
, "ôî©ög ....Å_¥oc_obj %u \n", 
t_¥oc_obj
->
pid
);

411 
	`Ârötf
(
°dîr
, "iterating ....Å_chunk isÇull \n");

415 if(!
t_¥oc_obj
 ||Å_¥oc_obj->
pid
 == 0)

417 
t_¥oc_obj
 = 
NULL
;

422 #ifde‡
NV_DEBUG


423 if(
t_¥oc_obj
)

424 
	`Ârötf
(
°dîr
, "föd_chunk foundÅ_chunk %u \n", 
t_¥oc_obj
->
pid
);

427  
t_¥oc_obj
;

429 
	}
}

435 
	$gë_¥oc_°πaddªss
(
rq°_°ru˘
 *
rq°
){

437 
¥oc_obj
 *¥oc_obj=
NULL
;

438 
pid
 = -1;

439 
uöçå_t
 
u±rm≠
;

441 
pid
 = 
rq°
->pid;

442 
¥oc_obj
 = 
	`föd_¥oc_obj
(
pid
);

443 i‡(!
¥oc_obj
) {

444 
	`Ârötf
(
°dîr
,"couldÇŸ födÅhê¥o˚ss. CheckÅhêpid %d\n", 
pid
);

448 
u±rm≠
 = (
uöçå_t
)
¥oc_obj
->
°¨t_addr
;

449  
¥oc_obj
->
°¨t_addr
;

452 
	}
}

457 * 
	$nv_mm≠
(
rq°_°ru˘
 *
rq°
) {

460 
pid
 = -1;

461 
¥oc_obj
 *¥oc_obj=
NULL
;

462 
ULONG
 
byãs
 = 0;

463 *
v¨
 = 
NULL
;

464 
fûe_«me
[256];

465 #ifde‡
NV_DEBUG


469 
	`Ârötf
(
°dîr
,"EnteringÇv_mmap \n");

472 
	`bzîo
(
fûe_«me
,256);

474 if–!
rq°
 ) {

475  
NULL
;

478 
byãs
 = 
rq°
->bytes;

479 
v¨
 = (*)
rq°
->var;

480 
pid
 = 
rq°
->pid;

483 
¥oc_obj
 = 
	`föd_¥oc_obj
(
pid
);

484 if(
¥oc_obj
) {

485 #ifde‡
NV_DEBUG


486 
	`Ârötf
(
°dîr
,"processálreadyÉxists \n");

488 
¥oc_m≠_°¨t
 = ()
¥oc_obj
;

500 i‡(!
¥oc_obj
) {

501 
¥oc_obj
 = 
	`¸óã_¥oc_obj
(
rq°
->
pid
);

503 if(
¥oc_obj
) {

504 
¥oc_obj
->
pid
 = 
rq°
->pid;

505 #ifde‡
NV_DEBUG


506 
	`Ârötf
(
°dîr
,"nv_mmap: writingÅoÖrocess object \n");

508 
¥oc_obj
->
size
 = 0;

509 
¥oc_obj
->
cuº_hóp_addr
 = 0;

510 
¥oc_obj
->
num_chunks
 = 0;

511 
¥oc_obj
->
°¨t_addr
 = 0;

512 
¥oc_obj
->
off£t
 = 0;

513 
¥oc_obj
->
mëa_off£t
 = (proc_obj);

519 
	`add_¥oc_obj
(
¥oc_obj
);

520 #ifde‡
NV_DEBUG


521 
	`Ârötf
(
°dîr
,"nv_map.c: finishedáddingÅoÖroject \n");

524 #ifde‡
NV_DEBUG


525 
	`Ârötf
(
°dîr
,"process object creation failed \n");

527  
NULL
;

530 #ifde‡
NV_DEBUG


531 
	`Ârötf
(
°dîr
,"write_map: createdÖroc obj\n");

534 
	`gíî©e_fûe_«me
((*Ë
FILEPATH
, 
rq°
->
pid
, 
fûe_«me
);

535 
g_fûe_desc_nv
 = 
	`£tup_m≠_fûe_nv
(
fûe_«me
, 
MAX_DATA_SIZE
);

536 
¥oc_obj
->
fûe_desc
 = 
g_fûe_desc_nv
;

539 #ifde‡
NV_DEBUG


540 
	`Ârötf
(
°dîr
,"¥oc_obj->off£à%ld \n", 
¥oc_obj
->
off£t
);

541 
	`Ârötf
(
°dîr
,"mm≠ögágaö %lu \n",
byãs
);

544 i‡(!
¥oc_obj
){

545 
	`Ârötf
(
°dîr
,"process object doesÇotÉxist\n");

546  
NULL
;

548 
¥oc_obj
->
d©a_m≠_size
 +
byãs
;

554 
	}
}

556 
	$nv_d©a_commô
(
rq°_°ru˘
 *
rq°
) {

558 
pid
 = -1;

559 
size_t
 
size
 = 0;

560 
¥oc_obj
 *¥oc_obj
NULL
;

561 
vma_id
;

562 
wr_addr
 = 0;

563 
ªsu…
 = 0;

564 
addr
 =0;

566 if(!
rq°
)

569 
pid
 = 
rq°
->pid;

570 
¥oc_obj
(¥oc_obj *Ë
	`föd_¥oc_obj
(
pid
);

572 #ifde‡
NV_DEBUG


573 
	`Ârötf
(
°dîr
, "nv_commit: finding chunk \n");

576 
vma_id
 = 
rq°
->
id
;

578 
chunk
 *chunk = 
	`föd_chunk
(
vma_id
, 
¥oc_obj
);

579 if(!
chunk
) {

580 
	`¥ötf
("nv_commit:finding chunk failed \n");

581 
îr‹
;

585 
chunk
->
isCommôãd
 = 1;

589 
wr_addr
 = ()
rq°
->
mem
;

590 
size
 = 
rq°
->
byãs
;

592 
addr
 = 
wr_addr
;

594 #ifde‡
NV_DEBUG


595 
	`Ârötf
(
°dout
,"nv_map.c:before callingÇvcommit \n");

599 if(
ªsu…
) {

600 
	`Ârötf
(
°dout
,"nv_m≠.c:ÊushÑesu… %d \n",
ªsu…
);

605  
ªsu…
;

607 
îr‹
:

609 
	}
}

613 
	$¥öt_chunk
(
chunk
 *chunk) {

615 
	`Ârötf
(
°dîr
,"chunk: vma_id %u\n", 
chunk
->
vma_id
);

616 
	`Ârötf
(
°dîr
,"chunk:Üígth %u\n", 
chunk
->
Àngth
);

617 
	`Ârötf
(
°dîr
,"chunk:Öroc_id %d\n", 
chunk
->
¥oc_id
);

618 
	`Ârötf
(
°dîr
,"chunk: off£à%u\n", 
chunk
->
off£t
);

619 
	`Ârötf
(
°dîr
,"chunk: mm≠ id %u \n", 
chunk
->
mm≠_id
);

620 #ifde‡
CHCKPT_HPC


621 
	`Ârötf
(
°dîr
,"chunk: ordî_id %ld\n",
chunk
->
‹dî_id
);

623 
	}
}

634 
ULONG
 
	$födoff£t
(
UINT
 
¥oc_id
, 
ULONG
 
cuº_addr
) {

636 
¥oc_obj
 *¥oc_obj = 
NULL
;

637 
ULONG
 
diff
 = 0;

639 
¥oc_obj
 = 
	`föd_¥oc_obj
(
¥oc_id
);

640 i‡(
¥oc_obj
) {

641 
diff
 = 
cuº_addr
 - (
ULONG
)
¥oc_obj
->
°¨t_addr
;

642  
diff
;

645 
	}
}

653 
	$upd©e_off£t
(
UINT
 
¥oc_id
, 
off£t
, 
rq°_°ru˘
 *
rq°
) {

655 
¥oc_obj
 *proc_obj;

656 
chunk
* chunk;

657 
vma_id
 = 0;

659 
¥oc_obj
 = 
	`föd_¥oc_obj
(
¥oc_id
);

663 i‡(
¥oc_obj
) {

667 if(!
rq°
->
id
) {

668 if(
rq°
->
v¨
){

669 
vma_id
 = 
	`gíî©e_vmaid
((c⁄° *)
rq°
->
v¨
);

671 
	`¥ötf
("nv_commit:error generating vma id \n");

672 
îr‹
;

676 
vma_id
 = 
rq°
->
id
;

679 
chunk
 = 
	`föd_chunk
(
vma_id
, 
¥oc_obj
);

681 i‡(!
chunk
) {

682 #ifde‡
NV_DEBUG


683 
	`Ârötf
(
°dîr
,"rq°->mm≠_id %d off£à%d \n",
rq°
->
mm≠_id
, 
off£t
);

687 
	`add_to_¥o˚ss_chunk
(
¥oc_obj
, 
rq°
, 
off£t
);

692 
chunk
->
off£t
 = offset;

693 #ifde‡
NV_DEBUG


694 
	`Ârötf
(
°dîr
,"upd©e_off£à%u \n", 
chunk
->
off£t
);

698  
SUCCESS
;

700  
FAILURE
;

702 
îr‹
:

703  
FAILURE
;

705 
	}
}

710 
	$gë_¥oc_num_m≠s
(
pid
) {

712 
¥oc_obj
 *¥oc_obj = 
NULL
;

714 
¥oc_obj
 = 
	`föd_¥oc_obj
(
pid
);

716 if(!
¥oc_obj
) {

718 
	`Ârötf
(
°dîr
,"processÇot created \n");

723  
¥oc_obj
->
num_mm≠s
;

726 
	}
}

729 
	g¥o˚ss_fd
 = -1;

731 
¥oc_obj
 * 
	$ªad_m≠_‰om_pmem
(
pid
) {

733 
¥oc_obj
 *¥oc_obj = 
NULL
;

734 
size_t
 
byãs
 = 0;

735 
fd
 = -1;

736 *
m≠
;

737 
idx
 = 0;

738 
ULONG
 
addr
 = 0;

739 
chunk
 *chunk;

740 
fûe_«me
[256];

742 
	`bzîo
(
fûe_«me
,256);

745 
byãs
 = (
¥oc_obj
);

748 i‡–
¥o˚ss_fd
 == -1) {

750 
	`gíî©e_fûe_«me
((*Ë
MAPMETADATA_PATH
, 
pid
, 
fûe_«me
);

752 
fd
 = 
	`›í
(
fûe_«me
, 
O_RDWR
);

754 #ifde‡
NV_DEBUG


755 
	`Ârötf
(
°dîr
, "íãrögÇv_m≠_ªad %s\n",
fûe_«me
);

758 i‡(
fd
 == -1) {

759 
	`≥º‹
("Error opening file forÑeading");

760  
NULL
;

762 
¥o˚ss_fd
 = 
fd
;

764 
fd
 = 
¥o˚ss_fd
;

767 
m≠
 = (
¥oc_obj
 *Ë
	`mm≠
(0, 
METADATA_MAP_SIZE
,

768 
PROT_READ
|
PROT_WRITE
, 
MAP_SHARED
, 
fd
, 0);

770 
¥oc_obj
 = (¥oc_obj *Ë
m≠
;

771 i‡(
¥oc_obj
 =
MAP_FAILED
) {

772 
	`˛o£
(
fd
);

773 
	`≥º‹
("Error mmappingÅhe file");

774  
NULL
;

776 #ifde‡
NV_DEBUG


777 
	`Ârötf
(
°dîr
, "¥oc_obj->num_chunk†%d \n", 
¥oc_obj
->
num_chunks
);

780 
byãs
 = (
¥oc_obj
);

782 
addr
 = (Ë
¥oc_obj
;

783 
addr
 =ádd∏+ 
byãs
;

784 
¥oc_obj
->
chunk_öôülized
 = 0;

788 
	`add_¥oc_obj
(
¥oc_obj
);

792 i‡(!
¥oc_obj
->
chunk_öôülized
){

793 
	`INIT_LIST_HEAD
(&(
¥oc_obj
->
chunk_li°
));

794 
¥oc_obj
->
chunk_öôülized
 = 1;

799 #ifde‡
NV_DEBUG


800 
	`Ârötf
(
°dîr
,"¥oc_obj->pid %d \n", 
¥oc_obj
->
pid
);

801 
	`Ârötf
(
°dîr
,"¥oc_obj->sizê%lu \n",
¥oc_obj
->
size
);

802 
	`Ârötf
(
°dîr
,"¥oc_obj->cuº_hóp_add∏%lu \n",
¥oc_obj
->
cuº_hóp_addr
);

803 
	`Ârötf
(
°dîr
,"¥oc_obj->num_chunk†%d\n", 
¥oc_obj
->
num_chunks
);

804 
	`Ârötf
(
°dîr
,"¥oc_obj->°¨t_add∏%lu\n", 
¥oc_obj
->
°¨t_addr
);

809 
idx
 = 0; idx < 
¥oc_obj
->
num_chunks
; idx++) {

810 
chunk
 = (chunk*Ë
addr
;

811 #ifde‡
NV_DEBUG


812 
	`Ârötf
(
°dîr
,"¥oc_obj->num_chunk†%d\n", 
¥oc_obj
->
num_chunks
);

813 
	`¥öt_chunk
(
chunk
);

816 
	`add_chunk
(
chunk
, 
¥oc_obj
);

821 
addr
 =ádd∏+ (
chunk
);

824  
¥oc_obj
;

825 
	}
}

828 *
	gm≠_ªad
 = 
NULL
;

829 
	gg_fd
 = -1;

834 *
	$m≠_¥o˚ss
(
rq°_°ru˘
 *
rq°
) {

836 
fûe_«me
[256];

837 
fd
 = -1;

838 *
nvm≠
 = 
NULL
;

840 if(
g_fd
 > -1)

841 
°¨t_m≠
;

843 
	`bzîo
(
fûe_«me
, 256);

845 
	`gíî©e_fûe_«me
(
FILEPATH
, 
rq°
->
pid
 , 
fûe_«me
);

847 
fd
 = 
	`›í
(
fûe_«me
, 
O_RDWR
);

848 i‡(
fd
 == -1) {

849 
	`Ârötf
(
°dîr
,"fûe_«mê%s\n",
fûe_«me
);

850 
	`≥º‹
("Error opening file forÑeading");

852 
îr‹
;

854 if(
fd
 == -1) {

855 
	`Ârötf
(
°dîr
,"cannotÑead map file \n");

856 
îr‹
;

858 
g_fd
 = 
fd
;

861 
°¨t_m≠
:

863 
nv¨g
.
chunk_id
 = 
rq°
->
mm≠_id
;

864 
nv¨g
.
fd
 = fd;

865 
nv¨g
.
¥oc_id
 = 
rq°
->
pid
;

866 
nv¨g
.
pgoff
 = 0;

867 
nv¨g
.
pÊags
 = 1;

868 
nv¨g
.
ªf_cou¡
 = 1;

874 
nvm≠
 = (*Ë
	`sysˇŒ
(
__NR_nv_mm≠_pgoff
, 0, 
NVRAM_DATASZ
, 
PROT_READ
|
PROT_WRITE
, 
MAP_PRIVATE
|
MAP_ANONYMOUS
 , &
nv¨g
 );

875 i‡(
nvm≠
 =
MAP_FAILED
) {

876 
	`˛o£
(
fd
);

877 
îr‹
;

879 
	`Ârötf
(
°dîr
, "NVMAP %†%d \n", (*)
nvm≠
, 
rq°
->
pid
);

881  
nvm≠
;

883 
îr‹
:

884  
NULL
;

885 
	}
}

887 * 
	$nv_m≠_ªad
(
rq°_°ru˘
 *
rq°
, * 
m≠
 ) {

889 
off£t
 = 0;

890 
¥o˚ss_id
 = 1;

891 
¥oc_obj
 *¥oc_obj = 
NULL
;

892 
vma_id
;

893 
chunk
 *
chunk_±r
 = 
NULL
;

895 
¥o˚ss_id
 = 
rq°
->
pid
;

900 
¥oc_obj
 = 
	`föd_¥o˚ss
(
rq°
->
pid
);

902 if(!
¥oc_obj
) {

907 
¥oc_obj
 = 
	`ªad_m≠_‰om_pmem
(
¥o˚ss_id
);

908 if(!
¥oc_obj
){

909 
	`¥ötf
("gettingÖroc object fromÖmem failed\n");

910 
îr‹
;

914 if(!
rq°
->
id
)

915 
vma_id
 = 
	`gíî©e_vmaid
((c⁄° *)
rq°
->
v¨
);

917 
vma_id
 = 
rq°
->
id
;

919 
chunk_±r
 = 
	`föd_chunk
–
vma_id
, 
¥oc_obj
 );

920 if(!
chunk_±r
) {

921 
	`Ârötf
(
°dîr
, "finding chunk failed \n");

922 
îr‹
;

925 #ifde‡
NV_DEBUG


926 
	`Ârötf
(
°dîr
, "nv_m≠_ªad: chunk off£t: %u \n", 
chunk_±r
->
off£t
);

929 
rq°
->
mm≠_id
 = 
chunk_±r
->mmap_id;

930 
rq°
->
id
 = 
chunk_±r
->
vma_id
;

931 
rq°
->
pid
 = 
chunk_±r
->
¥oc_id
;

942 
m≠_ªad
 = 
	`m≠_¥o˚ss
(
rq°
);

943 if(!
m≠_ªad
){

944 
	`Ârötf
(
°dîr
, "nv_map_read: map_processÑeturnedÇull \n");

945 
îr‹
;

953 
off£t
 = 
chunk_±r
->offset;

954 
rq°
->
mem
 = ()(()
m≠_ªad
 + 
off£t
);

955 #ifde‡
NV_DEBUG


956 
	`Ârötf
(
°dîr
, "nv_map_read: chunk offset %u %lu %lu %u \n",

957 
off£t
, ()
m≠_ªad
, 
rq°
->
mem
, 
chunk_±r
->
Àngth
);

960  (*)
rq°
->
mem
;

961 
îr‹
:

962  
NULL
;

964 
	}
}

966 
	$nv_munm≠
(*
addr
){

968 
ªt_vÆ
 = 0;

970 if(!
addr
) {

971 
	`≥º‹
("nulláddress \n");

975 
ªt_vÆ
 = 
	`munm≠
(
addr
, 
MAX_DATA_SIZE
);

977  
ªt_vÆ
;

979 
	}
}

	@nv_map.h

8 #i‚de‡
NV_MAP_H_


9 
	#NV_MAP_H_


	)

12 
	~"li°.h
"

13 
	~<°dlib.h
>

14 
	~<°d¨g.h
>

15 
	~<°dio.h
>

16 
	~<f˙é.h
>

17 
	~<sys/ty≥s.h
>

18 
	~<°rög.h
>

19 
	~<sys/°©.h
>

20 
	~<sys/mm™.h
>

21 
	~<uni°d.h
>

26 #ifde‡
__˝lu•lus


30 
	tULONG
;

31 
	tUINT
;

33 
	eCHUNKFLGS
 { 
PROCESSED
 =1};

37 
	schunk
 {

39 
mm≠_id
;

40 
mm≠_°øddr
;

44 
°¨t_addr
;

45 
vma_id
;

46 
Àngth
;

47 
off£t
;

51 
isCommôãd
;

53 
¥oc_obj
 *proc_obj;

54 
li°_hód
 
√xt_chunk
;

56 
¥oc_id
;

57 #ifde‡
CHCKPT_HPC


60 
›s
;

63 
CHUNKFLGS
 
Êags
;

72 
	s¥oc_obj
 {

73 
pid
;

74 
li°_hód
 
√xt_¥oc
;

75 
li°_hód
 
chunk_li°
;

76 
chunk_öôülized
;

79 
cuº_hóp_addr
;

82 
°¨t_addr
;

85 
size
;

89 
off£t
;

91 
d©a_m≠_size
;

93 
num_chunks
;

95 
mëa_off£t
;

97 
fûe_desc
;

100 
num_mm≠s
;

106 
	srq°_°ru˘
 {

107 
size_t
 
byãs
;

108 c⁄° * 
v¨
;

111 
id
;

112 
pid
;

114 
›s
;

115 *
§c
;

116 
mem
;

117 
‹dî_id
;

120 
isVﬁ©ûe
;

122 
mm≠_id
;

123 
mm≠_°øddr
;

128 
	snvm≠_¨g_°ru˘
{

129 
fd
;

130 
pgoff
;

131 
chunk_id
;

132 
¥oc_id
;

133 
pÊags
;

134 
ªf_cou¡
;

137 
	squeue
 {

139 
off£t
;

140 
num_chunks
;

147 
outofc‹e_lock
;

149 
li°_hód
 
lchunk_li°
;

150 
li°_öôülized
;

155 
queue
 *
gë_queue
();

157 
chunk
* 
gë_nxt_chunk
(
queue
*,chunk*);

159 *
gë_chunk_mem
–
chunk
 *chunk, 
i
);

161 *
gë_√xt_queue_ôem
–
rq°_°ru˘
 *
rq°
, 
ödex
,
ønk
 );

163 
gë_num_queue_chunks
(
time°ï
);

166 
ö¸_outof_c‹e_lock
();

169 
de¸_outof_c‹e_lock
();

172 
is_outof_c‹e_lock_dißbÀd
();

175 
¥öt_outof_c‹e_lock
();

181 * 
check_if_öô
();

184 * 
nv_mm≠
(
rq°_°ru˘
 *);

186 * 
nv_m≠_ªad
(
rq°_°ru˘
 *, *);

188 
nv_d©a_commô
(
rq°_°ru˘
 *);

190 
nv_munm≠
(*
addr
);

192 
gíî©e_vmaid
(c⁄° *
key
);

194 
ULONG
 
födoff£t
(
UINT
 
¥oc_id
, ULONG 
cuº_addr
);

196 
upd©e_off£t
(
UINT
 
¥oc_id
, 
off£t
, 
rq°_°ru˘
 *
rq°
);

199 
öôülize_nv
(
£ma
);

209 *
¸óã_queue
();

212 
ötülize
(
pid
);

215 * 
check_if_öô
();

218 
¥öt_chunk
(
chunk
 *chunk);

221 
gë_¥oc_°πaddªss
(
rq°_°ru˘
 *);

224 
gë_¥oc_num_m≠s
(
pid
);

227 
ölöe
 
PRINT
(c⁄° * 
f‹m©
, ... ) {

229 
va_li°
 
¨gs
;

230 
va_°¨t
–
¨gs
, 
f‹m©
 );

231 
Ârötf
–
°dîr
, 
f‹m©
, 
¨gs
 );

232 
va_íd
–
¨gs
 );

238 #ifde‡
__˝lu•lus


	@nvmalloc_wrap.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~"hash_m≠.h
"

5 
	~<uni°d.h
>

6 
	~<î∫o.h
>

7 
	~<sys/mm™.h
>

8 
	~"oswego_mÆloc.h
"

14 * 
nv_mÆloc
(
size_t
);

15 *
nv_ªÆloc
(*, 
size_t
);

16 *
nv_ˇŒoc
(
size_t
, size_t);

18 
hash_ö£π
–
key
, 
size_t
 
vÆ
);

19 
size_t
 
hash_föd
–
key
);

20 
hash_dñëe
–
key
);

21 
size_t
 
föd_hash_tŸÆ
();

23 
size_t
 
	$¥öt_tŸÆ_°©s
() {

25 
size_t
 
tŸÆ_Æloc
 =0;

27 
tŸÆ_Æloc

	`föd_hash_tŸÆ
();

29  
tŸÆ_Æloc
;

31 
	}
}

34 
	göput_id
 =0;

35 
	gtid
 = 1;

36 *
	gaddr
 = 
NULL
;

37 
size_t
 
	gªgi⁄_size
 = 65536 * 3000;

38 
	gd
 = -1;

39 
size_t
 
	gvÆ
 = 0;

40 
size_t
 
	gtŸÆ_size
 = 0;

42 *
	$Æloˇã_mem
(
size_t
 
size
) {

44 
ÊgPîsi°
 = 0;

46 
tŸÆ_size
 +
size
;

51 
addr
 = (*)
	`mÆloc
(
size
);

54 #ifde‡
USE_STATS


56 if(!
addr
){

57 
	`Ârötf
(
°dîr
,"NVmallocállocation failed \n");

58  
NULL
;

60 
	`hash_ö£π
(()
addr
, 
size
);

63  
addr
;

64 
	}
}

66 *
	$≤vmÆloc
(
size_t
 
size
, 
rq°_°ru˘
 *
rq°
) {

68 
ÊgPîsi°
 = 0;

70 if(!
rq°
) {

71 
	`≥º‹
("failedÖnvmalloc \n");

72  
NULL
;

75 #ifde‡
USE_NVMALLOC


76 
addr
 = (*)
	`≤v_mÆloc
(
size
, 
rq°
);

78 
addr
 = (*)
	`mÆloc
(
size
);

81 #ifde‡
USE_STATS


82 if(!
addr
){

83 
	`Ârötf
(
°dîr
,"NVmallocállocation failed \n");

84  
NULL
;

86 
	`hash_ö£π
(()
addr
, 
size
);

89  
addr
;

90 
	}
}

92 *
	$≤vªad
(
size_t
 
size
, 
rq°_°ru˘
 *
rq°
) {

94 
ÊgPîsi°
 = 0;

96 if(!
rq°
) {

97 
	`≥º‹
("failedÖnvmalloc \n");

98  
NULL
;

101 #ifde‡
USE_NVMALLOC


102 
addr
 = (*)
	`≤v_ªad
(
size
, 
rq°
);

104 
addr
 = (*)
	`mÆloc
(
size
);

107 #ifde‡
USE_STATS


109 if(!
addr
){

110 
	`Ârötf
(
°dîr
,"NVmallocállocation failed \n");

111  
NULL
;

113 
	`hash_ö£π
(()
addr
, 
size
);

116  
addr
;

117 
	}
}

122 *
	$nvˇŒoc
(
size_t
 
√Àm¡s
, size_à
ñem¡_sz
) {

124 
ÊgPîsi°
 = 0;

126 
tŸÆ_size
 +
√Àm¡s
* 
ñem¡_sz
;

127 ++
öput_id
;

129 #ifde‡
USE_NVMALLOC


130 
addr
 = (*)
	`nv_ˇŒoc
(
√Àm¡s
, 
ñem¡_sz
);

132 
addr
 = 
	`ˇŒoc
(
√Àm¡s
, 
ñem¡_sz
);

135 if(!
addr
){

136 
	`Ârötf
(
°dîr
,"nvcallocállocation failed \n");

137  
NULL
;

142  (*)
addr
;

143 
	}
}

147 *
	$nvªÆloc
(*
‹ig_±r
, 
size_t
 
size
) {

149 
addr
;

150 *
√w_±r
 = 
NULL
;

152 #ifde‡
USE_NVMALLOC


153 
√w_±r
 = (*)
	`nv_ªÆloc
(
‹ig_±r
, 
size
);

155 
√w_±r
 = 
	`ªÆloc
(
‹ig_±r
, 
size
);

158 if(
√w_±r
 =
NULL
){

159 
	`Ârötf
(
°dîr
,"nv_realloc failed \n");

161 #ifde‡
USE_STATS


162 
addr
 = ()
‹ig_±r
;

163 if(!
addr
){

164 
	`Ârötf
(
°dîr
,"NVmallocÑeallocation failed \n");

165  
NULL
;

167 if(
	`hash_föd
(
addr
)) {

169 if–
addr
 =()
√w_±r
) {

171 
	`hash_ö£π
(
addr
, 
size
);

174 
	`hash_dñëe
(
addr
);

175 
	`hash_ö£π
(()
√w_±r
, 
size
);

178 
	`hash_ö£π
(()
√w_±r
, 
size
);

180 
	`Ârötf
(
°dîr
,"nvªÆlo¯ªtu∫ %zu \n",
size
);

184  
√w_±r
;

185 
	}
}

187 
	$nv_‰ì
(*
addr
) {

189 #ifde‡
USE_NVMALLOC


192 
	`‰ì
(
addr
);

194 
	}
}

	@nvmalloc_wrap.h

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

7 #ifde‡
__˝lu•lus


11 
	#PROC_ID
 994

	)

12 
	#CHUNK_ID
 1

	)

13 
	#MAXSIZE
 200* 1024 * 1024

	)

15 
	#FASTA_DELETE_ME


	)

17 
	srq°_°ru˘
 {

18 
size_t
 
byãs
;

19 c⁄° * 
v¨
;

22 
id
;

23 
pid
;

25 
›s
;

26 *
§c
;

27 
mem
;

28 
‹dî_id
;

31 
isVﬁ©ûe
;

32 
mm≠_id
;

33 
mm≠_°øddr
;

37 *
Æloˇã_mem
(
size_t
 
size
);

38 
nv_‰ì
(*
±r
);

39 
size_t
 
¥öt_tŸÆ_°©s
();

40 *
nvªÆloc
(*, 
size_t
);

41 *
≤vmÆloc
(
size_t
 
size
, 
rq°_°ru˘
 *
rq°
);

42 *
≤vªad
(
size_t
 
byãs
, 
rq°_°ru˘
 *
rq°
);

43 #ifde‡
__˝lu•lus


	@oswego_malloc.c

518 
	~<°dio.h
>

519 
	~<°dlib.h
>

520 
	~<°rög.h
>

521 
	~<uni°d.h
>

522 
	~"nv_m≠.h
"

523 
	~"nv_def.h
"

527 
	~<°dio.h
>

528 
	~<°dlib.h
>

529 
	~<°rög.h
>

530 
	~<uni°d.h
>

531 
	~<î∫o.h
>

532 
	~<sys/mm™.h
>

533 
	~<f˙é.h
>

534 
	~<sys/ty≥s.h
>

535 
	~<sys/°©.h
>

536 
	~<˘y≥.h
>

537 
	~<limôs.h
>

543 
	#__NR_nv_mm≠_pgoff
 301

	)

545 
	#NO_NACL


	)

547 
	#DATA_SIZE
 1024*1024*100

	)

549 *
u£_nvm≠
(
size_t
 
s
, 
rq°_°ru˘
 *);

555 #i‚de‡
DLMALLOC_VERSION


556 
	#DLMALLOC_VERSION
 20805

	)

559 #i‚de‡
DLMALLOC_EXPORT


560 
	#DLMALLOC_EXPORT
 

	)

563 #i‚de‡
WIN32


564 #ifde‡
_WIN32


565 
	#WIN32
 1

	)

567 #ifde‡
_WIN32_WCE


568 
	#LACKS_FCNTL_H


	)

569 
	#WIN32
 1

	)

572 #ifde‡
WIN32


573 
	#WIN32_LEAN_AND_MEAN


	)

574 
	~<wödows.h
>

575 
	~<tch¨.h
>

576 
	#HAVE_MMAP
 1

	)

577 
	#HAVE_MORECORE
 0

	)

578 
	#LACKS_UNISTD_H


	)

579 
	#LACKS_SYS_PARAM_H


	)

580 
	#LACKS_SYS_MMAN_H


	)

581 
	#LACKS_STRING_H


	)

582 
	#LACKS_STRINGS_H


	)

583 
	#LACKS_SYS_TYPES_H


	)

584 
	#LACKS_ERRNO_H


	)

585 
	#LACKS_SCHED_H


	)

586 #i‚de‡
MALLOC_FAILURE_ACTION


587 
	#MALLOC_FAILURE_ACTION


	)

589 #i‚de‡
MMAP_CLEARS


590 #ifde‡
_WIN32_WCE


591 
	#MMAP_CLEARS
 0

	)

593 
	#MMAP_CLEARS
 1

	)

598 #i‡
deföed
(
DARWIN
Ë|| deföed(
_DARWIN
)

600 #i‚de‡
HAVE_MORECORE


601 
	#HAVE_MORECORE
 0

	)

602 
	#HAVE_MMAP
 1

	)

604 #i‚de‡
MALLOC_ALIGNMENT


605 
	#MALLOC_ALIGNMENT
 ((
size_t
)16U)

	)

610 #i‚de‡
LACKS_SYS_TYPES_H


611 
	~<sys/ty≥s.h
>

615 
	#MAX_SIZE_T
 (~(
size_t
)0)

	)

617 #i‚de‡
USE_LOCKS


618 
	#USE_LOCKS
 ((
	`deföed
(
USE_SPIN_LOCKS
) && USE_SPIN_LOCKS != 0) || \

619 (
	`deföed
(
USE_RECURSIVE_LOCKS
Ë&& USE_RECURSIVE_LOCKS !0))

	)

622 #i‡
USE_LOCKS


623 #i‡((
deföed
(
__GNUC__
) && \

624 ((
__GNUC__
 > 4 || (__GNUC__ =4 && 
__GNUC_MINOR__
 >= 1)) || \

625 
deföed
(
__i386__
Ë|| deföed(
__x86_64__
))) || \

626 (
deföed
(
_MSC_VER
) && _MSC_VER>=1310))

627 #i‚de‡
USE_SPIN_LOCKS


628 
	#USE_SPIN_LOCKS
 1

	)

630 #ñi‡
USE_SPIN_LOCKS


633 #ñi‡!
deföed
(
USE_SPIN_LOCKS
)

634 
	#USE_SPIN_LOCKS
 0

	)

637 #i‚de‡
ONLY_MSPACES


638 
	#ONLY_MSPACES
 0

	)

640 #i‚de‡
MSPACES


641 #i‡
ONLY_MSPACES


642 
	#MSPACES
 1

	)

644 
	#MSPACES
 0

	)

647 #i‚de‡
MALLOC_ALIGNMENT


648 
	#MALLOC_ALIGNMENT
 ((
size_t
)8U)

	)

650 #i‚de‡
FOOTERS


651 
	#FOOTERS
 0

	)

653 #i‚de‡
ABORT


654 
	#ABORT
 
	`ab‹t
()

	)

656 #i‚de‡
ABORT_ON_ASSERT_FAILURE


657 
	#ABORT_ON_ASSERT_FAILURE
 1

	)

659 #i‚de‡
PROCEED_ON_ERROR


660 
	#PROCEED_ON_ERROR
 0

	)

663 #i‚de‡
INSECURE


664 
	#INSECURE
 0

	)

666 #i‚de‡
MALLOC_INSPECT_ALL


667 
	#MALLOC_INSPECT_ALL
 0

	)

669 #i‚de‡
HAVE_MMAP


670 
	#HAVE_MMAP
 1

	)

672 #i‚de‡
MMAP_CLEARS


673 
	#MMAP_CLEARS
 1

	)

675 #i‚de‡
HAVE_MREMAP


676 #ifde‡
löux


677 
	#HAVE_MREMAP
 1

	)

678 
	#_GNU_SOURCE


	)

680 
	#HAVE_MREMAP
 0

	)

683 #i‚de‡
MALLOC_FAILURE_ACTION


684 
	#MALLOC_FAILURE_ACTION
 
î∫o
 = 
ENOMEM
;

	)

686 #i‚de‡
HAVE_MORECORE


687 #i‡
ONLY_MSPACES


688 
	#HAVE_MORECORE
 0

	)

690 
	#HAVE_MORECORE
 1

	)

693 #i‡!
HAVE_MORECORE


694 
	#MORECORE_CONTIGUOUS
 0

	)

696 
	#MORECORE_DEFAULT
 
sbrk


	)

697 #i‚de‡
MORECORE_CONTIGUOUS


698 
	#MORECORE_CONTIGUOUS
 1

	)

701 #i‚de‡
DEFAULT_GRANULARITY


702 #i‡(
MORECORE_CONTIGUOUS
 || 
deföed
(
WIN32
))

703 
	#DEFAULT_GRANULARITY
 (0Ë

	)

705 
	#DEFAULT_GRANULARITY
 ((
size_t
)64U * (size_t)1024U)

	)

708 #i‚de‡
DEFAULT_TRIM_THRESHOLD


709 #i‚de‡
MORECORE_CANNOT_TRIM


710 
	#DEFAULT_TRIM_THRESHOLD
 ((
size_t
)2U * (size_t)1024U * (size_t)1024U)

	)

712 
	#DEFAULT_TRIM_THRESHOLD
 
MAX_SIZE_T


	)

715 #i‚de‡
DEFAULT_MMAP_THRESHOLD


716 #i‡
HAVE_MMAP


717 
	#DEFAULT_MMAP_THRESHOLD
 ((
size_t
)256U * (size_t)1024U)

	)

719 
	#DEFAULT_MMAP_THRESHOLD
 
MAX_SIZE_T


	)

722 #i‚de‡
MAX_RELEASE_CHECK_RATE


723 #i‡
HAVE_MMAP


724 
	#MAX_RELEASE_CHECK_RATE
 4095

	)

726 
	#MAX_RELEASE_CHECK_RATE
 
MAX_SIZE_T


	)

729 #i‚de‡
USE_BUILTIN_FFS


730 
	#USE_BUILTIN_FFS
 0

	)

732 #i‚de‡
USE_DEV_RANDOM


733 
	#USE_DEV_RANDOM
 0

	)

735 #i‚de‡
NO_MALLINFO


736 
	#NO_MALLINFO
 0

	)

738 #i‚de‡
MALLINFO_FIELD_TYPE


739 
	#MALLINFO_FIELD_TYPE
 
size_t


	)

741 #i‚de‡
NO_MALLOC_STATS


742 
	#NO_MALLOC_STATS
 0

	)

744 #i‚de‡
NO_SEGMENT_TRAVERSAL


745 
	#NO_SEGMENT_TRAVERSAL
 0

	)

755 
	#M_TRIM_THRESHOLD
 (-1)

	)

756 
	#M_GRANULARITY
 (-2)

	)

757 
	#M_MMAP_THRESHOLD
 (-3)

	)

761 #i‡!
NO_MALLINFO


786 #ifde‡
HAVE_USR_INCLUDE_MALLOC_H


787 
	~"/u§/ö˛ude/mÆloc.h
"

789 #i‚de‡
STRUCT_MALLINFO_DECLARED


791 
	#_STRUCT_MALLINFO


	)

792 
	#STRUCT_MALLINFO_DECLARED
 1

	)

793 
	smÆlöfo
 {

794 
MALLINFO_FIELD_TYPE
 
	m¨ía
;

795 
MALLINFO_FIELD_TYPE
 
	m‹dblks
;

796 
MALLINFO_FIELD_TYPE
 
	msmblks
;

797 
MALLINFO_FIELD_TYPE
 
	mhblks
;

798 
MALLINFO_FIELD_TYPE
 
	mhblkhd
;

799 
MALLINFO_FIELD_TYPE
 
	musmblks
;

800 
MALLINFO_FIELD_TYPE
 
	mfsmblks
;

801 
MALLINFO_FIELD_TYPE
 
	mu‹dblks
;

802 
MALLINFO_FIELD_TYPE
 
	mf‹dblks
;

803 
MALLINFO_FIELD_TYPE
 
	mkìpco°
;

814 #i‚de‡
FORCEINLINE


815 #i‡
deföed
(
__GNUC__
)

816 
	#FORCEINLINE
 
__ölöe
 
	`__©åibuã__
 ((
Æways_ölöe
))

	)

817 #ñi‡
deföed
(
_MSC_VER
)

818 
	#FORCEINLINE
 
__f‹˚ölöe


	)

821 #i‚de‡
NOINLINE


822 #i‡
deföed
(
__GNUC__
)

823 
	#NOINLINE
 
	`__©åibuã__
 ((
noölöe
))

	)

824 #ñi‡
deföed
(
_MSC_VER
)

825 
	#NOINLINE
 
	`__de˛•ec
(
noölöe
)

	)

827 
	#NOINLINE


	)

831 #ifde‡
__˝lu•lus


833 #i‚de‡
FORCEINLINE


834 
	#FORCEINLINE
 
ölöe


	)

837 #i‚de‡
FORCEINLINE


838 
	#FORCEINLINE


	)

841 #i‡!
ONLY_MSPACES


845 #i‚de‡
USE_DL_PREFIX


848 
	#d vmÆloc
 
nv_mÆloc


	)

849 
	#d vˇŒoc
 
nv_ˇŒoc


	)

850 
	#d vªÆloc
 
nv_ªÆloc


	)

851 
	#dÕnvmÆloc
 
≤v_mÆloc


	)

852 
	#dÕnvªad
 
≤v_ªad


	)

853 
	#d vcommô
 
nv_commô


	)

889 
DLMALLOC_EXPORT
 * 
dlmÆloc
(
size_t
);

891 
DLMALLOC_EXPORT
 * 
d vmÆloc
(
size_t
);

893 
nv‰ì
(*);

902 
DLMALLOC_EXPORT
 
dl‰ì
(*);

909 
DLMALLOC_EXPORT
 * 
dlˇŒoc
(
size_t
, size_t);

910 
DLMALLOC_EXPORT
 * 
d vˇŒoc
(
size_t
, size_t);

934 
DLMALLOC_EXPORT
 * 
dÃóŒoc
(*, 
size_t
);

949 
DLMALLOC_EXPORT
 * 
dÃóŒoc_ö_∂a˚
(*, 
size_t
);

963 
DLMALLOC_EXPORT
 * 
dlmemÆign
(
size_t
, size_t);

973 
DLMALLOC_EXPORT
 
dÕosix_memÆign
(**, 
size_t
, size_t);

980 
DLMALLOC_EXPORT
 * 
dlvÆloc
(
size_t
);

1004 
DLMALLOC_EXPORT
 
dlmÆl›t
(, );

1015 
DLMALLOC_EXPORT
 
size_t
 
dlmÆloc_foŸ¥öt
();

1028 
DLMALLOC_EXPORT
 
size_t
 
dlmÆloc_max_foŸ¥öt
();

1039 
DLMALLOC_EXPORT
 
size_t
 
dlmÆloc_foŸ¥öt_limô
();

1053 
DLMALLOC_EXPORT
 
size_t
 
dlmÆloc_£t_foŸ¥öt_limô
(size_à
byãs
);

1055 #i‡
MALLOC_INSPECT_ALL


1084 
DLMALLOC_EXPORT
 
dlmÆloc_ö•e˘_Æl
((*
h™dÀr
)(*, *, 
size_t
, *),

1085 * 
¨g
);

1089 #i‡!
NO_MALLINFO


1112 
DLMALLOC_EXPORT
 
mÆlöfo
 
	`dlmÆlöfo
();

1164 
DLMALLOC_EXPORT
 ** 
	`dlödïídít_ˇŒoc
(
size_t
, size_t, **);

1222 
DLMALLOC_EXPORT
 ** 
	`dlödïídít_comÆloc
(
size_t
, size_t*, **);

1233 
DLMALLOC_EXPORT
 
size_t
 
	`dlbulk_‰ì
(**, size_à
n_ñemíts
);

1240 
DLMALLOC_EXPORT
 * 
	`dÕvÆloc
(
size_t
);

1263 
DLMALLOC_EXPORT
 
	`dlmÆloc_åim
(
size_t
);

1284 
DLMALLOC_EXPORT
 
	`dlmÆloc_°©s
();

1302 
size_t
 
	`dlmÆloc_ußbÀ_size
(*);

1304 #i‡
MSPACES


1310 * 
	tm•a˚
;

1323 
DLMALLOC_EXPORT
 
m•a˚
 
	`¸óã_m•a˚
(
size_t
 
ˇ∑côy
, 
locked
);

1331 
DLMALLOC_EXPORT
 
size_t
 
	`de°roy_m•a˚
(
m•a˚
 
m•
);

1342 
DLMALLOC_EXPORT
 
m•a˚
 
	`¸óã_m•a˚_wôh_ba£
(* 
ba£
, 
size_t
 
ˇ∑côy
, 
locked
);

1355 
DLMALLOC_EXPORT
 
	`m•a˚_åack_œrge_chunks
(
m•a˚
 
m•
, 
íabÀ
);

1362 
DLMALLOC_EXPORT
 * 
	`m•a˚_mÆloc
(
m•a˚
 
m•
, 
size_t
 
byãs
);

1372 
DLMALLOC_EXPORT
 
	`m•a˚_‰ì
(
m•a˚
 
m•
, * 
mem
);

1383 
DLMALLOC_EXPORT
 * 
	`m•a˚_ªÆloc
(
m•a˚
 
m•
, * 
mem
, 
size_t
 
√wsize
);

1389 
DLMALLOC_EXPORT
 * 
	`m•a˚_ˇŒoc
(
m•a˚
 
m•
, 
size_t
 
n_ñemíts
, size_à
ñem_size
);

1395 
DLMALLOC_EXPORT
 * 
	`m•a˚_memÆign
(
m•a˚
 
m•
, 
size_t
 
Æignmít
, size_à
byãs
);

1401 
DLMALLOC_EXPORT
 ** 
	`m•a˚_ödïídít_ˇŒoc
(
m•a˚
 
m•
, 
size_t
 
n_ñemíts
,

1402 
size_t
 
ñem_size
, * 
chunks
[]);

1408 
DLMALLOC_EXPORT
 ** 
	`m•a˚_ödïídít_comÆloc
(
m•a˚
 
m•
, 
size_t
 
n_ñemíts
,

1409 
size_t
 
sizes
[], * 
chunks
[]);

1415 
DLMALLOC_EXPORT
 
size_t
 
	`m•a˚_foŸ¥öt
(
m•a˚
 
m•
);

1421 
DLMALLOC_EXPORT
 
size_t
 
	`m•a˚_max_foŸ¥öt
(
m•a˚
 
m•
);

1424 #i‡!
NO_MALLINFO


1429 
DLMALLOC_EXPORT
 
mÆlöfo
 
	`m•a˚_mÆlöfo
(
m•a˚
 
m•
);

1435 
DLMALLOC_EXPORT
 
size_t
 
	`m•a˚_ußbÀ_size
(* 
mem
);

1441 
DLMALLOC_EXPORT
 
	`m•a˚_mÆloc_°©s
(
m•a˚
 
m•
);

1447 
DLMALLOC_EXPORT
 
	`m•a˚_åim
(
m•a˚
 
m•
, 
size_t
 
∑d
);

1452 
DLMALLOC_EXPORT
 
	`m•a˚_mÆl›t
(, );

1456 #ifde‡
__˝lu•lus


1457 
	}
}

1472 #ifde‡
_MSC_VER


1473 #¥agm®
w¨nög
–
dißbÀ
 : 4146 )

1475 #i‡!
NO_MALLOC_STATS


1476 
	~<°dio.h
>

1478 #i‚de‡
LACKS_ERRNO_H


1479 
	~<î∫o.h
>

1481 #ifde‡
DEBUG


1482 #i‡
ABORT_ON_ASSERT_FAILURE


1483 #unde‡
as£π


1484 
	#as£π
(
x
Ëif(!(x)Ë
ABORT


	)

1486 
	~<as£π.h
>

1489 #i‚de‡
as£π


1490 
	#as£π
(
x
)

	)

1492 
	#DEBUG
 0

	)

1494 #i‡!
deföed
(
WIN32
Ë&& !deföed(
LACKS_TIME_H
)

1495 
	~<time.h
>

1497 #i‚de‡
LACKS_STDLIB_H


1498 
	~<°dlib.h
>

1500 #i‚de‡
LACKS_STRING_H


1501 
	~<°rög.h
>

1503 #i‡
USE_BUILTIN_FFS


1504 #i‚de‡
LACKS_STRINGS_H


1505 
	~<°rögs.h
>

1508 #i‡
HAVE_MMAP


1509 #i‚de‡
LACKS_SYS_MMAN_H


1511 #i‡(
deföed
(
löux
Ë&& !deföed(
__USE_GNU
))

1512 
	#__USE_GNU
 1

	)

1513 
	~<sys/mm™.h
>

1514 #unde‡
__USE_GNU


1516 
	~<sys/mm™.h
>

1519 #i‚de‡
LACKS_FCNTL_H


1520 
	~<f˙é.h
>

1523 #i‚de‡
LACKS_UNISTD_H


1524 
	~<uni°d.h
>

1526 #i‡!
deföed
(
__FªeBSD__
Ë&& !deföed(
__O≥nBSD__
Ë&& !deföed(
__NëBSD__
)

1527 * 
sbrk
(
±rdiff_t
);

1532 #i‡
USE_LOCKS


1533 #i‚de‡
WIN32


1534 #i‡
deföed
 (
__SVR4
Ë&& deföed (
__sun
)

1535 
	~<thªad.h
>

1536 #ñi‡!
deföed
(
LACKS_SCHED_H
)

1537 
	~<sched.h
>

1539 #i‡(
deföed
(
USE_RECURSIVE_LOCKS
Ë&& USE_RECURSIVE_LOCKS !0Ë|| !
USE_SPIN_LOCKS


1540 
	~<±hªad.h
>

1542 #ñi‡
deföed
(
_MSC_VER
)

1543 #i‚de‡
_M_AMD64


1545 #ifde‡
__˝lu•lus


1548 
LONG
 
__cde˛
 
_I¡îlockedCom∑ªExch™ge
(LONG vﬁ©ûê*
De°
, LONG 
Exch™ge
, LONG 
Comp
);

1549 
LONG
 
__cde˛
 
_I¡îlockedExch™ge
(LONG vﬁ©ûê*
T¨gë
, LONG 
VÆue
);

1550 #ifde‡
__˝lu•lus


1554 #¥agm®
öåösic
 (
_I¡îlockedCom∑ªExch™ge
)

1555 #¥agm®
öåösic
 (
_I¡îlockedExch™ge
)

1556 
	#öãæockedcom∑ªexch™ge
 
_I¡îlockedCom∑ªExch™ge


	)

1557 
	#öãæockedexch™ge
 
_I¡îlockedExch™ge


	)

1558 #ñi‡
deföed
(
WIN32
Ë&& deföed(
__GNUC__
)

1559 
	#öãæockedcom∑ªexch™ge
(
a
, 
b
, 
c
Ë
	`__sync_vÆ_com∑ª_™d_sw≠
◊, c, b)

	)

1560 
	#öãæockedexch™ge
 
__sync_lock_ã°_™d_£t


	)

1565 #i‡
deföed
(
_MSC_VER
) && _MSC_VER>=1300

1566 #i‚de‡
BôSˇnF‹w¨d


1567 #ifde‡
__˝lu•lus


1570 
_BôSˇnF‹w¨d
(*
ödex
, 
mask
);

1571 
_BôSˇnRevî£
(*
ödex
, 
mask
);

1572 #ifde‡
__˝lu•lus


1576 
	#BôSˇnF‹w¨d
 
_BôSˇnF‹w¨d


	)

1577 
	#BôSˇnRevî£
 
_BôSˇnRevî£


	)

1578 #¥agm®
öåösic
(
_BôSˇnF‹w¨d
)

1579 #¥agm®
öåösic
(
_BôSˇnRevî£
)

1583 #i‚de‡
WIN32


1584 #i‚de‡
mÆloc_gë∑gesize


1585 #ifde‡
_SC_PAGESIZE


1586 #i‚de‡
_SC_PAGE_SIZE


1587 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

1590 #ifde‡
_SC_PAGE_SIZE


1591 
	#mÆloc_gë∑gesize
 
	`sysc⁄f
(
_SC_PAGE_SIZE
)

	)

1593 #i‡
deföed
(
BSD
Ë|| deföed(
DGUX
Ë|| deföed(
HAVE_GETPAGESIZE
)

1594 
size_t
 
gë∑gesize
();

1595 
	#mÆloc_gë∑gesize
 
	`gë∑gesize
()

	)

1597 #ifde‡
WIN32


1598 
	#mÆloc_gë∑gesize
 
	`gë∑gesize
()

	)

1600 #i‚de‡
LACKS_SYS_PARAM_H


1601 
	~<sys/∑øm.h
>

1603 #ifde‡
EXEC_PAGESIZE


1604 
	#mÆloc_gë∑gesize
 
EXEC_PAGESIZE


	)

1606 #ifde‡
NBPG


1607 #i‚de‡
CLSIZE


1608 
	#mÆloc_gë∑gesize
 
NBPG


	)

1610 
	#mÆloc_gë∑gesize
 (
NBPG
 * 
CLSIZE
)

	)

1613 #ifde‡
NBPC


1614 
	#mÆloc_gë∑gesize
 
NBPC


	)

1616 #ifde‡
PAGESIZE


1617 
	#mÆloc_gë∑gesize
 
PAGESIZE


	)

1619 
	#mÆloc_gë∑gesize
 ((
size_t
)4096U)

	)

1633 
	#SIZE_T_SIZE
 ((
size_t
))

	)

1634 
	#SIZE_T_BITSIZE
 ((
size_t
Ë<< 3)

	)

1638 
	#SIZE_T_ZERO
 ((
size_t
)0)

	)

1639 
	#SIZE_T_ONE
 ((
size_t
)1)

	)

1640 
	#SIZE_T_TWO
 ((
size_t
)2)

	)

1641 
	#SIZE_T_FOUR
 ((
size_t
)4)

	)

1642 
	#TWO_SIZE_T_SIZES
 (
SIZE_T_SIZE
<<1)

	)

1643 
	#FOUR_SIZE_T_SIZES
 (
SIZE_T_SIZE
<<2)

	)

1644 
	#SIX_SIZE_T_SIZES
 (
FOUR_SIZE_T_SIZES
+
TWO_SIZE_T_SIZES
)

	)

1645 
	#HALF_MAX_SIZE_T
 (
MAX_SIZE_T
 / 2U)

	)

1648 
	#CHUNK_ALIGN_MASK
 (
MALLOC_ALIGNMENT
 - 
SIZE_T_ONE
)

	)

1651 
	#is_Æig√d
(
A
Ë(((
size_t
)((A)Ë& (
CHUNK_ALIGN_MASK
)Ë=0)

	)

1654 
	#Æign_off£t
(
A
)\

1655 ((((
size_t
)(
A
Ë& 
CHUNK_ALIGN_MASK
) == 0)? 0 :\

1656 ((
MALLOC_ALIGNMENT
 - ((
size_t
)(
A
Ë& 
CHUNK_ALIGN_MASK
)Ë& CHUNK_ALIGN_MASK))

	)

1668 
	#MFAIL
 ((*)(
MAX_SIZE_T
))

	)

1669 
	#CMFAIL
 ((*)(
MFAIL
)Ë

	)

1671 #i‡
HAVE_MMAP


1673 #i‚de‡
WIN32


1674 
	#MUNMAP_DEFAULT
(
a
, 
s
Ë
	`munm≠
(◊), (s))

	)

1675 
	#MMAP_PROT
 (
PROT_READ
|
PROT_WRITE
)

	)

1676 #i‡!
deföed
(
MAP_ANONYMOUS
Ë&& deföed(
MAP_ANON
)

1677 
	#MAP_ANONYMOUS
 
MAP_ANON


	)

1679 #ifde‡
MAP_ANONYMOUS


1680 
	#MMAP_FLAGS
 (
MAP_PRIVATE
|
MAP_ANONYMOUS
)

	)

1681 
	#MMAP_DEFAULT
(
s
Ë
	`mm≠
(0, (s), 
MMAP_PROT
, 
MMAP_FLAGS
, -1, 0)

	)

1687 
	#MMAP_FLAGS
 (
MAP_PRIVATE
)

	)

1688 
	gdev_zîo_fd
 = -1;

1689 
	#MMAP_DEFAULT
(
s
Ë((
dev_zîo_fd
 < 0) ? \

1690 (
dev_zîo_fd
 = 
	`›í
("/dev/zîo", 
O_RDWR
), \

1691 
	`mm≠
(0, (
s
), 
MMAP_PROT
, 
MMAP_FLAGS
, 
dev_zîo_fd
, 0)) : \

1692 
	`mm≠
(0, (
s
), 
MMAP_PROT
, 
MMAP_FLAGS
, 
dev_zîo_fd
, 0))

	)

1695 
	#DIRECT_MMAP_DEFAULT
(
s
Ë
	`MMAP_DEFAULT
(s)

	)

1700 
FORCEINLINE
 * 
wö32mm≠
(
size_t
 
size
) {

1701 * 
	g±r
 = 
VútuÆAŒoc
(0, 
size
, 
MEM_RESERVE
|
MEM_COMMIT
, 
PAGE_READWRITE
);

1702  (
	g±r
 !0)? 
±r
: 
MFAIL
;

1706 
FORCEINLINE
 * 
wö32dúe˘_mm≠
(
size_t
 
size
) {

1707 * 
	g±r
 = 
VútuÆAŒoc
(0, 
size
, 
MEM_RESERVE
|
MEM_COMMIT
|
MEM_TOP_DOWN
,

1708 
PAGE_READWRITE
);

1709  (
	g±r
 !0)? 
±r
: 
MFAIL
;

1713 
FORCEINLINE
 
wö32munm≠
(* 
±r
, 
size_t
 
size
) {

1714 
MEMORY_BASIC_INFORMATION
 
	gmöfo
;

1715 * 
	g˝å
 = (*)
±r
;

1716 
	gsize
) {

1717 i‡(
VútuÆQuîy
(
˝å
, &
möfo
, (minfo)) == 0)

1719 i‡(
	gmöfo
.
	gBa£Addªss
 !
˝å
 || 
möfo
.
AŒoˇti⁄Ba£
 != cptr ||

1720 
möfo
.
Sèã
 !
MEM_COMMIT
 || möfo.
Regi⁄Size
 > 
size
)

1722 i‡(
VútuÆFªe
(
˝å
, 0, 
MEM_RELEASE
) == 0)

1724 
	g˝å
 +
möfo
.
Regi⁄Size
;

1725 
	gsize
 -
möfo
.
Regi⁄Size
;

1730 
	#MMAP_DEFAULT
(
s
Ë
	`wö32mm≠
(s)

	)

1731 
	#MUNMAP_DEFAULT
(
a
, 
s
Ë
	`wö32munm≠
(◊), (s))

	)

1732 
	#DIRECT_MMAP_DEFAULT
(
s
Ë
	`wö32dúe˘_mm≠
(s)

	)

1736 #i‡
HAVE_MREMAP


1737 #i‚de‡
WIN32


1738 
	#MREMAP_DEFAULT
(
addr
, 
osz
, 
nsz
, 
mv
Ë
	`mªm≠
(◊ddr), (osz), (nsz), (mv))

	)

1745 #i‡
HAVE_MORECORE


1746 #ifde‡
MORECORE


1747 
	#CALL_MORECORE
(
S
Ë
	`MORECORE
(S)

	)

1749 
	#CALL_MORECORE
(
S
Ë
	`MORECORE_DEFAULT
(S)

	)

1752 
	#CALL_MORECORE
(
S
Ë
MFAIL


	)

1758 #i‡
HAVE_MMAP


1759 
	#USE_MMAP_BIT
 (
SIZE_T_ONE
)

	)

1761 #ifde‡
MMAP


1762 
	#CALL_MMAP
(
s
Ë
	`MMAP
(s)

	)

1764 
	#CALL_MMAP
(
s
Ë
	`MMAP_DEFAULT
(s)

	)

1766 #ifde‡
MUNMAP


1767 
	#CALL_MUNMAP
(
a
, 
s
Ë
	`MUNMAP
(◊), (s))

	)

1769 
	#CALL_MUNMAP
(
a
, 
s
Ë
	`MUNMAP_DEFAULT
(◊), (s))

	)

1771 #ifde‡
DIRECT_MMAP


1772 
	#CALL_DIRECT_MMAP
(
s
Ë
	`DIRECT_MMAP
(s)

	)

1774 
	#CALL_DIRECT_MMAP
(
s
Ë
	`DIRECT_MMAP_DEFAULT
(s)

	)

1777 
	#USE_MMAP_BIT
 (
SIZE_T_ZERO
)

	)

1779 
	#MMAP
(
s
Ë
MFAIL


	)

1780 
	#MUNMAP
(
a
, 
s
Ë(-1)

	)

1781 
	#DIRECT_MMAP
(
s
Ë
MFAIL


	)

1782 
	#CALL_DIRECT_MMAP
(
s
Ë
	`DIRECT_MMAP
(s)

	)

1783 
	#CALL_MMAP
(
s
Ë
	`MMAP
(s)

	)

1784 
	#CALL_MUNMAP
(
a
, 
s
Ë
	`MUNMAP
(◊), (s))

	)

1790 #i‡
HAVE_MMAP
 && 
HAVE_MREMAP


1791 #ifde‡
MREMAP


1792 
	#CALL_MREMAP
(
addr
, 
osz
, 
nsz
, 
mv
Ë
	`MREMAP
(◊ddr), (osz), (nsz), (mv))

	)

1794 
	#CALL_MREMAP
(
addr
, 
osz
, 
nsz
, 
mv
Ë
	`MREMAP_DEFAULT
(◊ddr), (osz), (nsz), (mv))

	)

1797 
	#CALL_MREMAP
(
addr
, 
osz
, 
nsz
, 
mv
Ë
MFAIL


	)

1801 
	#USE_NONCONTIGUOUS_BIT
 (4U)

	)

1804 
	#EXTERN_BIT
 (8U)

	)

1837 #i‡!
USE_LOCKS


1838 
	#USE_LOCK_BIT
 (0U)

	)

1839 
	#INITIAL_LOCK
(
l
Ë(0)

	)

1840 
	#DESTROY_LOCK
(
l
Ë(0)

	)

1841 
	#ACQUIRE_MALLOC_GLOBAL_LOCK
()

	)

1842 
	#RELEASE_MALLOC_GLOBAL_LOCK
()

	)

1845 #i‡
USE_LOCKS
 > 1

1855 #ñi‡
USE_SPIN_LOCKS


1860 #i‡
deföed
(
__GNUC__
)&& (__GNUC__ > 4 || (__GNUC__ =4 && 
__GNUC_MINOR__
 >= 1))

1861 
	#CAS_LOCK
(
¶
Ë
	`__sync_lock_ã°_™d_£t
(¶, 1)

	)

1862 
	#CLEAR_LOCK
(
¶
Ë
	`__sync_lock_ªÀa£
(¶)

	)

1864 #ñi‡(
deföed
(
__GNUC__
Ë&& (deföed(
__i386__
Ë|| deföed(
__x86_64__
)))

1866 
FORCEINLINE
 
x86_ˇs_lock
(*
¶
) {

1867 
	gªt
;

1868 
	gvÆ
 = 1;

1869 
	gcmp
 = 0;

1870 
__asm__
 
__vﬁ©ûe__
 ("lock; cmpxchgl %1, %2"

1871 : "˜" (
ªt
)

1872 : "r" (
vÆ
), "m" (*(
¶
)), "0"(
cmp
)

1874  
	gªt
;

1877 
FORCEINLINE
 
x86_˛ór_lock
(* 
¶
) {

1878 
as£π
(*
¶
 != 0);

1879 
	g¥ev
 = 0;

1880 
	gªt
;

1881 
__asm__
 
__vﬁ©ûe__
 ("lock; xchgl %0, %1"

1882 : "Ù" (
ªt
)

1883 : "m" (*(
¶
)), "0"(
¥ev
)

1887 
	#CAS_LOCK
(
¶
Ë
	`x86_ˇs_lock
(¶)

	)

1888 
	#CLEAR_LOCK
(
¶
Ë
	`x86_˛ór_lock
(¶)

	)

1891 
	#CAS_LOCK
(
¶
Ë
	`öãæockedexch™ge
(¶, 1)

	)

1892 
	#CLEAR_LOCK
(
¶
Ë
	`öãæockedexch™ge
 (¶, 0)

	)

1897 
	#SPINS_PER_YIELD
 63

	)

1898 #i‡
deföed
(
_MSC_VER
)

1899 
	#SLEEP_EX_DURATION
 50

	)

1900 
	#SPIN_LOCK_YIELD
 
	`SÀïEx
(
SLEEP_EX_DURATION
, 
FALSE
)

	)

1901 #ñi‡
deföed
 (
__SVR4
Ë&& deföed (
__sun
)

1902 
	#SPIN_LOCK_YIELD
 
	`thr_yõld
();

	)

1903 #ñi‡!
deföed
(
LACKS_SCHED_H
)

1904 
	#SPIN_LOCK_YIELD
 
	`sched_yõld
();

	)

1906 
	#SPIN_LOCK_YIELD


	)

1909 #i‡!
deföed
(
USE_RECURSIVE_LOCKS
) || USE_RECURSIVE_LOCKS == 0

1911 
•ö_acquúe_lock
(*
¶
) {

1912 
	g•ös
 = 0;

1913 *(vﬁ©ûê*)
	g¶
 !0 || 
CAS_LOCK
(
¶
)) {

1914 i‡((++
•ös
 & 
SPINS_PER_YIELD
) == 0) {

1915 
SPIN_LOCK_YIELD
;

1921 
	#MLOCK_T
 

	)

1922 
	#TRY_LOCK
(
¶
Ë!
	`CAS_LOCK
(¶)

	)

1923 
	#RELEASE_LOCK
(
¶
Ë
	`CLEAR_LOCK
(¶)

	)

1924 
	#ACQUIRE_LOCK
(
¶
Ë(
	`CAS_LOCK
(¶)? 
	`•ö_acquúe_lock
(¶Ë: 0)

	)

1925 
	#INITIAL_LOCK
(
¶
Ë(*¶ = 0)

	)

1926 
	#DESTROY_LOCK
(
¶
Ë(0)

	)

1927 
MLOCK_T
 
	gmÆloc_globÆ_muãx
 = 0;

1931 #ifde‡
WIN32


1932 
	#THREAD_ID_T
 
DWORD


	)

1933 
	#CURRENT_THREAD
 
	`GëCuºítThªadId
()

	)

1934 
	#EQ_OWNER
(
X
,
Y
Ë((XË=(Y))

	)

1941 
	#THREAD_ID_T
 
±hªad_t


	)

1942 
	#CURRENT_THREAD
 
	`±hªad_£lf
()

	)

1943 
	#EQ_OWNER
(
X
,
Y
Ë
	`±hªad_equÆ
(X, Y)

	)

1946 
	smÆloc_ªcursive_lock
 {

1947 
	g¶
;

1948 
	gc
;

1949 
THREAD_ID_T
 
	gthªadid
;

1952 
	#MLOCK_T
 
mÆloc_ªcursive_lock


	)

1953 
MLOCK_T
 
	gmÆloc_globÆ_muãx
 = { 0, 0, (
THREAD_ID_T
)0};

1955 
FORCEINLINE
 
ªcursive_ªÀa£_lock
(
MLOCK_T
 *
lk
) {

1956 
as£π
(
lk
->
¶
 != 0);

1957 i‡(--
	glk
->
	gc
 == 0) {

1958 
CLEAR_LOCK
(&
lk
->
¶
);

1962 
FORCEINLINE
 
ªcursive_acquúe_lock
(
MLOCK_T
 *
lk
) {

1963 
THREAD_ID_T
 
	gmythªadid
 = 
CURRENT_THREAD
;

1964 
	g•ös
 = 0;

1966 i‡(*((vﬁ©ûê*)(&
	glk
->
	g¶
)) == 0) {

1967 i‡(!
CAS_LOCK
(&
lk
->
¶
)) {

1968 
lk
->
thªadid
 = 
mythªadid
;

1969 
	glk
->
	gc
 = 1;

1973 i‡(
EQ_OWNER
(
lk
->
thªadid
, 
mythªadid
)) {

1974 ++
	glk
->
	gc
;

1977 i‡((++
	g•ös
 & 
	gSPINS_PER_YIELD
) == 0) {

1978 
SPIN_LOCK_YIELD
;

1983 
FORCEINLINE
 
ªcursive_åy_lock
(
MLOCK_T
 *
lk
) {

1984 
THREAD_ID_T
 
	gmythªadid
 = 
CURRENT_THREAD
;

1985 i‡(*((vﬁ©ûê*)(&
	glk
->
	g¶
)) == 0) {

1986 i‡(!
CAS_LOCK
(&
lk
->
¶
)) {

1987 
lk
->
thªadid
 = 
mythªadid
;

1988 
	glk
->
	gc
 = 1;

1992 i‡(
EQ_OWNER
(
lk
->
thªadid
, 
mythªadid
)) {

1993 ++
	glk
->
	gc
;

1999 
	#RELEASE_LOCK
(
lk
Ë
	`ªcursive_ªÀa£_lock
÷k)

	)

2000 
	#TRY_LOCK
(
lk
Ë
	`ªcursive_åy_lock
÷k)

	)

2001 
	#ACQUIRE_LOCK
(
lk
Ë
	`ªcursive_acquúe_lock
÷k)

	)

2002 
	#INITIAL_LOCK
(
lk
Ë(÷k)->
thªadid
 = (
THREAD_ID_T
)0, (lk)->
¶
 = 0, (lk)->
c
 = 0)

	)

2003 
	#DESTROY_LOCK
(
lk
Ë(0)

	)

2006 #ñi‡
deföed
(
WIN32
)

2007 
	#MLOCK_T
 
CRITICAL_SECTION


	)

2008 
	#ACQUIRE_LOCK
(
lk
Ë(
	`E¡îCrôiˇlSe˘i⁄
÷k), 0)

	)

2009 
	#RELEASE_LOCK
(
lk
Ë
	`LóveCrôiˇlSe˘i⁄
÷k)

	)

2010 
	#TRY_LOCK
(
lk
Ë
	`TryE¡îCrôiˇlSe˘i⁄
÷k)

	)

2011 
	#INITIAL_LOCK
(
lk
Ë(!
	`InôülizeCrôiˇlSe˘i⁄AndSpöCou¡
(÷k), 0x80000000|4000))

	)

2012 
	#DESTROY_LOCK
(
lk
Ë(
	`DñëeCrôiˇlSe˘i⁄
÷k), 0)

	)

2013 
	#NEED_GLOBAL_LOCK_INIT


	)

2015 
MLOCK_T
 
	gmÆloc_globÆ_muãx
;

2016 vﬁ©ûê
	gmÆloc_globÆ_muãx_°©us
;

2019 
öô_mÆloc_globÆ_muãx
() {

2021 
	g°©
 = 
mÆloc_globÆ_muãx_°©us
;

2022 i‡(
	g°©
 > 0)

2025 i‡(
	g°©
 == 0 &&

2026 
öãæockedcom∑ªexch™ge
(&
mÆloc_globÆ_muãx_°©us
, -1, 0) == 0) {

2027 
InôülizeCrôiˇlSe˘i⁄
(&
mÆloc_globÆ_muãx
);

2028 
öãæockedexch™ge
(&
mÆloc_globÆ_muãx_°©us
,1);

2031 
SÀïEx
(0, 
FALSE
);

2036 
	#MLOCK_T
 
±hªad_muãx_t


	)

2037 
	#ACQUIRE_LOCK
(
lk
Ë
	`±hªad_muãx_lock
÷k)

	)

2038 
	#RELEASE_LOCK
(
lk
Ë
	`±hªad_muãx_u∆ock
÷k)

	)

2039 
	#TRY_LOCK
(
lk
Ë(!
	`±hªad_muãx_åylock
÷k))

	)

2040 
	#INITIAL_LOCK
(
lk
Ë
	`±hªad_öô_lock
÷k)

	)

2041 
	#DESTROY_LOCK
(
lk
Ë
	`±hªad_muãx_de°roy
÷k)

	)

2043 #i‡
deföed
(
USE_RECURSIVE_LOCKS
Ë&& USE_RECURSIVE_LOCKS !0 && deföed(
löux
Ë&& !deföed(
PTHREAD_MUTEX_RECURSIVE
)

2046 
±hªad_muãx©å_£tköd_≈
 
__P
 ((
±hªad_muãx©å_t
 *
__©å
,

2047 
__köd
));

2048 
	#PTHREAD_MUTEX_RECURSIVE
 
PTHREAD_MUTEX_RECURSIVE_NP


	)

2049 
	#±hªad_muãx©å_£ây≥
(
x
,
y
Ë
	`±hªad_muãx©å_£tköd_≈
(x,y)

	)

2052 
MLOCK_T
 
	gmÆloc_globÆ_muãx
 = 
PTHREAD_MUTEX_INITIALIZER
;

2054 
±hªad_öô_lock
 (
MLOCK_T
 *
lk
) {

2055 
±hªad_muãx©å_t
 
	g©å
;

2056 i‡(
±hªad_muãx©å_öô
(&
©å
))  1;

2057 #i‡
deföed
(
USE_RECURSIVE_LOCKS
) && USE_RECURSIVE_LOCKS != 0

2058 i‡(
±hªad_muãx©å_£ây≥
(&
©å
, 
PTHREAD_MUTEX_RECURSIVE
))  1;

2060 i‡(
±hªad_muãx_öô
(
lk
, &
©å
))  1;

2061 i‡(
±hªad_muãx©å_de°roy
(&
©å
))  1;

2068 
	#USE_LOCK_BIT
 (2U)

	)

2070 #i‚de‡
ACQUIRE_MALLOC_GLOBAL_LOCK


2071 
	#ACQUIRE_MALLOC_GLOBAL_LOCK
(Ë
	`ACQUIRE_LOCK
(&
mÆloc_globÆ_muãx
);

	)

2074 #i‚de‡
RELEASE_MALLOC_GLOBAL_LOCK


2075 
	#RELEASE_MALLOC_GLOBAL_LOCK
(Ë
	`RELEASE_LOCK
(&
mÆloc_globÆ_muãx
);

	)

2217 
	smÆloc_chunk
 {

2218 
size_t
 
	g¥ev_foŸ
;

2219 
size_t
 
	ghód
;

2220 
mÆloc_chunk
* 
	gfd
;

2221 
mÆloc_chunk
* 
	gbk
;

2224 
mÆloc_chunk
 
	tmchunk
;

2225 
mÆloc_chunk
* 
	tmchunk±r
;

2226 
mÆloc_chunk
* 
	tsbö±r
;

2227 
	tbödex_t
;

2228 
	tböm≠_t
;

2229 
	tÊag_t
;

2233 
	#MCHUNK_SIZE
 ((
mchunk
))

	)

2235 #i‡
FOOTERS


2236 
	#CHUNK_OVERHEAD
 (
TWO_SIZE_T_SIZES
)

	)

2238 
	#CHUNK_OVERHEAD
 (
SIZE_T_SIZE
)

	)

2242 
	#MMAP_CHUNK_OVERHEAD
 (
TWO_SIZE_T_SIZES
)

	)

2244 
	#MMAP_FOOT_PAD
 (
FOUR_SIZE_T_SIZES
)

	)

2247 
	#MIN_CHUNK_SIZE
\

2248 ((
MCHUNK_SIZE
 + 
CHUNK_ALIGN_MASK
Ë& ~CHUNK_ALIGN_MASK)

	)

2251 
	#chunk2mem
(
p
Ë((*)((*)’Ë+ 
TWO_SIZE_T_SIZES
))

	)

2252 
	#mem2chunk
(
mem
Ë((
mchunk±r
)((*)(memË- 
TWO_SIZE_T_SIZES
))

	)

2254 
	#Æign_as_chunk
(
A
Ë(
mchunk±r
)((AË+ 
	`Æign_off£t
(
	`chunk2mem
(A)))

	)

2257 
	#MAX_REQUEST
 ((-
MIN_CHUNK_SIZE
Ë<< 2)

	)

2258 
	#MIN_REQUEST
 (
MIN_CHUNK_SIZE
 - 
CHUNK_OVERHEAD
 - 
SIZE_T_ONE
)

	)

2261 
	#∑d_ªque°
(
ªq
) \

2262 (((
ªq
Ë+ 
CHUNK_OVERHEAD
 + 
CHUNK_ALIGN_MASK
Ë& ~CHUNK_ALIGN_MASK)

	)

2265 
	#ªque°2size
(
ªq
) \

2266 (((
ªq
Ë< 
MIN_REQUEST
)? 
MIN_CHUNK_SIZE
 : 
	`∑d_ªque°
‘eq))

	)

2279 
	#PINUSE_BIT
 (
SIZE_T_ONE
)

	)

2280 
	#CINUSE_BIT
 (
SIZE_T_TWO
)

	)

2281 
	#FLAG4_BIT
 (
SIZE_T_FOUR
)

	)

2282 
	#INUSE_BITS
 (
PINUSE_BIT
|
CINUSE_BIT
)

	)

2283 
	#FLAG_BITS
 (
PINUSE_BIT
|
CINUSE_BIT
|
FLAG4_BIT
)

	)

2286 
	#FENCEPOST_HEAD
 (
INUSE_BITS
|
SIZE_T_SIZE
)

	)

2289 
	#cöu£
(
p
Ë(’)->
hód
 & 
CINUSE_BIT
)

	)

2290 
	#pöu£
(
p
Ë(’)->
hód
 & 
PINUSE_BIT
)

	)

2291 
	#Êag4öu£
(
p
Ë(’)->
hód
 & 
FLAG4_BIT
)

	)

2292 
	#is_öu£
(
p
Ë((’)->
hód
 & 
INUSE_BITS
Ë!
PINUSE_BIT
)

	)

2293 
	#is_mm≠≥d
(
p
Ë((’)->
hód
 & 
INUSE_BITS
Ë=0)

	)

2295 
	#chunksize
(
p
Ë(’)->
hód
 & ~(
FLAG_BITS
))

	)

2297 
	#˛ór_pöu£
(
p
Ë(’)->
hód
 &~
PINUSE_BIT
)

	)

2298 
	#£t_Êag4
(
p
Ë(’)->
hód
 |
FLAG4_BIT
)

	)

2299 
	#˛ór_Êag4
(
p
Ë(’)->
hód
 &~
FLAG4_BIT
)

	)

2302 
	#chunk_∂us_off£t
(
p
, 
s
Ë((
mchunk±r
)(((*)’)Ë+ (s)))

	)

2303 
	#chunk_möus_off£t
(
p
, 
s
Ë((
mchunk±r
)(((*)’)Ë- (s)))

	)

2306 
	#√xt_chunk
(
p
Ë((
mchunk±r
)–((*)’)Ë+ (’)->
hód
 & ~
FLAG_BITS
)))

	)

2307 
	#¥ev_chunk
(
p
Ë((
mchunk±r
)–((*)’)Ë- (’)->
¥ev_foŸ
Ë))

	)

2310 
	#√xt_pöu£
(
p
Ë((
	`√xt_chunk
’)->
hód
Ë& 
PINUSE_BIT
)

	)

2313 
	#gë_foŸ
(
p
, 
s
Ë(((
mchunk±r
)((*)’Ë+ (s)))->
¥ev_foŸ
)

	)

2314 
	#£t_foŸ
(
p
, 
s
Ë(((
mchunk±r
)((*)’Ë+ (s)))->
¥ev_foŸ
 = (s))

	)

2317 
	#£t_size_™d_pöu£_of_‰ì_chunk
(
p
, 
s
)\

2318 ((
p
)->
hód
 = (
s
|
PINUSE_BIT
), 
	`£t_foŸ
’, s))

	)

2321 
	#£t_‰ì_wôh_pöu£
(
p
, 
s
, 
n
)\

2322 (
	`˛ór_pöu£
(
n
), 
	`£t_size_™d_pöu£_of_‰ì_chunk
(
p
, 
s
))

	)

2325 
	#ovîhód_f‹
(
p
)\

2326 (
	`is_mm≠≥d
(
p
)? 
MMAP_CHUNK_OVERHEAD
 : 
CHUNK_OVERHEAD
)

	)

2329 #i‡
MMAP_CLEARS


2330 
	#ˇŒoc_mu°_˛ór
(
p
Ë(!
	`is_mm≠≥d
’))

	)

2332 
	#ˇŒoc_mu°_˛ór
(
p
Ë(1)

	)

2426 
	smÆloc_åì_chunk
 {

2428 
size_t
 
	g¥ev_foŸ
;

2429 
size_t
 
	ghód
;

2430 
mÆloc_åì_chunk
* 
	gfd
;

2431 
mÆloc_åì_chunk
* 
	gbk
;

2433 
mÆloc_åì_chunk
* 
	gchûd
[2];

2434 
mÆloc_åì_chunk
* 
	g∑ª¡
;

2435 
bödex_t
 
	gödex
;

2438 
mÆloc_åì_chunk
 
	ttchunk
;

2439 
mÆloc_åì_chunk
* 
	ttchunk±r
;

2440 
mÆloc_åì_chunk
* 
	ttbö±r
;

2443 
	#À·mo°_chûd
(
t
Ë(—)->
chûd
[0] !0? (t)->chûd[0] : (t)->chûd[1])

	)

2502 
	smÆloc_£gmít
 {

2503 * 
	gba£
;

2504 
size_t
 
	gsize
;

2505 
mÆloc_£gmít
* 
	g√xt
;

2506 
Êag_t
 
	gsÊags
;

2509 
	#is_mm≠≥d_£gmít
(
S
Ë((S)->
sÊags
 & 
USE_MMAP_BIT
)

	)

2510 
	#is_exã∫_£gmít
(
S
Ë((S)->
sÊags
 & 
EXTERN_BIT
)

	)

2512 
mÆloc_£gmít
 
	tm£gmít
;

2513 
mÆloc_£gmít
* 
	tm£gmíçå
;

2603 
	#NSMALLBINS
 (32U)

	)

2604 
	#NTREEBINS
 (32U)

	)

2605 
	#SMALLBIN_SHIFT
 (3U)

	)

2606 
	#SMALLBIN_WIDTH
 (
SIZE_T_ONE
 << 
SMALLBIN_SHIFT
)

	)

2607 
	#TREEBIN_SHIFT
 (8U)

	)

2608 
	#MIN_LARGE_SIZE
 (
SIZE_T_ONE
 << 
TREEBIN_SHIFT
)

	)

2609 
	#MAX_SMALL_SIZE
 (
MIN_LARGE_SIZE
 - 
SIZE_T_ONE
)

	)

2610 
	#MAX_SMALL_REQUEST
 (
MAX_SMALL_SIZE
 - 
CHUNK_ALIGN_MASK
 - 
CHUNK_OVERHEAD
)

	)

2612 
	smÆloc_°©e
 {

2613 
böm≠_t
 
	gsmÆlm≠
;

2614 
böm≠_t
 
	gåìm≠
;

2615 
size_t
 
	gdvsize
;

2616 
size_t
 
	gt›size
;

2617 * 
	gÀa°_addr
;

2618 
mchunk±r
 
	gdv
;

2619 
mchunk±r
 
	gt›
;

2620 
size_t
 
	gåim_check
;

2621 
size_t
 
	gªÀa£_checks
;

2622 
size_t
 
	gmagic
;

2623 
mchunk±r
 
	gsmÆlbös
[(
NSMALLBINS
+1)*2];

2624 
tbö±r
 
	gåìbös
[
NTREEBINS
];

2625 
size_t
 
	gfoŸ¥öt
;

2626 
size_t
 
	gmax_foŸ¥öt
;

2627 
size_t
 
	gfoŸ¥öt_limô
;

2628 
Êag_t
 
	gmÊags
;

2629 #i‡
USE_LOCKS


2630 
MLOCK_T
 
	gmuãx
;

2632 
m£gmít
 
	g£g
;

2633 * 
	gexç
;

2634 
size_t
 
	gexts
;

2637 
mÆloc_°©e
* 
	tm°©e
;

2648 
	smÆloc_∑øms
 {

2649 
size_t
 
	gmagic
;

2650 
size_t
 
	g∑ge_size
;

2651 
size_t
 
	ggønuœrôy
;

2652 
size_t
 
	gmm≠_thªshﬁd
;

2653 
size_t
 
	gåim_thªshﬁd
;

2654 
Êag_t
 
	gdeÁu…_mÊags
;

2657 
mÆloc_∑øms
 
	gm∑øms
;

2660 
	#ísuª_öôüliz©i⁄
(Ë()(
m∑øms
.
magic
 !0 || 
	`öô_m∑øms
())

	)

2662 #i‡!
ONLY_MSPACES


2665 
mÆloc_°©e
 
	g_gm_
;

2666 
	#gm
 (&
_gm_
)

	)

2667 
	#is_globÆ
(
M
Ë((MË=&
_gm_
)

	)

2671 
	#is_öôülized
(
M
Ë((M)->
t›
 !0)

	)

2677 
	#u£_lock
(
M
Ë((M)->
mÊags
 & 
USE_LOCK_BIT
)

	)

2678 
	#íabÀ_lock
(
M
Ë((M)->
mÊags
 |
USE_LOCK_BIT
)

	)

2679 #i‡
USE_LOCKS


2680 
	#dißbÀ_lock
(
M
Ë((M)->
mÊags
 &~
USE_LOCK_BIT
)

	)

2682 
	#dißbÀ_lock
(
M
)

	)

2685 
	#u£_mm≠
(
M
Ë((M)->
mÊags
 & 
USE_MMAP_BIT
)

	)

2686 
	#íabÀ_mm≠
(
M
Ë((M)->
mÊags
 |
USE_MMAP_BIT
)

	)

2687 #i‡
HAVE_MMAP


2688 
	#dißbÀ_mm≠
(
M
Ë((M)->
mÊags
 &~
USE_MMAP_BIT
)

	)

2690 
	#dißbÀ_mm≠
(
M
)

	)

2693 
	#u£_n⁄c⁄tiguous
(
M
Ë((M)->
mÊags
 & 
USE_NONCONTIGUOUS_BIT
)

	)

2694 
	#dißbÀ_c⁄tiguous
(
M
Ë((M)->
mÊags
 |
USE_NONCONTIGUOUS_BIT
)

	)

2696 
	#£t_lock
(
M
,
L
)\

2697 ((
M
)->
mÊags
 = (
L
)?\

2698 ((
M
)->
mÊags
 | 
USE_LOCK_BIT
) :\

2699 ((
M
)->
mÊags
 & ~
USE_LOCK_BIT
))

	)

2702 
	#∑ge_Æign
(
S
)\

2703 (((
S
Ë+ (
m∑øms
.
∑ge_size
 - 
SIZE_T_ONE
)Ë& ~(m∑øms.∑ge_sizê- SIZE_T_ONE))

	)

2706 
	#gønuœrôy_Æign
(
S
)\

2707 (((
S
Ë+ (
m∑øms
.
gønuœrôy
 - 
SIZE_T_ONE
))\

2708 & ~(
m∑øms
.
gønuœrôy
 - 
SIZE_T_ONE
))

	)

2712 #ifde‡
WIN32


2713 
	#mm≠_Æign
(
S
Ë
	`gønuœrôy_Æign
(S)

	)

2715 
	#mm≠_Æign
(
S
Ë
	`∑ge_Æign
(S)

	)

2719 
	#SYS_ALLOC_PADDING
 (
TOP_FOOT_SIZE
 + 
MALLOC_ALIGNMENT
)

	)

2721 
	#is_∑ge_Æig√d
(
S
)\

2722 (((
size_t
)(
S
Ë& (
m∑øms
.
∑ge_size
 - 
SIZE_T_ONE
)Ë=0)

	)

2723 
	#is_gønuœrôy_Æig√d
(
S
)\

2724 (((
size_t
)(
S
Ë& (
m∑øms
.
gønuœrôy
 - 
SIZE_T_ONE
)Ë=0)

	)

2727 
	#£gmít_hﬁds
(
S
, 
A
)\

2728 ((*)(
A
Ë>
S
->
ba£
 && (*)(AË< S->ba£ + S->
size
)

	)

2731 
m£gmíçå
 
£gmít_hﬁdög
(
m°©e
 
m
, * 
addr
) {

2732 
m£gmíçå
 
	g•
 = &
m
->
£g
;

2734 i‡(
	gaddr
 >
•
->
ba£
 && 
addr
 < sp->ba£ + sp->
size
)

2735  
•
;

2736 i‡((
	g•
 = 
•
->
√xt
) == 0)

2742 
has_£gmít_lök
(
m°©e
 
m
, 
m£gmíçå
 
ss
) {

2743 
m£gmíçå
 
	g•
 = &
m
->
£g
;

2745 i‡((*)
	g•
 >
ss
->
ba£
 && (*)
•
 < ss->ba£ + ss->
size
)

2747 i‡((
	g•
 = 
•
->
√xt
) == 0)

2752 #i‚de‡
MORECORE_CANNOT_TRIM


2753 
	#should_åim
(
M
,
s
Ë((sË> (M)->
åim_check
)

	)

2755 
	#should_åim
(
M
,
s
Ë(0)

	)

2763 
	#TOP_FOOT_SIZE
\

2764 (
	`Æign_off£t
(
	`chunk2mem
(0))+
	`∑d_ªque°
((
mÆloc_£gmít
))+
MIN_CHUNK_SIZE
)

	)

2775 #i‡
USE_LOCKS


2776 
	#PREACTION
(
M
Ë((
	`u£_lock
(M))? 
	`ACQUIRE_LOCK
(&(M)->
muãx
Ë: 0)

	)

2777 
	#POSTACTION
(
M
Ë{ i‡(
	`u£_lock
(M)Ë
	`RELEASE_LOCK
(&(M)->
muãx
); }

	)

2780 #i‚de‡
PREACTION


2781 
	#PREACTION
(
M
Ë(0)

	)

2784 #i‚de‡
POSTACTION


2785 
	#POSTACTION
(
M
)

	)

2798 #i‡
PROCEED_ON_ERROR


2801 
	gmÆloc_c‹ru±i⁄_îr‹_cou¡
;

2804 
ª£t_⁄_îr‹
(
m°©e
 
m
);

2806 
	#CORRUPTION_ERROR_ACTION
(
m
Ë
	`ª£t_⁄_îr‹
(m)

	)

2807 
	#USAGE_ERROR_ACTION
(
m
, 
p
)

	)

2811 #i‚de‡
CORRUPTION_ERROR_ACTION


2812 
	#CORRUPTION_ERROR_ACTION
(
m
Ë
ABORT


	)

2815 #i‚de‡
USAGE_ERROR_ACTION


2816 
	#USAGE_ERROR_ACTION
(
m
,
p
Ë
ABORT


	)

2824 #i‡! 
DEBUG


2826 
	#check_‰ì_chunk
(
M
,
P
)

	)

2827 
	#check_öu£_chunk
(
M
,
P
)

	)

2828 
	#check_mÆlo˚d_chunk
(
M
,
P
,
N
)

	)

2829 
	#check_mm≠≥d_chunk
(
M
,
P
)

	)

2830 
	#check_mÆloc_°©e
(
M
)

	)

2831 
	#check_t›_chunk
(
M
,
P
)

	)

2834 
	#check_‰ì_chunk
(
M
,
P
Ë
	`do_check_‰ì_chunk
(M,P)

	)

2835 
	#check_öu£_chunk
(
M
,
P
Ë
	`do_check_öu£_chunk
(M,P)

	)

2836 
	#check_t›_chunk
(
M
,
P
Ë
	`do_check_t›_chunk
(M,P)

	)

2837 
	#check_mÆlo˚d_chunk
(
M
,
P
,
N
Ë
	`do_check_mÆlo˚d_chunk
(M,P,N)

	)

2838 
	#check_mm≠≥d_chunk
(
M
,
P
Ë
	`do_check_mm≠≥d_chunk
(M,P)

	)

2839 
	#check_mÆloc_°©e
(
M
Ë
	`do_check_mÆloc_°©e
(M)

	)

2841 
do_check_™y_chunk
(
m°©e
 
m
, 
mchunk±r
 
p
);

2842 
do_check_t›_chunk
(
m°©e
 
m
, 
mchunk±r
 
p
);

2843 
do_check_mm≠≥d_chunk
(
m°©e
 
m
, 
mchunk±r
 
p
);

2844 
do_check_öu£_chunk
(
m°©e
 
m
, 
mchunk±r
 
p
);

2845 
do_check_‰ì_chunk
(
m°©e
 
m
, 
mchunk±r
 
p
);

2846 
do_check_mÆlo˚d_chunk
(
m°©e
 
m
, * 
mem
, 
size_t
 
s
);

2847 
do_check_åì
(
m°©e
 
m
, 
tchunk±r
 
t
);

2848 
do_check_åìbö
(
m°©e
 
m
, 
bödex_t
 
i
);

2849 
do_check_smÆlbö
(
m°©e
 
m
, 
bödex_t
 
i
);

2850 
do_check_mÆloc_°©e
(
m°©e
 
m
);

2851 
bö_föd
(
m°©e
 
m
, 
mchunk±r
 
x
);

2852 
size_t
 
åavî£_™d_check
(
m°©e
 
m
);

2857 
	#is_smÆl
(
s
Ë(((sË>> 
SMALLBIN_SHIFT
Ë< 
NSMALLBINS
)

	)

2858 
	#smÆl_ödex
(
s
Ë(
bödex_t
)((sË>> 
SMALLBIN_SHIFT
)

	)

2859 
	#smÆl_ödex2size
(
i
Ë((iË<< 
SMALLBIN_SHIFT
)

	)

2860 
	#MIN_SMALL_INDEX
 (
	`smÆl_ödex
(
MIN_CHUNK_SIZE
))

	)

2863 
	#smÆlbö_©
(
M
, 
i
Ë((
sbö±r
)((*)&((M)->
smÆlbös
[(i)<<1])))

	)

2864 
	#åìbö_©
(
M
,
i
Ë(&((M)->
åìbös
[i]))

	)

2867 #i‡
deföed
(
__GNUC__
Ë&& (deföed(
__i386__
Ë|| deföed(
__x86_64__
))

2868 
	#compuã_åì_ödex
(
S
, 
I
)\

2870 
X
 = 
S
 >> 
TREEBIN_SHIFT
;\

2871 i‡(
X
 == 0)\

2872 
I
 = 0;\

2873 i‡(
X
 > 0xFFFF)\

2874 
I
 = 
NTREEBINS
-1;\

2876 
K
 = (Ë(
X
)*
__CHAR_BIT__
 - 1 - (Ë
	`__buûtö_˛z
(X); \

2877 
I
 = (
bödex_t
)((
K
 << 1Ë+ ((
S
 >> (K + (
TREEBIN_SHIFT
-1)) & 1)));\

2879 }

	)

2881 #ñi‡
deföed
 (
__INTEL_COMPILER
)

2882 
	#compuã_åì_ödex
(
S
, 
I
)\

2884 
size_t
 
X
 = 
S
 >> 
TREEBIN_SHIFT
;\

2885 i‡(
X
 == 0)\

2886 
I
 = 0;\

2887 i‡(
X
 > 0xFFFF)\

2888 
I
 = 
NTREEBINS
-1;\

2890 
K
 = 
	`_bô_sˇn_ªvî£
 (
X
); \

2891 
I
 = (
bödex_t
)((
K
 << 1Ë+ ((
S
 >> (K + (
TREEBIN_SHIFT
-1)) & 1)));\

2893 }

	)

2895 #ñi‡
deföed
(
_MSC_VER
) && _MSC_VER>=1300

2896 
	#compuã_åì_ödex
(
S
, 
I
)\

2898 
size_t
 
X
 = 
S
 >> 
TREEBIN_SHIFT
;\

2899 i‡(
X
 == 0)\

2900 
I
 = 0;\

2901 i‡(
X
 > 0xFFFF)\

2902 
I
 = 
NTREEBINS
-1;\

2904 
K
;\

2905 
	`_BôSˇnRevî£
((
DWORD
 *Ë&
K
, (DWORDË
X
);\

2906 
I
 = (
bödex_t
)((
K
 << 1Ë+ ((
S
 >> (K + (
TREEBIN_SHIFT
-1)) & 1)));\

2908 }

	)

2911 
	#compuã_åì_ödex
(
S
, 
I
)\

2913 
size_t
 
X
 = 
S
 >> 
TREEBIN_SHIFT
;\

2914 i‡(
X
 == 0)\

2915 
I
 = 0;\

2916 i‡(
X
 > 0xFFFF)\

2917 
I
 = 
NTREEBINS
-1;\

2919 
Y
 = ()
X
;\

2920 
N
 = ((
Y
 - 0x100) >> 16) & 8;\

2921 
K
 = (((
Y
 <<
N
) - 0x1000) >> 16) & 4;\

2922 
N
 +
K
;\

2923 
N
 +
K
 = (((
Y
 <<= K) - 0x4000) >> 16) & 2;\

2924 
K
 = 14 - 
N
 + ((
Y
 <<= K) >> 15);\

2925 
I
 = (
K
 << 1Ë+ ((
S
 >> (K + (
TREEBIN_SHIFT
-1)) & 1));\

2927 }

	)

2931 
	#bô_f‹_åì_ödex
(
i
) \

2932 (
i
 =
NTREEBINS
-1)? (
SIZE_T_BITSIZE
-1Ë: (((iË>> 1Ë+ 
TREEBIN_SHIFT
 - 2)

	)

2935 
	#À·shi·_f‹_åì_ödex
(
i
) \

2936 ((
i
 =
NTREEBINS
-1)? 0 : \

2937 ((
SIZE_T_BITSIZE
-
SIZE_T_ONE
Ë- (((
i
Ë>> 1Ë+ 
TREEBIN_SHIFT
 - 2)))

	)

2940 
	#mösize_f‹_åì_ödex
(
i
) \

2941 ((
SIZE_T_ONE
 << (((
i
Ë>> 1Ë+ 
TREEBIN_SHIFT
)) | \

2942 (((
size_t
)((
i
Ë& 
SIZE_T_ONE
)Ë<< (((iË>> 1Ë+ 
TREEBIN_SHIFT
 - 1)))

	)

2948 
	#idx2bô
(
i
Ë((
böm≠_t
)(1Ë<< (i))

	)

2951 
	#m¨k_smÆlm≠
(
M
,
i
Ë((M)->
smÆlm≠
 |
	`idx2bô
(i))

	)

2952 
	#˛ór_smÆlm≠
(
M
,
i
Ë((M)->
smÆlm≠
 &~
	`idx2bô
(i))

	)

2953 
	#smÆlm≠_is_m¨ked
(
M
,
i
Ë((M)->
smÆlm≠
 & 
	`idx2bô
(i))

	)

2955 
	#m¨k_åìm≠
(
M
,
i
Ë((M)->
åìm≠
 |
	`idx2bô
(i))

	)

2956 
	#˛ór_åìm≠
(
M
,
i
Ë((M)->
åìm≠
 &~
	`idx2bô
(i))

	)

2957 
	#åìm≠_is_m¨ked
(
M
,
i
Ë((M)->
åìm≠
 & 
	`idx2bô
(i))

	)

2960 
	#Àa°_bô
(
x
Ë((xË& -(x))

	)

2963 
	#À·_bôs
(
x
Ë((x<<1Ë| -(x<<1))

	)

2966 
	#ßme_‹_À·_bôs
(
x
Ë((xË| -(x))

	)

2970 #i‡
deföed
(
__GNUC__
Ë&& (deföed(
__i386__
Ë|| deföed(
__x86_64__
))

2971 
	#compuã_bô2idx
(
X
, 
I
)\

2973 
J
;\

2974 
J
 = 
	`__buûtö_˘z
(
X
); \

2975 
I
 = (
bödex_t
)
J
;\

2976 }

	)

2978 #ñi‡
deföed
 (
__INTEL_COMPILER
)

2979 
	#compuã_bô2idx
(
X
, 
I
)\

2981 
J
;\

2982 
J
 = 
	`_bô_sˇn_f‹w¨d
 (
X
); \

2983 
I
 = (
bödex_t
)
J
;\

2984 }

	)

2986 #ñi‡
deföed
(
_MSC_VER
) && _MSC_VER>=1300

2987 
	#compuã_bô2idx
(
X
, 
I
)\

2989 
J
;\

2990 
	`_BôSˇnF‹w¨d
((
DWORD
 *Ë&
J
, 
X
);\

2991 
I
 = (
bödex_t
)
J
;\

2992 }

	)

2994 #ñi‡
USE_BUILTIN_FFS


2995 
	#compuã_bô2idx
(
X
, 
I
ËI = 
	`ffs
(X)-1

	)

2998 
	#compuã_bô2idx
(
X
, 
I
)\

3000 
Y
 = 
X
 - 1;\

3001 
K
 = 
Y
 >> (16-4) & 16;\

3002 
N
 = 
K
; 
Y
 >>= K;\

3003 
N
 +
K
 = 
Y
 >> (8-3) & 8; Y >>= K;\

3004 
N
 +
K
 = 
Y
 >> (4-2) & 4; Y >>= K;\

3005 
N
 +
K
 = 
Y
 >> (2-1) & 2; Y >>= K;\

3006 
N
 +
K
 = 
Y
 >> (1-0) & 1; Y >>= K;\

3007 
I
 = (
bödex_t
)(
N
 + 
Y
);\

3008 }

	)

3040 #i‡!
INSECURE


3042 
	#ok_addªss
(
M
, 
a
Ë((*)◊Ë>(M)->
Àa°_addr
)

	)

3044 
	#ok_√xt
(
p
, 
n
Ë((*)’Ë< (*)“))

	)

3046 
	#ok_öu£
(
p
Ë
	`is_öu£
’)

	)

3048 
	#ok_pöu£
(
p
Ë
	`pöu£
’)

	)

3051 
	#ok_addªss
(
M
, 
a
Ë(1)

	)

3052 
	#ok_√xt
(
b
, 
n
Ë(1)

	)

3053 
	#ok_öu£
(
p
Ë(1)

	)

3054 
	#ok_pöu£
(
p
Ë(1)

	)

3057 #i‡(
FOOTERS
 && !
INSECURE
)

3059 
	#ok_magic
(
M
Ë((M)->
magic
 =
m∑øms
.magic)

	)

3061 
	#ok_magic
(
M
Ë(1)

	)

3065 #i‡!
INSECURE


3066 #i‡
deföed
(
__GNUC__
) && __GNUC__ >= 3

3067 
	#RTCHECK
(
e
Ë
	`__buûtö_ex≥˘
”, 1)

	)

3069 
	#RTCHECK
(
e
Ë”)

	)

3072 
	#RTCHECK
(
e
Ë(1)

	)

3077 #i‡!
FOOTERS


3079 
	#m¨k_öu£_foŸ
(
M
,
p
,
s
)

	)

3084 
	#£t_öu£
(
M
,
p
,
s
)\

3085 ((
p
)->
hód
 = ((’)->hód & 
PINUSE_BIT
)|
s
|
CINUSE_BIT
),\

3086 ((
mchunk±r
)(((*)(
p
)Ë+ (
s
)))->
hód
 |
PINUSE_BIT
)

	)

3089 
	#£t_öu£_™d_pöu£
(
M
,
p
,
s
)\

3090 ((
p
)->
hód
 = (
s
|
PINUSE_BIT
|
CINUSE_BIT
),\

3091 ((
mchunk±r
)(((*)(
p
)Ë+ (
s
)))->
hód
 |
PINUSE_BIT
)

	)

3094 
	#£t_size_™d_pöu£_of_öu£_chunk
(
M
, 
p
, 
s
)\

3095 ((
p
)->
hód
 = (
s
|
PINUSE_BIT
|
CINUSE_BIT
))

	)

3100 
	#m¨k_öu£_foŸ
(
M
,
p
,
s
)\

3101 (((
mchunk±r
)((*)(
p
Ë+ (
s
)))->
¥ev_foŸ
 = ((
size_t
)(
M
Ë^ 
m∑øms
.
magic
))

	)

3103 
	#gë_m°©e_f‹
(
p
)\

3104 ((
m°©e
)(((
mchunk±r
)((*)(
p
) +\

3105 (
	`chunksize
(
p
))))->
¥ev_foŸ
 ^ 
m∑øms
.
magic
))

	)

3107 
	#£t_öu£
(
M
,
p
,
s
)\

3108 ((
p
)->
hód
 = ((’)->hód & 
PINUSE_BIT
)|
s
|
CINUSE_BIT
),\

3109 (((
mchunk±r
)(((*)(
p
)Ë+ (
s
)))->
hód
 |
PINUSE_BIT
), \

3110 
	`m¨k_öu£_foŸ
(
M
,
p
,
s
))

	)

3112 
	#£t_öu£_™d_pöu£
(
M
,
p
,
s
)\

3113 ((
p
)->
hód
 = (
s
|
PINUSE_BIT
|
CINUSE_BIT
),\

3114 (((
mchunk±r
)(((*)(
p
)Ë+ (
s
)))->
hód
 |
PINUSE_BIT
),\

3115 
	`m¨k_öu£_foŸ
(
M
,
p
,
s
))

	)

3117 
	#£t_size_™d_pöu£_of_öu£_chunk
(
M
, 
p
, 
s
)\

3118 ((
p
)->
hód
 = (
s
|
PINUSE_BIT
|
CINUSE_BIT
),\

3119 
	`m¨k_öu£_foŸ
(
M
, 
p
, 
s
))

	)

3126 
öô_m∑øms
() {

3127 #ifde‡
NEED_GLOBAL_LOCK_INIT


3128 i‡(
	gmÆloc_globÆ_muãx_°©us
 <= 0)

3129 
öô_mÆloc_globÆ_muãx
();

3132 
ACQUIRE_MALLOC_GLOBAL_LOCK
();

3133 i‡(
	gm∑øms
.
	gmagic
 == 0) {

3134 
size_t
 
magic
;

3135 
size_t
 
	gpsize
;

3136 
size_t
 
	ggsize
;

3138 #i‚de‡
WIN32


3139 
	gpsize
 = 
mÆloc_gë∑gesize
;

3140 
	ggsize
 = ((
DEFAULT_GRANULARITY
 !0)? DEFAULT_GRANULARITY : 
psize
);

3143 
SYSTEM_INFO
 
	gsy°em_öfo
;

3144 
GëSy°emInfo
(&
sy°em_öfo
);

3145 
	gpsize
 = 
sy°em_öfo
.
dwPageSize
;

3146 
	ggsize
 = ((
DEFAULT_GRANULARITY
 != 0)?

3147 
DEFAULT_GRANULARITY
 : 
sy°em_öfo
.
dwAŒoˇti⁄Gønuœrôy
);

3157 i‡(((
	gsize_t
) != (*)) ||

3158 (
MAX_SIZE_T
 < 
MIN_CHUNK_SIZE
) ||

3160 (
MALLOC_ALIGNMENT
 < (
size_t
)8U) ||

3161 ((
MALLOC_ALIGNMENT
 & (MALLOC_ALIGNMENT-
SIZE_T_ONE
)) != 0) ||

3162 ((
MCHUNK_SIZE
 & (MCHUNK_SIZE-
SIZE_T_ONE
)) != 0) ||

3163 ((
gsize
 & (gsize-
SIZE_T_ONE
)) != 0) ||

3164 ((
psize
 & (psize-
SIZE_T_ONE
)) != 0))

3165 
ABORT
;

3167 
	gm∑øms
.
	ggønuœrôy
 = 
gsize
;

3168 
	gm∑øms
.
	g∑ge_size
 = 
psize
;

3169 
	gm∑øms
.
	gmm≠_thªshﬁd
 = 
DEFAULT_MMAP_THRESHOLD
;

3170 
	gm∑øms
.
	gåim_thªshﬁd
 = 
DEFAULT_TRIM_THRESHOLD
;

3171 #i‡
MORECORE_CONTIGUOUS


3172 
	gm∑øms
.
	gdeÁu…_mÊags
 = 
USE_LOCK_BIT
|
USE_MMAP_BIT
;

3174 
	gm∑øms
.
	gdeÁu…_mÊags
 = 
USE_LOCK_BIT
|
USE_MMAP_BIT
|
USE_NONCONTIGUOUS_BIT
;

3177 #i‡!
ONLY_MSPACES


3179 
	ggm
->
	gmÊags
 = 
m∑øms
.
deÁu…_mÊags
;

3180 ()
INITIAL_LOCK
(&
gm
->
muãx
);

3184 #i‡
USE_DEV_RANDOM


3185 
	gfd
;

3186 
	gbuf
[(
size_t
)];

3188 i‡((
	gfd
 = 
›í
("/dev/uøndom", 
O_RDONLY
)) >= 0 &&

3189 
ªad
(
fd
, 
buf
, (buf)) == (buf)) {

3190 
magic
 = *((
size_t
 *Ë
buf
);

3191 
˛o£
(
fd
);

3195 #ifde‡
WIN32


3196 
	gmagic
 = (
size_t
)(
GëTickCou¡
() ^ (size_t)0x55555555U);

3197 #ñi‡
deföed
(
LACKS_TIME_H
)

3198 
	gmagic
 = (
size_t
)&
magic
 ^ (size_t)0x55555555U;

3200 
	gmagic
 = (
size_t
)(
time
(0) ^ (size_t)0x55555555U);

3202 
	gmagic
 |(
size_t
)8U;

3203 
	gmagic
 &~(
size_t
)7U;

3205 (*(vﬁ©ûê
	gsize_t
 *)(&(
	gm∑øms
.
	gmagic
))Ë
magic
;

3209 
RELEASE_MALLOC_GLOBAL_LOCK
();

3214 
ch™ge_m∑øm
(
∑øm_numbî
, 
vÆue
) {

3215 
size_t
 
	gvÆ
;

3216 
ísuª_öôüliz©i⁄
();

3217 
	gvÆ
 = (
vÆue
 =-1)? 
MAX_SIZE_T
 : (
size_t
)value;

3218 
	g∑øm_numbî
) {

3219 
	gM_TRIM_THRESHOLD
:

3220 
m∑øms
.
åim_thªshﬁd
 = 
vÆ
;

3222 
	gM_GRANULARITY
:

3223 i‡(
vÆ
 >
m∑øms
.
∑ge_size
 && ((val & (val-1)) == 0)) {

3224 
m∑øms
.
gønuœrôy
 = 
vÆ
;

3229 
	gM_MMAP_THRESHOLD
:

3230 
m∑øms
.
mm≠_thªshﬁd
 = 
vÆ
;

3237 #i‡
DEBUG


3241 
do_check_™y_chunk
(
m°©e
 
m
, 
mchunk±r
 
p
) {

3242 
as£π
((
is_Æig√d
(
chunk2mem
(
p
))Ë|| (p->
hód
 =
FENCEPOST_HEAD
));

3243 
as£π
(
ok_addªss
(
m
, 
p
));

3247 
do_check_t›_chunk
(
m°©e
 
m
, 
mchunk±r
 
p
) {

3248 
m£gmíçå
 
	g•
 = 
£gmít_hﬁdög
(
m
, (*)
p
);

3249 
size_t
 
	gsz
 = 
p
->
hód
 & ~
INUSE_BITS
;

3250 
as£π
(
•
 != 0);

3251 
as£π
((
is_Æig√d
(
chunk2mem
(
p
))Ë|| (p->
hód
 =
FENCEPOST_HEAD
));

3252 
as£π
(
ok_addªss
(
m
, 
p
));

3253 
as£π
(
sz
 =
m
->
t›size
);

3254 
as£π
(
sz
 > 0);

3255 
as£π
(
sz
 =((
•
->
ba£
 + sp->
size
Ë- (*)
p
Ë- 
TOP_FOOT_SIZE
);

3256 
as£π
(
pöu£
(
p
));

3257 
as£π
(!
pöu£
(
chunk_∂us_off£t
(
p
, 
sz
)));

3261 
do_check_mm≠≥d_chunk
(
m°©e
 
m
, 
mchunk±r
 
p
) {

3262 
size_t
 
	gsz
 = 
chunksize
(
p
);

3263 
size_t
 
	gÀn
 = (
sz
 + (
p
->
¥ev_foŸ
Ë+ 
MMAP_FOOT_PAD
);

3264 
as£π
(
is_mm≠≥d
(
p
));

3265 
as£π
(
u£_mm≠
(
m
));

3266 
as£π
((
is_Æig√d
(
chunk2mem
(
p
))Ë|| (p->
hód
 =
FENCEPOST_HEAD
));

3267 
as£π
(
ok_addªss
(
m
, 
p
));

3268 
as£π
(!
is_smÆl
(
sz
));

3269 
as£π
((
Àn
 & (
m∑øms
.
∑ge_size
-
SIZE_T_ONE
)) == 0);

3270 
as£π
(
chunk_∂us_off£t
(
p
, 
sz
)->
hód
 =
FENCEPOST_HEAD
);

3271 
as£π
(
chunk_∂us_off£t
(
p
, 
sz
+
SIZE_T_SIZE
)->
hód
 == 0);

3275 
do_check_öu£_chunk
(
m°©e
 
m
, 
mchunk±r
 
p
) {

3276 
do_check_™y_chunk
(
m
, 
p
);

3277 
as£π
(
is_öu£
(
p
));

3278 
as£π
(
√xt_pöu£
(
p
));

3280 
as£π
(
is_mm≠≥d
(
p
Ë|| 
pöu£
’Ë|| 
√xt_chunk
(
¥ev_chunk
(p)) ==Ö);

3281 i‡(
is_mm≠≥d
(
p
))

3282 
do_check_mm≠≥d_chunk
(
m
, 
p
);

3286 
do_check_‰ì_chunk
(
m°©e
 
m
, 
mchunk±r
 
p
) {

3287 
size_t
 
	gsz
 = 
chunksize
(
p
);

3288 
mchunk±r
 
	g√xt
 = 
chunk_∂us_off£t
(
p
, 
sz
);

3289 
do_check_™y_chunk
(
m
, 
p
);

3290 
as£π
(!
is_öu£
(
p
));

3291 
as£π
(!
√xt_pöu£
(
p
));

3292 
as£π
 (!
is_mm≠≥d
(
p
));

3293 i‡(
	gp
 !
m
->
dv
 && 
p
 !m->
t›
) {

3294 i‡(
sz
 >
MIN_CHUNK_SIZE
) {

3295 
as£π
((
sz
 & 
CHUNK_ALIGN_MASK
) == 0);

3296 
as£π
(
is_Æig√d
(
chunk2mem
(
p
)));

3297 
as£π
(
√xt
->
¥ev_foŸ
 =
sz
);

3298 
as£π
(
pöu£
(
p
));

3299 
as£π
 (
√xt
 =
m
->
t›
 || 
is_öu£
(next));

3300 
as£π
(
p
->
fd
->
bk
 ==Ö);

3301 
as£π
(
p
->
bk
->
fd
 ==Ö);

3304 
as£π
(
sz
 =
SIZE_T_SIZE
);

3309 
do_check_mÆlo˚d_chunk
(
m°©e
 
m
, * 
mem
, 
size_t
 
s
) {

3310 i‡(
	gmem
 != 0) {

3311 
mchunk±r
 
p
 = 
mem2chunk
(
mem
);

3312 
size_t
 
	gsz
 = 
p
->
hód
 & ~
INUSE_BITS
;

3313 
do_check_öu£_chunk
(
m
, 
p
);

3314 
as£π
((
sz
 & 
CHUNK_ALIGN_MASK
) == 0);

3315 
as£π
(
sz
 >
MIN_CHUNK_SIZE
);

3316 
as£π
(
sz
 >
s
);

3318 
as£π
(
is_mm≠≥d
(
p
Ë|| 
sz
 < (
s
 + 
MIN_CHUNK_SIZE
));

3323 
do_check_åì
(
m°©e
 
m
, 
tchunk±r
 
t
) {

3324 
tchunk±r
 
	ghód
 = 0;

3325 
tchunk±r
 
	gu
 = 
t
;

3326 
bödex_t
 
	gtödex
 = 
t
->
ödex
;

3327 
size_t
 
	gtsize
 = 
chunksize
(
t
);

3328 
bödex_t
 
	gidx
;

3329 
compuã_åì_ödex
(
tsize
, 
idx
);

3330 
as£π
(
tödex
 =
idx
);

3331 
as£π
(
tsize
 >
MIN_LARGE_SIZE
);

3332 
as£π
(
tsize
 >
mösize_f‹_åì_ödex
(
idx
));

3333 
as£π
((
idx
 =
NTREEBINS
-1Ë|| (
tsize
 < 
mösize_f‹_åì_ödex
((idx+1))));

3336 
do_check_™y_chunk
(
m
, ((
mchunk±r
)
u
));

3337 
as£π
(
u
->
ödex
 =
tödex
);

3338 
as£π
(
chunksize
(
u
Ë=
tsize
);

3339 
as£π
(!
is_öu£
(
u
));

3340 
as£π
(!
√xt_pöu£
(
u
));

3341 
as£π
(
u
->
fd
->
bk
 == u);

3342 
as£π
(
u
->
bk
->
fd
 == u);

3343 i‡(
	gu
->
	g∑ª¡
 == 0) {

3344 
as£π
(
u
->
chûd
[0] == 0);

3345 
as£π
(
u
->
chûd
[1] == 0);

3348 
as£π
(
hód
 == 0);

3349 
	ghód
 = 
u
;

3350 
as£π
(
u
->
∑ª¡
 != u);

3351 
as£π
 (
u
->
∑ª¡
->
chûd
[0] == u ||

3352 
u
->
∑ª¡
->
chûd
[1] == u ||

3353 *((
tbö±r
*)(
u
->
∑ª¡
)) == u);

3354 i‡(
	gu
->
	gchûd
[0] != 0) {

3355 
as£π
(
u
->
chûd
[0]->
∑ª¡
 == u);

3356 
as£π
(
u
->
chûd
[0] != u);

3357 
do_check_åì
(
m
, 
u
->
chûd
[0]);

3359 i‡(
	gu
->
	gchûd
[1] != 0) {

3360 
as£π
(
u
->
chûd
[1]->
∑ª¡
 == u);

3361 
as£π
(
u
->
chûd
[1] != u);

3362 
do_check_åì
(
m
, 
u
->
chûd
[1]);

3364 i‡(
	gu
->
	gchûd
[0] !0 && 
u
->
chûd
[1] != 0) {

3365 
as£π
(
chunksize
(
u
->
chûd
[0]) < chunksize(u->child[1]));

3368 
	gu
 = 
u
->
fd
;

3369 } 
	gu
 !
t
);

3370 
as£π
(
hód
 != 0);

3374 
do_check_åìbö
(
m°©e
 
m
, 
bödex_t
 
i
) {

3375 
tbö±r
* 
	gtb
 = 
åìbö_©
(
m
, 
i
);

3376 
tchunk±r
 
	gt
 = *
tb
;

3377 
	gem±y
 = (
m
->
åìm≠
 & (1U << 
i
)) == 0;

3378 i‡(
	gt
 == 0)

3379 
as£π
(
em±y
);

3380 i‡(!
	gem±y
)

3381 
do_check_åì
(
m
, 
t
);

3385 
do_check_smÆlbö
(
m°©e
 
m
, 
bödex_t
 
i
) {

3386 
sbö±r
 
	gb
 = 
smÆlbö_©
(
m
, 
i
);

3387 
mchunk±r
 
	gp
 = 
b
->
bk
;

3388 
	gem±y
 = (
m
->
smÆlm≠
 & (1U << 
i
)) == 0;

3389 i‡(
	gp
 =
b
)

3390 
as£π
(
em±y
);

3391 i‡(!
	gem±y
) {

3392 ; 
	gp
 !
b
;Ö = 
p
->
bk
) {

3393 
size_t
 
size
 = 
chunksize
(
p
);

3394 
mchunk±r
 
	gq
;

3396 
do_check_‰ì_chunk
(
m
, 
p
);

3398 
as£π
(
smÆl_ödex
(
size
Ë=
i
);

3399 
as£π
(
p
->
bk
 =
b
 || 
chunksize
(p->bk) == chunksize(p));

3401 
	gq
 = 
√xt_chunk
(
p
);

3402 i‡(
	gq
->
	ghód
 !
FENCEPOST_HEAD
)

3403 
do_check_öu£_chunk
(
m
, 
q
);

3409 
bö_föd
(
m°©e
 
m
, 
mchunk±r
 
x
) {

3410 
size_t
 
	gsize
 = 
chunksize
(
x
);

3411 i‡(
is_smÆl
(
size
)) {

3412 
bödex_t
 
	gsidx
 = 
smÆl_ödex
(
size
);

3413 
sbö±r
 
	gb
 = 
smÆlbö_©
(
m
, 
sidx
);

3414 i‡(
smÆlm≠_is_m¨ked
(
m
, 
sidx
)) {

3415 
mchunk±r
 
	gp
 = 
b
;

3417 i‡(
	gp
 =
x
)

3419 } (
	gp
 = 
p
->
fd
Ë!
b
);

3423 
bödex_t
 
	gtidx
;

3424 
compuã_åì_ödex
(
size
, 
tidx
);

3425 i‡(
åìm≠_is_m¨ked
(
m
, 
tidx
)) {

3426 
tchunk±r
 
	gt
 = *
åìbö_©
(
m
, 
tidx
);

3427 
size_t
 
	gsizebôs
 = 
size
 << 
À·shi·_f‹_åì_ödex
(
tidx
);

3428 
	gt
 !0 && 
chunksize
(
t
Ë!
size
) {

3429 
t
 =Å->
chûd
[(
sizebôs
 >> (
SIZE_T_BITSIZE
-
SIZE_T_ONE
)) & 1];

3430 
	gsizebôs
 <<= 1;

3432 i‡(
	gt
 != 0) {

3433 
tchunk±r
 
u
 = 
t
;

3435 i‡(
	gu
 =(
tchunk±r
)
x
)

3437 } (
	gu
 = 
u
->
fd
Ë!
t
);

3445 
size_t
 
åavî£_™d_check
(
m°©e
 
m
) {

3446 
size_t
 
	gsum
 = 0;

3447 i‡(
is_öôülized
(
m
)) {

3448 
m£gmíçå
 
	gs
 = &
m
->
£g
;

3449 
	gsum
 +
m
->
t›size
 + 
TOP_FOOT_SIZE
;

3450 
	gs
 != 0) {

3451 
mchunk±r
 
q
 = 
Æign_as_chunk
(
s
->
ba£
);

3452 
mchunk±r
 
	gœ°q
 = 0;

3453 
as£π
(
pöu£
(
q
));

3454 
£gmít_hﬁds
(
s
, 
q
) &&

3455 
	gq
 !
m
->
t›
 && 
q
->
hód
 !
FENCEPOST_HEAD
) {

3456 
sum
 +
chunksize
(
q
);

3457 i‡(
is_öu£
(
q
)) {

3458 
as£π
(!
bö_föd
(
m
, 
q
));

3459 
do_check_öu£_chunk
(
m
, 
q
);

3462 
as£π
(
q
 =
m
->
dv
 || 
bö_föd
(m, q));

3463 
as£π
(
œ°q
 =0 || 
is_öu£
(lastq));

3464 
do_check_‰ì_chunk
(
m
, 
q
);

3466 
	gœ°q
 = 
q
;

3467 
	gq
 = 
√xt_chunk
(
q
);

3469 
	gs
 = 
s
->
√xt
;

3472  
	gsum
;

3477 
do_check_mÆloc_°©e
(
m°©e
 
m
) {

3478 
bödex_t
 
	gi
;

3479 
size_t
 
	gtŸÆ
;

3481 
	gi
 = 0; i < 
	gNSMALLBINS
; ++i)

3482 
do_check_smÆlbö
(
m
, 
i
);

3483 
	gi
 = 0; i < 
	gNTREEBINS
; ++i)

3484 
do_check_åìbö
(
m
, 
i
);

3486 i‡(
	gm
->
	gdvsize
 != 0) {

3487 
do_check_™y_chunk
(
m
, m->
dv
);

3488 
as£π
(
m
->
dvsize
 =
chunksize
(m->
dv
));

3489 
as£π
(
m
->
dvsize
 >
MIN_CHUNK_SIZE
);

3490 
as£π
(
bö_föd
(
m
, m->
dv
) == 0);

3493 i‡(
	gm
->
	gt›
 != 0) {

3494 
do_check_t›_chunk
(
m
, m->
t›
);

3496 
as£π
(
m
->
t›size
 > 0);

3497 
as£π
(
bö_föd
(
m
, m->
t›
) == 0);

3500 
	gtŸÆ
 = 
åavî£_™d_check
(
m
);

3501 
as£π
(
tŸÆ
 <
m
->
foŸ¥öt
);

3502 
as£π
(
m
->
foŸ¥öt
 <m->
max_foŸ¥öt
);

3508 #i‡!
NO_MALLINFO


3509 
mÆlöfo
 
öã∫Æ_mÆlöfo
(
m°©e
 
m
) {

3510 
mÆlöfo
 
	gnm
 = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

3511 
ísuª_öôüliz©i⁄
();

3512 i‡(!
PREACTION
(
m
)) {

3513 
check_mÆloc_°©e
(
m
);

3514 i‡(
is_öôülized
(
m
)) {

3515 
size_t
 
	gn‰ì
 = 
SIZE_T_ONE
;

3516 
size_t
 
	gm‰ì
 = 
m
->
t›size
 + 
TOP_FOOT_SIZE
;

3517 
size_t
 
	gsum
 = 
m‰ì
;

3518 
m£gmíçå
 
	gs
 = &
m
->
£g
;

3519 
	gs
 != 0) {

3520 
mchunk±r
 
q
 = 
Æign_as_chunk
(
s
->
ba£
);

3521 
£gmít_hﬁds
(
s
, 
q
) &&

3522 
	gq
 !
m
->
t›
 && 
q
->
hód
 !
FENCEPOST_HEAD
) {

3523 
size_t
 
sz
 = 
chunksize
(
q
);

3524 
	gsum
 +
sz
;

3525 i‡(!
is_öu£
(
q
)) {

3526 
	gm‰ì
 +
sz
;

3527 ++
	gn‰ì
;

3529 
	gq
 = 
√xt_chunk
(
q
);

3531 
	gs
 = 
s
->
√xt
;

3534 
	gnm
.
	g¨ía
 = 
sum
;

3535 
	gnm
.
	g‹dblks
 = 
n‰ì
;

3536 
	gnm
.
	ghblkhd
 = 
m
->
foŸ¥öt
 - 
sum
;

3537 
	gnm
.
	gusmblks
 = 
m
->
max_foŸ¥öt
;

3538 
	gnm
.
	gu‹dblks
 = 
m
->
foŸ¥öt
 - 
m‰ì
;

3539 
	gnm
.
	gf‹dblks
 = 
m‰ì
;

3540 
	gnm
.
	gkìpco°
 = 
m
->
t›size
;

3543 
POSTACTION
(
m
);

3545  
	gnm
;

3549 #i‡!
NO_MALLOC_STATS


3550 
öã∫Æ_mÆloc_°©s
(
m°©e
 
m
) {

3551 
ísuª_öôüliz©i⁄
();

3552 i‡(!
PREACTION
(
m
)) {

3553 
size_t
 
	gmaxÂ
 = 0;

3554 
size_t
 
	gÂ
 = 0;

3555 
size_t
 
	gu£d
 = 0;

3556 
check_mÆloc_°©e
(
m
);

3557 i‡(
is_öôülized
(
m
)) {

3558 
m£gmíçå
 
	gs
 = &
m
->
£g
;

3559 
	gmaxÂ
 = 
m
->
max_foŸ¥öt
;

3560 
	gÂ
 = 
m
->
foŸ¥öt
;

3561 
	gu£d
 = 
Â
 - (
m
->
t›size
 + 
TOP_FOOT_SIZE
);

3563 
	gs
 != 0) {

3564 
mchunk±r
 
q
 = 
Æign_as_chunk
(
s
->
ba£
);

3565 
£gmít_hﬁds
(
s
, 
q
) &&

3566 
	gq
 !
m
->
t›
 && 
q
->
hód
 !
FENCEPOST_HEAD
) {

3567 i‡(!
is_öu£
(
q
))

3568 
u£d
 -
chunksize
(
q
);

3569 
	gq
 = 
√xt_chunk
(
q
);

3571 
	gs
 = 
s
->
√xt
;

3574 
POSTACTION
(
m
);

3575 
Ârötf
(
°dîr
, "max sy°em byã†%10lu\n", ()(
maxÂ
));

3576 
Ârötf
(
°dîr
, "sy°em byã† = %10lu\n", ()(
Â
));

3577 
Ârötf
(
°dîr
, "ö u£ byã† = %10lu\n", ()(
u£d
));

3592 
	#ö£π_smÆl_chunk
(
M
, 
P
, 
S
) {\

3593 
bödex_t
 
I
 = 
	`smÆl_ödex
(
S
);\

3594 
mchunk±r
 
B
 = 
	`smÆlbö_©
(
M
, 
I
);\

3595 
mchunk±r
 
F
 = 
B
;\

3596 
	`as£π
(
S
 >
MIN_CHUNK_SIZE
);\

3597 i‡(!
	`smÆlm≠_is_m¨ked
(
M
, 
I
))\

3598 
	`m¨k_smÆlm≠
(
M
, 
I
);\

3599 i‡(
	`RTCHECK
(
	`ok_addªss
(
M
, 
B
->
fd
)))\

3600 
F
 = 
B
->
fd
;\

3602 
	`CORRUPTION_ERROR_ACTION
(
M
);\

3604 
B
->
fd
 = 
P
;\

3605 
F
->
bk
 = 
P
;\

3606 
P
->
fd
 = 
F
;\

3607 
P
->
bk
 = 
B
;\

3608 }

	)

3611 
	#u∆ök_smÆl_chunk
(
M
, 
P
, 
S
) {\

3612 
mchunk±r
 
F
 = 
P
->
fd
;\

3613 
mchunk±r
 
B
 = 
P
->
bk
;\

3614 
bödex_t
 
I
 = 
	`smÆl_ödex
(
S
);\

3615 
	`as£π
(
P
 !
B
);\

3616 
	`as£π
(
P
 !
F
);\

3617 
	`as£π
(
	`chunksize
(
P
Ë=
	`smÆl_ödex2size
(
I
));\

3618 i‡(
	`RTCHECK
(
F
 =
	`smÆlbö_©
(
M
,
I
Ë|| (
	`ok_addªss
(M, FË&& F->
bk
 =
P
))) { \

3619 i‡(
B
 =
F
) {\

3620 
	`˛ór_smÆlm≠
(
M
, 
I
);\

3622 i‡(
	`RTCHECK
(
B
 =
	`smÆlbö_©
(
M
,
I
) ||\

3623 (
	`ok_addªss
(
M
, 
B
Ë&& B->
fd
 =
P
))) {\

3624 
F
->
bk
 = 
B
;\

3625 
B
->
fd
 = 
F
;\

3628 
	`CORRUPTION_ERROR_ACTION
(
M
);\

3632 
	`CORRUPTION_ERROR_ACTION
(
M
);\

3634 }

	)

3637 
	#u∆ök_fú°_smÆl_chunk
(
M
, 
B
, 
P
, 
I
) {\

3638 
mchunk±r
 
F
 = 
P
->
fd
;\

3639 
	`as£π
(
P
 !
B
);\

3640 
	`as£π
(
P
 !
F
);\

3641 
	`as£π
(
	`chunksize
(
P
Ë=
	`smÆl_ödex2size
(
I
));\

3642 i‡(
B
 =
F
) {\

3643 
	`˛ór_smÆlm≠
(
M
, 
I
);\

3645 i‡(
	`RTCHECK
(
	`ok_addªss
(
M
, 
F
Ë&& F->
bk
 =
P
)) {\

3646 
F
->
bk
 = 
B
;\

3647 
B
->
fd
 = 
F
;\

3650 
	`CORRUPTION_ERROR_ACTION
(
M
);\

3652 }

	)

3656 
	#ª∂a˚_dv
(
M
, 
P
, 
S
) {\

3657 
size_t
 
DVS
 = 
M
->
dvsize
;\

3658 
	`as£π
(
	`is_smÆl
(
DVS
));\

3659 i‡(
DVS
 != 0) {\

3660 
mchunk±r
 
DV
 = 
M
->
dv
;\

3661 
	`ö£π_smÆl_chunk
(
M
, 
DV
, 
DVS
);\

3663 
M
->
dvsize
 = 
S
;\

3664 
M
->
dv
 = 
P
;\

3665 }

	)

3670 
	#ö£π_œrge_chunk
(
M
, 
X
, 
S
) {\

3671 
tbö±r
* 
H
;\

3672 
bödex_t
 
I
;\

3673 
	`compuã_åì_ödex
(
S
, 
I
);\

3674 
H
 = 
	`åìbö_©
(
M
, 
I
);\

3675 
X
->
ödex
 = 
I
;\

3676 
X
->
chûd
[0] = X->child[1] = 0;\

3677 i‡(!
	`åìm≠_is_m¨ked
(
M
, 
I
)) {\

3678 
	`m¨k_åìm≠
(
M
, 
I
);\

3679 *
H
 = 
X
;\

3680 
X
->
∑ª¡
 = (
tchunk±r
)
H
;\

3681 
X
->
fd
 = X->
bk
 = X;\

3684 
tchunk±r
 
T
 = *
H
;\

3685 
size_t
 
K
 = 
S
 << 
	`À·shi·_f‹_åì_ödex
(
I
);\

3687 i‡(
	`chunksize
(
T
Ë!
S
) {\

3688 
tchunk±r
* 
C
 = &(
T
->
chûd
[(
K
 >> (
SIZE_T_BITSIZE
-
SIZE_T_ONE
)) & 1]);\

3689 
K
 <<= 1;\

3690 i‡(*
C
 != 0)\

3691 
T
 = *
C
;\

3692 i‡(
	`RTCHECK
(
	`ok_addªss
(
M
, 
C
))) {\

3693 *
C
 = 
X
;\

3694 
X
->
∑ª¡
 = 
T
;\

3695 
X
->
fd
 = X->
bk
 = X;\

3699 
	`CORRUPTION_ERROR_ACTION
(
M
);\

3704 
tchunk±r
 
F
 = 
T
->
fd
;\

3705 i‡(
	`RTCHECK
(
	`ok_addªss
(
M
, 
T
Ë&& ok_addªss(M, 
F
))) {\

3706 
T
->
fd
 = 
F
->
bk
 = 
X
;\

3707 
X
->
fd
 = 
F
;\

3708 
X
->
bk
 = 
T
;\

3709 
X
->
∑ª¡
 = 0;\

3713 
	`CORRUPTION_ERROR_ACTION
(
M
);\

3719 }

	)

3738 
	#u∆ök_œrge_chunk
(
M
, 
X
) {\

3739 
tchunk±r
 
XP
 = 
X
->
∑ª¡
;\

3740 
tchunk±r
 
R
;\

3741 i‡(
X
->
bk
 != X) {\

3742 
tchunk±r
 
F
 = 
X
->
fd
;\

3743 
R
 = 
X
->
bk
;\

3744 i‡(
	`RTCHECK
(
	`ok_addªss
(
M
, 
F
Ë&& F->
bk
 =
X
 && 
R
->
fd
 == X)) {\

3745 
F
->
bk
 = 
R
;\

3746 
R
->
fd
 = 
F
;\

3749 
	`CORRUPTION_ERROR_ACTION
(
M
);\

3753 
tchunk±r
* 
RP
;\

3754 i‡(((
R
 = *(
RP
 = &(
X
->
chûd
[1]))) != 0) ||\

3755 ((
R
 = *(
RP
 = &(
X
->
chûd
[0]))) != 0)) {\

3756 
tchunk±r
* 
CP
;\

3757 (*(
CP
 = &(
R
->
chûd
[1])) != 0) ||\

3758 (*(
CP
 = &(
R
->
chûd
[0])) != 0)) {\

3759 
R
 = *(
RP
 = 
CP
);\

3761 i‡(
	`RTCHECK
(
	`ok_addªss
(
M
, 
RP
)))\

3762 *
RP
 = 0;\

3764 
	`CORRUPTION_ERROR_ACTION
(
M
);\

3768 i‡(
XP
 != 0) {\

3769 
tbö±r
* 
H
 = 
	`åìbö_©
(
M
, 
X
->
ödex
);\

3770 i‡(
X
 =*
H
) {\

3771 i‡((*
H
 = 
R
) == 0) \

3772 
	`˛ór_åìm≠
(
M
, 
X
->
ödex
);\

3774 i‡(
	`RTCHECK
(
	`ok_addªss
(
M
, 
XP
))) {\

3775 i‡(
XP
->
chûd
[0] =
X
) \

3776 
XP
->
chûd
[0] = 
R
;\

3778 
XP
->
chûd
[1] = 
R
;\

3781 
	`CORRUPTION_ERROR_ACTION
(
M
);\

3782 i‡(
R
 != 0) {\

3783 i‡(
	`RTCHECK
(
	`ok_addªss
(
M
, 
R
))) {\

3784 
tchunk±r
 
C0
, 
C1
;\

3785 
R
->
∑ª¡
 = 
XP
;\

3786 i‡((
C0
 = 
X
->
chûd
[0]) != 0) {\

3787 i‡(
	`RTCHECK
(
	`ok_addªss
(
M
, 
C0
))) {\

3788 
R
->
chûd
[0] = 
C0
;\

3789 
C0
->
∑ª¡
 = 
R
;\

3792 
	`CORRUPTION_ERROR_ACTION
(
M
);\

3794 i‡((
C1
 = 
X
->
chûd
[1]) != 0) {\

3795 i‡(
	`RTCHECK
(
	`ok_addªss
(
M
, 
C1
))) {\

3796 
R
->
chûd
[1] = 
C1
;\

3797 
C1
->
∑ª¡
 = 
R
;\

3800 
	`CORRUPTION_ERROR_ACTION
(
M
);\

3804 
	`CORRUPTION_ERROR_ACTION
(
M
);\

3807 }

	)

3811 
	#ö£π_chunk
(
M
, 
P
, 
S
)\

3812 i‡(
	`is_smÆl
(
S
)Ë
	`ö£π_smÆl_chunk
(
M
, 
P
, S)\

3813 { 
tchunk±r
 
TP
 = (tchunk±r)(
P
); 
	`ö£π_œrge_chunk
(
M
, TP, 
S
); }

	)

3815 
	#u∆ök_chunk
(
M
, 
P
, 
S
)\

3816 i‡(
	`is_smÆl
(
S
)Ë
	`u∆ök_smÆl_chunk
(
M
, 
P
, S)\

3817 { 
tchunk±r
 
TP
 = (tchunk±r)(
P
); 
	`u∆ök_œrge_chunk
(
M
, TP); }

	)

3822 #i‡
ONLY_MSPACES


3823 
	#öã∫Æ_mÆloc
(
m
, 
b
Ë
	`m•a˚_mÆloc
(m, b)

	)

3824 
	#öã∫Æ_‰ì
(
m
, 
mem
Ë
	`m•a˚_‰ì
(m,mem);

	)

3826 #i‡
MSPACES


3827 
	#öã∫Æ_mÆloc
(
m
, 
b
)\

3828 ((
m
 =
gm
)? 
	`dlmÆloc
(
b
Ë: 
	`m•a˚_mÆloc
(m, b))

	)

3829 
	#öã∫Æ_‰ì
(
m
, 
mem
)\

3830 i‡(
m
 =
gm
Ë
	`dl‰ì
(
mem
); 
	`m•a˚_‰ì
(m,mem);

	)

3832 
	#öã∫Æ_mÆloc
(
m
, 
b
Ë
	`dlmÆloc
(b)

	)

3833 
	#öã∫Æ_‰ì
(
m
, 
mem
Ë
	`dl‰ì
(mem)

	)

3880 
mchunk±r
 
mm≠_ªsize
(
m°©e
 
m
, mchunk±∏
ﬁdp
, 
size_t
 
nb
, 
Êags
) {

3881 
size_t
 
	gﬁdsize
 = 
chunksize
(
ﬁdp
);

3882 
	gÊags
 = 
Êags
;

3883 i‡(
is_smÆl
(
nb
))

3886 i‡(
	gﬁdsize
 >
nb
 + 
SIZE_T_SIZE
 &&

3887 (
ﬁdsize
 - 
nb
Ë<(
m∑øms
.
gønuœrôy
 << 1))

3888  
ﬁdp
;

3890 
size_t
 
	goff£t
 = 
ﬁdp
->
¥ev_foŸ
;

3891 
size_t
 
	gﬁdmmsize
 = 
ﬁdsize
 + 
off£t
 + 
MMAP_FOOT_PAD
;

3892 
size_t
 
	g√wmmsize
 = 
mm≠_Æign
(
nb
 + 
SIX_SIZE_T_SIZES
 + 
CHUNK_ALIGN_MASK
);

3893 * 
	g˝
 = (*)
CALL_MREMAP
((*)
ﬁdp
 - 
off£t
,

3894 
ﬁdmmsize
, 
√wmmsize
, 
Êags
);

3895 i‡(
	g˝
 !
CMFAIL
) {

3896 
mchunk±r
 
√wp
 = (mchunk±r)(
˝
 + 
off£t
);

3897 
size_t
 
	gpsize
 = 
√wmmsize
 - 
off£t
 - 
MMAP_FOOT_PAD
;

3898 
	g√wp
->
	ghód
 = 
psize
;

3899 
m¨k_öu£_foŸ
(
m
, 
√wp
, 
psize
);

3900 
chunk_∂us_off£t
(
√wp
, 
psize
)->
	ghód
 = 
FENCEPOST_HEAD
;

3901 
chunk_∂us_off£t
(
√wp
, 
psize
+
SIZE_T_SIZE
)->
	ghód
 = 0;

3903 i‡(
	g˝
 < 
	gm
->
	gÀa°_addr
)

3904 
	gm
->
	gÀa°_addr
 = 
˝
;

3905 i‡((
	gm
->
	gfoŸ¥öt
 +
√wmmsize
 - 
ﬁdmmsize
Ë> 
m
->
max_foŸ¥öt
)

3906 
m
->
max_foŸ¥öt
 = m->
foŸ¥öt
;

3907 
check_mm≠≥d_chunk
(
m
, 
√wp
);

3908  
	g√wp
;

3918 
öô_t›
(
m°©e
 
m
, 
mchunk±r
 
p
, 
size_t
 
psize
) {

3920 
size_t
 
	goff£t
 = 
Æign_off£t
(
chunk2mem
(
p
));

3921 
	gp
 = (
mchunk±r
)((*)
p
 + 
off£t
);

3922 
	gpsize
 -
off£t
;

3924 
	gm
->
	gt›
 = 
p
;

3925 
	gm
->
	gt›size
 = 
psize
;

3926 
	gp
->
	ghód
 = 
psize
 | 
PINUSE_BIT
;

3928 
chunk_∂us_off£t
(
p
, 
psize
)->
	ghód
 = 
TOP_FOOT_SIZE
;

3929 
	gm
->
	gåim_check
 = 
m∑øms
.
åim_thªshﬁd
;

3933 
öô_bös
(
m°©e
 
m
) {

3935 
bödex_t
 
	gi
;

3936 
	gi
 = 0; i < 
	gNSMALLBINS
; ++i) {

3937 
sbö±r
 
	gbö
 = 
smÆlbö_©
(
m
,
i
);

3938 
	gbö
->
	gfd
 = 
bö
->
bk
 = bin;

3942 #i‡
PROCEED_ON_ERROR


3945 
ª£t_⁄_îr‹
(
m°©e
 
m
) {

3946 
	gi
;

3947 ++
	gmÆloc_c‹ru±i⁄_îr‹_cou¡
;

3949 
	gm
->
	gsmÆlm≠
 = 
m
->
åìm≠
 = 0;

3950 
	gm
->
	gdvsize
 = 
m
->
t›size
 = 0;

3951 
	gm
->
	g£g
.
	gba£
 = 0;

3952 
	gm
->
	g£g
.
	gsize
 = 0;

3953 
	gm
->
	g£g
.
	g√xt
 = 0;

3954 
	gm
->
	gt›
 = 
m
->
dv
 = 0;

3955 
	gi
 = 0; i < 
	gNTREEBINS
; ++i)

3956 *
åìbö_©
(
m
, 
i
) = 0;

3957 
öô_bös
(
m
);

3962 * 
¥ïíd_Æloc
(
m°©e
 
m
, * 
√wba£
, * 
ﬁdba£
,

3963 
size_t
 
nb
) {

3964 
mchunk±r
 
	gp
 = 
Æign_as_chunk
(
√wba£
);

3965 
mchunk±r
 
	gﬁdfú°
 = 
Æign_as_chunk
(
ﬁdba£
);

3966 
size_t
 
	gpsize
 = (*)
ﬁdfú°
 - (*)
p
;

3967 
mchunk±r
 
	gq
 = 
chunk_∂us_off£t
(
p
, 
nb
);

3968 
size_t
 
	gqsize
 = 
psize
 - 
nb
;

3969 
£t_size_™d_pöu£_of_öu£_chunk
(
m
, 
p
, 
nb
);

3971 
as£π
((*)
ﬁdfú°
 > (*)
q
);

3972 
as£π
(
pöu£
(
ﬁdfú°
));

3973 
as£π
(
qsize
 >
MIN_CHUNK_SIZE
);

3976 i‡(
	gﬁdfú°
 =
m
->
t›
) {

3977 
size_t
 
tsize
 = 
m
->
t›size
 +
qsize
;

3978 
	gm
->
	gt›
 = 
q
;

3979 
	gq
->
	ghód
 = 
tsize
 | 
PINUSE_BIT
;

3980 
check_t›_chunk
(
m
, 
q
);

3982 i‡(
	gﬁdfú°
 =
m
->
dv
) {

3983 
size_t
 
dsize
 = 
m
->
dvsize
 +
qsize
;

3984 
	gm
->
	gdv
 = 
q
;

3985 
£t_size_™d_pöu£_of_‰ì_chunk
(
q
, 
dsize
);

3988 i‡(!
is_öu£
(
ﬁdfú°
)) {

3989 
size_t
 
	gnsize
 = 
chunksize
(
ﬁdfú°
);

3990 
u∆ök_chunk
(
m
, 
ﬁdfú°
, 
nsize
);

3991 
	gﬁdfú°
 = 
chunk_∂us_off£t
(
ﬁdfú°
, 
nsize
);

3992 
	gqsize
 +
nsize
;

3994 
£t_‰ì_wôh_pöu£
(
q
, 
qsize
, 
ﬁdfú°
);

3995 
ö£π_chunk
(
m
, 
q
, 
qsize
);

3996 
check_‰ì_chunk
(
m
, 
q
);

3999 
check_mÆlo˚d_chunk
(
m
, 
chunk2mem
(
p
), 
nb
);

4000  
chunk2mem
(
p
);

4004 
add_£gmít
(
m°©e
 
m
, * 
tba£
, 
size_t
 
tsize
, 
Êag_t
 
mm≠≥d
) {

4006 * 
	gﬁd_t›
 = (*)
m
->
t›
;

4007 
m£gmíçå
 
	gﬁd•
 = 
£gmít_hﬁdög
(
m
, 
ﬁd_t›
);

4008 * 
	gﬁd_íd
 = 
ﬁd•
->
ba£
 + old•->
size
;

4009 
size_t
 
	gssize
 = 
∑d_ªque°
((
mÆloc_£gmít
));

4010 * 
	gøw•
 = 
ﬁd_íd
 - (
ssize
 + 
FOUR_SIZE_T_SIZES
 + 
CHUNK_ALIGN_MASK
);

4011 
size_t
 
	goff£t
 = 
Æign_off£t
(
chunk2mem
(
øw•
));

4012 * 
	ga•
 = 
øw•
 + 
off£t
;

4013 * 
	gc•
 = (
a•
 < (
ﬁd_t›
 + 
MIN_CHUNK_SIZE
))? old_top :ásp;

4014 
mchunk±r
 
	g•
 = (mchunk±r)
c•
;

4015 
m£gmíçå
 
	gss
 = (m£gmíçå)(
chunk2mem
(
•
));

4016 
mchunk±r
 
	gäext
 = 
chunk_∂us_off£t
(
•
, 
ssize
);

4017 
mchunk±r
 
	gp
 = 
äext
;

4018 
	gn„n˚s
 = 0;

4021 
öô_t›
(
m
, (
mchunk±r
)
tba£
, 
tsize
 - 
TOP_FOOT_SIZE
);

4024 
as£π
(
is_Æig√d
(
ss
));

4025 
£t_size_™d_pöu£_of_öu£_chunk
(
m
, 
•
, 
ssize
);

4026 *
	gss
 = 
m
->
£g
;

4027 
	gm
->
	g£g
.
	gba£
 = 
tba£
;

4028 
	gm
->
	g£g
.
	gsize
 = 
tsize
;

4029 
	gm
->
	g£g
.
	gsÊags
 = 
mm≠≥d
;

4030 
	gm
->
	g£g
.
	g√xt
 = 
ss
;

4034 
mchunk±r
 
	g√xç
 = 
chunk_∂us_off£t
(
p
, 
SIZE_T_SIZE
);

4035 
	gp
->
	ghód
 = 
FENCEPOST_HEAD
;

4036 ++
	gn„n˚s
;

4037 i‡((*)(&(
	g√xç
->
	ghód
)Ë< 
	gﬁd_íd
)

4038 
	gp
 = 
√xç
;

4042 
as£π
(
n„n˚s
 >= 2);

4045 i‡(
	gc•
 !
ﬁd_t›
) {

4046 
mchunk±r
 
q
 = (mchunk±r)
ﬁd_t›
;

4047 
size_t
 
	gpsize
 = 
c•
 - 
ﬁd_t›
;

4048 
mchunk±r
 
	gä
 = 
chunk_∂us_off£t
(
q
, 
psize
);

4049 
£t_‰ì_wôh_pöu£
(
q
, 
psize
, 
ä
);

4050 
ö£π_chunk
(
m
, 
q
, 
psize
);

4053 
check_t›_chunk
(
m
, m->
t›
);

4058 
	g£t_m≠_fûe
 = 0;

4059 
	gdevzîo_fd
 = -1;

4061 
£tup_nvmÆloc_m≠fûe
(*
fûï©h
, 
byãs
) {

4062 
	gªsu…
;

4063 
	gfd
 = -1;

4065 
	gfd
 = 
›í
(
fûï©h
, 
O_RDWR
 | 
O_CREAT
 | 
O_TRUNC
, (
mode_t
) 0600);

4066 i‡(
	gfd
 == -1) {

4067 
≥º‹
("Error opening file for writing");

4068 
exô
(-1);

4070 
	gªsu…
 = 
l£ek
(
fd
,
byãs
, 
SEEK_SET
);

4071 i‡(
	gªsu…
 == -1) {

4072 
˛o£
(
fd
);

4073 
≥º‹
("Error callingÜseek()Åo 'stretch'Åhe file");

4074 
exô
(-1);

4076 
	gªsu…
 = 
wrôe
(
fd
, "", 1);

4077 i‡(
	gªsu…
 != 1) {

4078 
˛o£
(
fd
);

4079 
≥º‹
("Error writingÜast byte ofÅhe file");

4080 
exô
(-1);

4082  
	gfd
;

4085 
nvm≠_¨g_°ru˘
 
	ga
;

4086 
	gchunk_id
 = 1;

4087 
	gmm≠_°¨èddr
 = 0;

4088 
	g¥oc_id
 = 1999;

4089 
size_t
 
	gnvoff£t
 = 0;

4090 *
	gnvm≠
 = 
NULL
;

4092 *
u£_nvm≠
(
size_t
 
s
, 
rq°_°ru˘
 *
rq°
){

4094 *
	g±r
 = 
NULL
;

4096 #ifde‡
NO_NACL


4098 if(!
	g£t_m≠_fûe
) {

4100 
	gdevzîo_fd
 = 
£tup_nvmÆloc_m≠fûe
((*)"/tmp/proc1", 1024*1024*50);

4101 
	g£t_m≠_fûe
 = 1;

4104 if(
	gdevzîo_fd
 < 0) {

4105 
Ârötf
(
°dîr
, "setup_nvmalloc_mapfile failed \n");

4106  
CALL_MMAP
(
s
);

4112 if–
	gnvm≠
 =
NULL
) {

4114 #ifde‡
NO_NACL


4115 
a
.
fd
 = -1;

4117 
	ga
.
	gpgoff
 = 0;

4119 if(
	grq°
) {

4122 
	gchunk_id
 = 
gë_¥oc_num_m≠s
(
rq°
->
pid
);

4127 
	gchunk_id
++;

4129 
	ga
.
	gchunk_id
 = 
chunk_id
;

4130 
	ga
.
	g¥oc_id
 = 
rq°
->
pid
;

4133 
	ga
.
	gchunk_id
 = 
chunk_id
++;

4134 
	ga
.
	g¥oc_id
 = 
¥oc_id
;

4137 
	ga
.
	gpÊags
 = 1;

4138 
	ga
.
	gªf_cou¡
 = 1;

4140 #ifde‡
USE_BASIC_MMAP


4141 
	gnvm≠
 = 
mm≠
(0, 
NVRAM_DATASZ
, 
PROT_READ
|
PROT_WRITE
, 
MAP_SHARED
, 
devzîo_fd
, 0);

4143 
Ârötf
(
°dîr
,"chunk id %d \n", 
a
.
chunk_id
);

4144 
	gnvm≠
 = (*)
sysˇŒ
(
__NR_nv_mm≠_pgoff
,0 ,
NVRAM_DATASZ
, 
PROT_READ
 | 
PROT_WRITE
, 
MAP_PRIVATE
| 
MAP_ANONYMOUS
, &
a
);

4147 
	g±r
 = 
nvm≠
;

4148 
	gnvoff£t
 = 0;

4150 
	gmm≠_°¨èddr
 = ()
nvm≠
;

4151 
Ârötf
(
°dîr
,"u£_nvm≠ mm≠_°¨èdd∏%lu ", 
mm≠_°¨èddr
);

4154 
	g±r
 = 
nvm≠
 + 
nvoff£t
;

4161 
	gnvoff£t
 = 
nvoff£t
 + 
s
;

4164 if(
	grq°
) {

4165 
	grq°
->
	gmm≠_°øddr
 = ()
nvm≠
;

4167 
	grq°
->
	gmm≠_id
 = 
chunk_id
;

4170  
	g±r
;

4173 
£t_mm≠_°¨t_addr
(
rq°_°ru˘
 *
rq°
){

4175 if(!
	grq°
)

4177 
	grq°
->
	gmm≠_°øddr
 = 
mm≠_°¨èddr
;

4182 
£t_mm≠_id
(
rq°_°ru˘
 *
rq°
){

4184 if(!
	grq°
)

4186 
	grq°
->
	gmm≠_id
 = 
chunk_id
;

4190 
upd©e_nvøm_md©a
(
rq°_°ru˘
 *
rq°
, * 
mem
){

4192 
	goff£t
 = 0;

4194 if(!
	grq°
){

4195 
Ârötf
(
°dîr
,"nvramÑqstÇull, update failed");

4199 if(
£t_mm≠_id
(
rq°
)) {

4200 
Ârötf
(
°dîr
,"failed updating mmap id");

4203 if(
£t_mm≠_°¨t_addr
(
rq°
)) {

4204 
Ârötf
(
°dîr
,"failed updating mmap startáddress");

4209 
	goff£t
 = (()
mem
 - 
mm≠_°¨èddr
);

4210 if(
	goff£t
 == 0){

4211 
Ârötf
(
°dîr
,"off£àˇl¯îr‹ %lu, %lu", 
mm≠_°¨èddr
, ()
mem
);

4214 #ifde‡
NV_DEBUG


4215 
Ârötf
(
°dîr
,"off£àˇl¯îr‹ %lu, %lu %lu", 
mm≠_°¨èddr
, ()
mem
, 
off£t
);

4218 i‡(
upd©e_off£t
(
rq°
->
pid
, 
off£t
,Ñqst)){

4219 
Ârötf
(
°dîr
, "update offset failed \n");

4233 * 
sys_Æloc
(
m°©e
 
m
, 
size_t
 
nb
, 
rq°_°ru˘
 *
rq°
) {

4236 * 
	gtba£
 = 
CMFAIL
;

4237 
size_t
 
	gtsize
 = 0;

4238 
Êag_t
 
	gmm≠_Êag
 = 0;

4239 
size_t
 
	gasize
;

4241 
ísuª_öôüliz©i⁄
();

4252 
	gasize
 = 
gønuœrôy_Æign
(
nb
 + 
SYS_ALLOC_PADDING
);

4253 i‡(
	gasize
 <
nb
)

4255 i‡(
	gm
->
	gfoŸ¥öt_limô
 != 0) {

4256 
size_t
 
Â
 = 
m
->
foŸ¥öt
 + 
asize
;

4257 i‡(
	gÂ
 <
m
->
foŸ¥öt
 || 
Â
 > m->
foŸ¥öt_limô
)

4283 i‡(
	gHAVE_MMAP
 && 
	gtba£
 =
CMFAIL
) {

4285 if(
rq°
) {

4286 #ifde‡
NV_DEBUG


4287 
Ârötf
(
°dîr
,"IN sys_Ælo¯rq°->pid %d \n",
rq°
->
pid
);

4290 #ifde‡
NV_DEBUG


4291 
Ârötf
(
°dîr
,"IN sys_allocÑqst isÇull \n");

4294 * 
	gmp
 = (*)(
u£_nvm≠
(
asize
, 
rq°
));

4295 i‡(
	gmp
 !
CMFAIL
) {

4296 
tba£
 = 
mp
;

4297 
	gtsize
 = 
asize
;

4298 
	gmm≠_Êag
 = 
USE_MMAP_BIT
;

4303 i‡(
	gMORECORE_CONTIGUOUS
 && !
u£_n⁄c⁄tiguous
(
m
Ë&& 
	gtba£
 =
CMFAIL
 ) {

4304 * 
br
 = 
CMFAIL
;

4305 
m£gmíçå
 
	gss
 = (
m
->
t›
 =0)? 0 : 
£gmít_hﬁdög
(m, (*)m->top);

4306 
ACQUIRE_MALLOC_GLOBAL_LOCK
();

4308 i‡(
	gss
 == 0) {

4309 * 
ba£
 = (*)
CALL_MORECORE
(0);

4310 i‡(
	gba£
 !
CMFAIL
) {

4311 
size_t
 
Â
;

4313 i‡(!
is_∑ge_Æig√d
(
ba£
))

4314 
	gasize
 +(
∑ge_Æign
((
size_t
)
ba£
) - (size_t)base);

4315 
	gÂ
 = 
m
->
foŸ¥öt
 + 
asize
;

4316 i‡(
	gasize
 > 
	gnb
 &&ásizê< 
	gHALF_MAX_SIZE_T
 &&

4317 (
	gm
->
	gfoŸ¥öt_limô
 == 0 ||

4318 (
Â
 > 
m
->
foŸ¥öt
 && f∞<m->
foŸ¥öt_limô
)) &&

4319 (
br
 = (*)(
CALL_MORECORE
(
asize
))Ë=
ba£
) {

4320 
tba£
 = 
ba£
;

4321 
	gtsize
 = 
asize
;

4327 
	gasize
 = 
gønuœrôy_Æign
(
nb
 - 
m
->
t›size
 + 
SYS_ALLOC_PADDING
);

4329 i‡(
	gasize
 < 
	gHALF_MAX_SIZE_T
 &&

4330 (
	gbr
 = (*)(
CALL_MORECORE
(
asize
))Ë=
ss
->
ba£
+ss->
size
) {

4331 
tba£
 = 
br
;

4332 
	gtsize
 = 
asize
;

4336 i‡(
	gtba£
 =
CMFAIL
) {

4337 i‡(
br
 !
CMFAIL
) {

4338 i‡(
asize
 < 
HALF_MAX_SIZE_T
 &&

4339 
asize
 < 
nb
 + 
SYS_ALLOC_PADDING
) {

4340 
size_t
 
esize
 = 
gønuœrôy_Æign
(
nb
 + 
SYS_ALLOC_PADDING
 - 
asize
);

4341 i‡(
	gesize
 < 
	gHALF_MAX_SIZE_T
) {

4342 * 
	gíd
 = (*)
CALL_MORECORE
(
esize
);

4343 i‡(
	gíd
 !
CMFAIL
)

4344 
asize
 +
esize
;

4346 (Ë
CALL_MORECORE
(-
asize
);

4347 
	gbr
 = 
CMFAIL
;

4352 i‡(
	gbr
 !
CMFAIL
) {

4353 
tba£
 = 
br
;

4354 
	gtsize
 = 
asize
;

4357 
dißbÀ_c⁄tiguous
(
m
);

4360 
RELEASE_MALLOC_GLOBAL_LOCK
();

4363 i‡(
	gHAVE_MMAP
 && 
	gtba£
 =
CMFAIL
) {

4364 * 
mp
 = (*)(
CALL_MMAP
(
asize
));

4365 i‡(
	gmp
 !
CMFAIL
) {

4366 
tba£
 = 
mp
;

4367 
	gtsize
 = 
asize
;

4368 
	gmm≠_Êag
 = 
USE_MMAP_BIT
;

4372 i‡(
	gHAVE_MORECORE
 && 
	gtba£
 =
CMFAIL
) {

4373 i‡(
asize
 < 
HALF_MAX_SIZE_T
) {

4374 * 
br
 = 
CMFAIL
;

4375 * 
	gíd
 = 
CMFAIL
;

4376 
ACQUIRE_MALLOC_GLOBAL_LOCK
();

4377 
	gbr
 = (*)(
CALL_MORECORE
(
asize
));

4378 
	gíd
 = (*)(
CALL_MORECORE
(0));

4379 
RELEASE_MALLOC_GLOBAL_LOCK
();

4380 i‡(
	gbr
 !
CMFAIL
 && 
íd
 !CMFAIL && 
br
 <Énd) {

4381 
size_t
 
ssize
 = 
íd
 - 
br
;

4382 i‡(
	gssize
 > 
	gnb
 + 
	gTOP_FOOT_SIZE
) {

4383 
	gtba£
 = 
br
;

4384 
	gtsize
 = 
ssize
;

4390 i‡(
	gtba£
 !
CMFAIL
) {

4392 i‡((
m
->
foŸ¥öt
 +
tsize
Ë> m->
max_foŸ¥öt
)

4393 
m
->
max_foŸ¥öt
 = m->
foŸ¥öt
;

4395 i‡(!
is_öôülized
(
m
)) {

4396 i‡(
	gm
->
	gÀa°_addr
 =0 || 
tba£
 < 
m
->
Àa°_addr
)

4397 
m
->
Àa°_addr
 = 
tba£
;

4398 
	gm
->
	g£g
.
	gba£
 = 
tba£
;

4399 
	gm
->
	g£g
.
	gsize
 = 
tsize
;

4400 
	gm
->
	g£g
.
	gsÊags
 = 
mm≠_Êag
;

4401 
	gm
->
	gmagic
 = 
m∑øms
.
magic
;

4402 
	gm
->
	gªÀa£_checks
 = 
MAX_RELEASE_CHECK_RATE
;

4403 
öô_bös
(
m
);

4404 #i‡!
ONLY_MSPACES


4405 i‡(
is_globÆ
(
m
))

4406 
öô_t›
(
m
, (
mchunk±r
)
tba£
, 
tsize
 - 
TOP_FOOT_SIZE
);

4411 
mchunk±r
 
	gmn
 = 
√xt_chunk
(
mem2chunk
(
m
));

4412 
öô_t›
(
m
, 
mn
, (
size_t
)((
tba£
 + 
tsize
Ë- (*)mnË-
TOP_FOOT_SIZE
);

4418 
m£gmíçå
 
	g•
 = &
m
->
£g
;

4420 
	g•
 !0 && 
tba£
 !
•
->
ba£
 + sp->
size
)

4421 
•
 = (
NO_SEGMENT_TRAVERSAL
Ë? 0 : sp->
√xt
;

4422 i‡(
	g•
 != 0 &&

4423 !
is_exã∫_£gmít
(
•
) &&

4424 (
•
->
sÊags
 & 
USE_MMAP_BIT
Ë=
mm≠_Êag
 &&

4425 
£gmít_hﬁds
(
•
, 
m
->
t›
)) {

4426 
	g•
->
	gsize
 +
tsize
;

4427 
öô_t›
(
m
, m->
t›
, m->
t›size
 + 
tsize
);

4430 i‡(
	gtba£
 < 
	gm
->
	gÀa°_addr
)

4431 
	gm
->
	gÀa°_addr
 = 
tba£
;

4432 
	g•
 = &
m
->
£g
;

4433 
	g•
 !0 && 
•
->
ba£
 !
tba£
 + 
tsize
)

4434 
•
 = (
NO_SEGMENT_TRAVERSAL
Ë? 0 : sp->
√xt
;

4435 i‡(
	g•
 != 0 &&

4436 !
is_exã∫_£gmít
(
•
) &&

4437 (
•
->
sÊags
 & 
USE_MMAP_BIT
Ë=
mm≠_Êag
) {

4438 * 
ﬁdba£
 = 
•
->
ba£
;

4439 
	g•
->
	gba£
 = 
tba£
;

4440 
	g•
->
	gsize
 +
tsize
;

4441  
¥ïíd_Æloc
(
m
, 
tba£
, 
ﬁdba£
, 
nb
);

4444 
add_£gmít
(
m
, 
tba£
, 
tsize
, 
mm≠_Êag
);

4448 i‡(
	gnb
 < 
	gm
->
	gt›size
) {

4449 
size_t
 
	grsize
 = 
m
->
t›size
 -
nb
;

4450 
mchunk±r
 
	gp
 = 
m
->
t›
;

4451 
mchunk±r
 
	gr
 = 
m
->
t›
 = 
chunk_∂us_off£t
(
p
, 
nb
);

4452 
	gr
->
	ghód
 = 
rsize
 | 
PINUSE_BIT
;

4453 
£t_size_™d_pöu£_of_öu£_chunk
(
m
, 
p
, 
nb
);

4454 
check_t›_chunk
(
m
, m->
t›
);

4455 
check_mÆlo˚d_chunk
(
m
, 
chunk2mem
(
p
), 
nb
);

4456  
chunk2mem
(
p
);

4460 
	gMALLOC_FAILURE_ACTION
;

4467 
size_t
 
ªÀa£_unu£d_£gmíts
(
m°©e
 
m
) {

4468 
size_t
 
	gªÀa£d
 = 0;

4469 
	gn£gs
 = 0;

4470 
m£gmíçå
 
	g¥ed
 = &
m
->
£g
;

4471 
m£gmíçå
 
	g•
 = 
¥ed
->
√xt
;

4472 
	g•
 != 0) {

4473 * 
ba£
 = 
•
->base;

4474 
size_t
 
	gsize
 = 
•
->
size
;

4475 
m£gmíçå
 
	g√xt
 = 
•
->
√xt
;

4476 ++
	gn£gs
;

4477 i‡(
is_mm≠≥d_£gmít
(
•
Ë&& !
is_exã∫_£gmít
(sp)) {

4478 
mchunk±r
 
	gp
 = 
Æign_as_chunk
(
ba£
);

4479 
size_t
 
	gpsize
 = 
chunksize
(
p
);

4481 i‡(!
is_öu£
(
p
Ë&& (*)
	gp
 + 
	gpsize
 >
ba£
 + 
size
 - 
TOP_FOOT_SIZE
) {

4482 
tchunk±r
 
ç
 = (tchunk±r)
p
;

4483 
as£π
(
£gmít_hﬁds
(
•
, (*)sp));

4484 i‡(
	gp
 =
m
->
dv
) {

4485 
m
->
dv
 = 0;

4486 
	gm
->
	gdvsize
 = 0;

4489 
u∆ök_œrge_chunk
(
m
, 
ç
);

4491 i‡(
CALL_MUNMAP
(
ba£
, 
size
) == 0) {

4492 
ªÀa£d
 +
size
;

4493 
	gm
->
	gfoŸ¥öt
 -
size
;

4495 
	g•
 = 
¥ed
;

4496 
	g•
->
	g√xt
 = 
√xt
;

4499 
ö£π_œrge_chunk
(
m
, 
ç
, 
psize
);

4503 i‡(
	gNO_SEGMENT_TRAVERSAL
)

4505 
	g¥ed
 = 
•
;

4506 
	g•
 = 
√xt
;

4509 
	gm
->
	gªÀa£_checks
 = ((
n£gs
 > 
MAX_RELEASE_CHECK_RATE
)?

4510 
n£gs
 : 
MAX_RELEASE_CHECK_RATE
);

4511  
	gªÀa£d
;

4514 
sys_åim
(
m°©e
 
m
, 
size_t
 
∑d
) {

4515 
size_t
 
	gªÀa£d
 = 0;

4516 
ísuª_öôüliz©i⁄
();

4517 i‡(
	g∑d
 < 
	gMAX_REQUEST
 && 
is_öôülized
(
m
)) {

4518 
	g∑d
 +
TOP_FOOT_SIZE
;

4520 i‡(
	gm
->
	gt›size
 > 
	g∑d
) {

4522 
size_t
 
	gunô
 = 
m∑øms
.
gønuœrôy
;

4523 
size_t
 
	gexåa
 = ((
m
->
t›size
 - 
∑d
 + (
unô
 - 
SIZE_T_ONE
)) / unit -

4524 
SIZE_T_ONE
Ë* 
unô
;

4525 
m£gmíçå
 
	g•
 = 
£gmít_hﬁdög
(
m
, (*)m->
t›
);

4527 i‡(!
is_exã∫_£gmít
(
•
)) {

4528 i‡(
is_mm≠≥d_£gmít
(
•
)) {

4529 i‡(
	gHAVE_MMAP
 &&

4530 
	g•
->
	gsize
 >
exåa
 &&

4531 !
has_£gmít_lök
(
m
, 
•
)) {

4532 
size_t
 
	g√wsize
 = 
•
->
size
 - 
exåa
;

4534 i‡((
CALL_MREMAP
(
•
->
ba£
, sp->
size
, 
√wsize
, 0Ë!
MFAIL
) ||

4535 (
CALL_MUNMAP
(
•
->
ba£
 + 
√wsize
, 
exåa
) == 0)) {

4536 
ªÀa£d
 = 
exåa
;

4540 i‡(
	gHAVE_MORECORE
) {

4541 i‡(
	gexåa
 >
HALF_MAX_SIZE_T
)

4542 
exåa
 = (
HALF_MAX_SIZE_T
Ë+ 
SIZE_T_ONE
 - 
unô
;

4543 
ACQUIRE_MALLOC_GLOBAL_LOCK
();

4546 * 
	gﬁd_br
 = (*)(
CALL_MORECORE
(0));

4547 i‡(
	gﬁd_br
 =
•
->
ba£
 + sp->
size
) {

4548 * 
ªl_br
 = (*)(
CALL_MORECORE
(-
exåa
));

4549 * 
	g√w_br
 = (*)(
CALL_MORECORE
(0));

4550 i‡(
	gªl_br
 !
CMFAIL
 && 
√w_br
 < 
ﬁd_br
)

4551 
ªÀa£d
 = 
ﬁd_br
 - 
√w_br
;

4554 
RELEASE_MALLOC_GLOBAL_LOCK
();

4558 i‡(
	gªÀa£d
 != 0) {

4559 
•
->
size
 -
ªÀa£d
;

4560 
	gm
->
	gfoŸ¥öt
 -
ªÀa£d
;

4561 
öô_t›
(
m
, m->
t›
, m->
t›size
 - 
ªÀa£d
);

4562 
check_t›_chunk
(
m
, m->
t›
);

4567 i‡(
	gHAVE_MMAP
)

4568 
	gªÀa£d
 +
ªÀa£_unu£d_£gmíts
(
m
);

4571 i‡(
	gªÀa£d
 =0 && 
m
->
t›size
 > m->
åim_check
)

4572 
m
->
åim_check
 = 
MAX_SIZE_T
;

4575  (
	gªÀa£d
 != 0)? 1 : 0;

4581 
di•o£_chunk
(
m°©e
 
m
, 
mchunk±r
 
p
, 
size_t
 
psize
) {

4582 
mchunk±r
 
	g√xt
 = 
chunk_∂us_off£t
(
p
, 
psize
);

4583 i‡(!
pöu£
(
p
)) {

4584 
mchunk±r
 
	g¥ev
;

4585 
size_t
 
	g¥evsize
 = 
p
->
¥ev_foŸ
;

4586 i‡(
is_mm≠≥d
(
p
)) {

4587 
	gpsize
 +
¥evsize
 + 
MMAP_FOOT_PAD
;

4588 i‡(
CALL_MUNMAP
((*)
p
 - 
¥evsize
, 
psize
) == 0)

4589 
m
->
foŸ¥öt
 -
psize
;

4592 
	g¥ev
 = 
chunk_möus_off£t
(
p
, 
¥evsize
);

4593 
	gpsize
 +
¥evsize
;

4594 
	gp
 = 
¥ev
;

4595 i‡(
RTCHECK
(
ok_addªss
(
m
, 
¥ev
))) {

4596 i‡(
	gp
 !
m
->
dv
) {

4597 
u∆ök_chunk
(
m
, 
p
, 
¥evsize
);

4599 i‡((
	g√xt
->
	ghód
 & 
	gINUSE_BITS
Ë=
INUSE_BITS
) {

4600 
m
->
dvsize
 = 
psize
;

4601 
£t_‰ì_wôh_pöu£
(
p
, 
psize
, 
√xt
);

4606 
CORRUPTION_ERROR_ACTION
(
m
);

4610 i‡(
RTCHECK
(
ok_addªss
(
m
, 
√xt
))) {

4611 i‡(!
cöu£
(
√xt
)) {

4612 i‡(
	g√xt
 =
m
->
t›
) {

4613 
size_t
 
tsize
 = 
m
->
t›size
 +
psize
;

4614 
	gm
->
	gt›
 = 
p
;

4615 
	gp
->
	ghód
 = 
tsize
 | 
PINUSE_BIT
;

4616 i‡(
	gp
 =
m
->
dv
) {

4617 
m
->
dv
 = 0;

4618 
	gm
->
	gdvsize
 = 0;

4622 i‡(
	g√xt
 =
m
->
dv
) {

4623 
size_t
 
dsize
 = 
m
->
dvsize
 +
psize
;

4624 
	gm
->
	gdv
 = 
p
;

4625 
£t_size_™d_pöu£_of_‰ì_chunk
(
p
, 
dsize
);

4629 
size_t
 
	gnsize
 = 
chunksize
(
√xt
);

4630 
	gpsize
 +
nsize
;

4631 
u∆ök_chunk
(
m
, 
√xt
, 
nsize
);

4632 
£t_size_™d_pöu£_of_‰ì_chunk
(
p
, 
psize
);

4633 i‡(
	gp
 =
m
->
dv
) {

4634 
m
->
dvsize
 = 
psize
;

4640 
£t_‰ì_wôh_pöu£
(
p
, 
psize
, 
√xt
);

4642 
ö£π_chunk
(
m
, 
p
, 
psize
);

4645 
CORRUPTION_ERROR_ACTION
(
m
);

4652 * 
tmÆloc_œrge
(
m°©e
 
m
, 
size_t
 
nb
) {

4653 
tchunk±r
 
	gv
 = 0;

4654 
size_t
 
	grsize
 = -
nb
;

4655 
tchunk±r
 
	gt
;

4656 
bödex_t
 
	gidx
;

4657 
compuã_åì_ödex
(
nb
, 
idx
);

4658 i‡((
	gt
 = *
åìbö_©
(
m
, 
idx
)) != 0) {

4660 
size_t
 
sizebôs
 = 
nb
 << 
À·shi·_f‹_åì_ödex
(
idx
);

4661 
tchunk±r
 
	gr°
 = 0;

4663 
tchunk±r
 
	gπ
;

4664 
size_t
 
	gåem
 = 
chunksize
(
t
Ë- 
nb
;

4665 i‡(
	gåem
 < 
	grsize
) {

4666 
	gv
 = 
t
;

4667 i‡((
	grsize
 = 
åem
) == 0)

4670 
	gπ
 = 
t
->
chûd
[1];

4671 
	gt
 = 
t
->
chûd
[(
sizebôs
 >> (
SIZE_T_BITSIZE
-
SIZE_T_ONE
)) & 1];

4672 i‡(
	gπ
 !0 && 
π
 !
t
)

4673 
r°
 = 
π
;

4674 i‡(
	gt
 == 0) {

4675 
t
 = 
r°
;

4678 
	gsizebôs
 <<= 1;

4681 i‡(
	gt
 =0 && 
v
 == 0) {

4682 
böm≠_t
 
À·bôs
 = 
À·_bôs
(
idx2bô
(
idx
)Ë& 
m
->
åìm≠
;

4683 i‡(
	gÀ·bôs
 != 0) {

4684 
bödex_t
 
i
;

4685 
böm≠_t
 
	gÀa°bô
 = 
Àa°_bô
(
À·bôs
);

4686 
compuã_bô2idx
(
Àa°bô
, 
i
);

4687 
	gt
 = *
åìbö_©
(
m
, 
i
);

4691 
	gt
 != 0) {

4692 
size_t
 
åem
 = 
chunksize
(
t
Ë- 
nb
;

4693 i‡(
	gåem
 < 
	grsize
) {

4694 
	grsize
 = 
åem
;

4695 
	gv
 = 
t
;

4697 
	gt
 = 
À·mo°_chûd
(
t
);

4701 i‡(
	gv
 !0 && 
rsize
 < (
size_t
)(
m
->
dvsize
 - 
nb
)) {

4702 i‡(
RTCHECK
(
ok_addªss
(
m
, 
v
))) {

4703 
mchunk±r
 
r
 = 
chunk_∂us_off£t
(
v
, 
nb
);

4704 
as£π
(
chunksize
(
v
Ë=
rsize
 + 
nb
);

4705 i‡(
RTCHECK
(
ok_√xt
(
v
, 
r
))) {

4706 
u∆ök_œrge_chunk
(
m
, 
v
);

4707 i‡(
	grsize
 < 
	gMIN_CHUNK_SIZE
)

4708 
£t_öu£_™d_pöu£
(
m
, 
v
, (
rsize
 + 
nb
));

4710 
£t_size_™d_pöu£_of_öu£_chunk
(
m
, 
v
, 
nb
);

4711 
£t_size_™d_pöu£_of_‰ì_chunk
(
r
, 
rsize
);

4712 
ö£π_chunk
(
m
, 
r
, 
rsize
);

4714  
chunk2mem
(
v
);

4717 
CORRUPTION_ERROR_ACTION
(
m
);

4723 * 
tmÆloc_smÆl
(
m°©e
 
m
, 
size_t
 
nb
) {

4724 
tchunk±r
 
	gt
, 
	gv
;

4725 
size_t
 
	grsize
;

4726 
bödex_t
 
	gi
;

4727 
böm≠_t
 
	gÀa°bô
 = 
Àa°_bô
(
m
->
åìm≠
);

4728 
compuã_bô2idx
(
Àa°bô
, 
i
);

4729 
	gv
 = 
t
 = *
åìbö_©
(
m
, 
i
);

4730 
	grsize
 = 
chunksize
(
t
Ë- 
nb
;

4732 (
	gt
 = 
À·mo°_chûd
(
t
)) != 0) {

4733 
size_t
 
åem
 = 
chunksize
(
t
Ë- 
nb
;

4734 i‡(
	gåem
 < 
	grsize
) {

4735 
	grsize
 = 
åem
;

4736 
	gv
 = 
t
;

4740 i‡(
RTCHECK
(
ok_addªss
(
m
, 
v
))) {

4741 
mchunk±r
 
	gr
 = 
chunk_∂us_off£t
(
v
, 
nb
);

4742 
as£π
(
chunksize
(
v
Ë=
rsize
 + 
nb
);

4743 i‡(
RTCHECK
(
ok_√xt
(
v
, 
r
))) {

4744 
u∆ök_œrge_chunk
(
m
, 
v
);

4745 i‡(
	grsize
 < 
	gMIN_CHUNK_SIZE
)

4746 
£t_öu£_™d_pöu£
(
m
, 
v
, (
rsize
 + 
nb
));

4748 
£t_size_™d_pöu£_of_öu£_chunk
(
m
, 
v
, 
nb
);

4749 
£t_size_™d_pöu£_of_‰ì_chunk
(
r
, 
rsize
);

4750 
ª∂a˚_dv
(
m
, 
r
, 
rsize
);

4752  
chunk2mem
(
v
);

4756 
CORRUPTION_ERROR_ACTION
(
m
);

4760 #i‡!
ONLY_MSPACES


4761 * 
dlmÆloc
(
size_t
 
byãs
){

4763  
	gNULL
;

4766 
nv‰ì
(*
±r
){

4768 
dl‰ì
(
±r
);

4772 * 
dÕnvªad
(
size_t
 
byãs
, 
rq°_°ru˘
 *
rq°
) {

4775  
nv_m≠_ªad
(
rq°
, 
NULL
);

4780 
d vcommô
(
rq°_°ru˘
 *
rq°
) {

4782  
nv_d©a_commô
(
rq°
);

4787 * 
dÕnvmÆloc
(
size_t
 
byãs
, 
rq°_°ru˘
 *
rq°
) {

4795 if(
nv_mm≠
(
rq°
)) {

4796 
Ârötf
(
°dout
, "updatingÖrocess object failed");

4823 #i‡
USE_LOCKS


4824 
ísuª_öôüliz©i⁄
();

4827 i‡(!
PREACTION
(
gm
)) {

4828 * 
	gmem
;

4829 
size_t
 
	gnb
;

4830 i‡(
	gbyãs
 <
MAX_SMALL_REQUEST
) {

4831 
bödex_t
 
idx
;

4832 
böm≠_t
 
	gsmÆlbôs
;

4833 
	gnb
 = (
byãs
 < 
MIN_REQUEST
)? 
MIN_CHUNK_SIZE
 : 
∑d_ªque°
(bytes);

4834 
	gidx
 = 
smÆl_ödex
(
nb
);

4835 
	gsmÆlbôs
 = 
gm
->
smÆlm≠
 >> 
idx
;

4837 i‡((
	gsmÆlbôs
 & 0x3U) != 0) {

4838 
mchunk±r
 
b
, 
p
;

4839 
	gidx
 +~
smÆlbôs
 & 1;

4840 
	gb
 = 
smÆlbö_©
(
gm
, 
idx
);

4841 
	gp
 = 
b
->
fd
;

4842 
as£π
(
chunksize
(
p
Ë=
smÆl_ödex2size
(
idx
));

4843 
u∆ök_fú°_smÆl_chunk
(
gm
, 
b
, 
p
, 
idx
);

4844 
£t_öu£_™d_pöu£
(
gm
, 
p
, 
smÆl_ödex2size
(
idx
));

4845 
	gmem
 = 
chunk2mem
(
p
);

4846 
check_mÆlo˚d_chunk
(
gm
, 
mem
, 
nb
);

4847 
	gpo°a˘i⁄
;

4850 i‡(
	gnb
 > 
	ggm
->
	gdvsize
) {

4851 i‡(
	gsmÆlbôs
 != 0) {

4852 
mchunk±r
 
b
, 
p
, 
r
;

4853 
size_t
 
	grsize
;

4854 
bödex_t
 
	gi
;

4855 
böm≠_t
 
	gÀ·bôs
 = (
smÆlbôs
 << 
idx
Ë& 
À·_bôs
(
idx2bô
(idx));

4856 
böm≠_t
 
	gÀa°bô
 = 
Àa°_bô
(
À·bôs
);

4857 
compuã_bô2idx
(
Àa°bô
, 
i
);

4858 
	gb
 = 
smÆlbö_©
(
gm
, 
i
);

4859 
	gp
 = 
b
->
fd
;

4860 
as£π
(
chunksize
(
p
Ë=
smÆl_ödex2size
(
i
));

4861 
u∆ök_fú°_smÆl_chunk
(
gm
, 
b
, 
p
, 
i
);

4862 
	grsize
 = 
smÆl_ödex2size
(
i
Ë- 
nb
;

4864 i‡(
	gSIZE_T_SIZE
 !4 && 
rsize
 < 
MIN_CHUNK_SIZE
)

4865 
£t_öu£_™d_pöu£
(
gm
, 
p
, 
smÆl_ödex2size
(
i
));

4867 
£t_size_™d_pöu£_of_öu£_chunk
(
gm
, 
p
, 
nb
);

4868 
	gr
 = 
chunk_∂us_off£t
(
p
, 
nb
);

4869 
£t_size_™d_pöu£_of_‰ì_chunk
(
r
, 
rsize
);

4870 
ª∂a˚_dv
(
gm
, 
r
, 
rsize
);

4872 
	gmem
 = 
chunk2mem
(
p
);

4873 
check_mÆlo˚d_chunk
(
gm
, 
mem
, 
nb
);

4874 
	gpo°a˘i⁄
;

4877 i‡(
	ggm
->
	gåìm≠
 !0 && (
mem
 = 
tmÆloc_smÆl
(
gm
, 
nb
)) != 0) {

4878 
check_mÆlo˚d_chunk
(
gm
, 
mem
, 
nb
);

4879 
	gpo°a˘i⁄
;

4883 i‡(
	gbyãs
 >
MAX_REQUEST
)

4884 
nb
 = 
MAX_SIZE_T
;

4886 
	gnb
 = 
∑d_ªque°
(
byãs
);

4887 i‡(
	ggm
->
	gåìm≠
 !0 && (
mem
 = 
tmÆloc_œrge
(
gm
, 
nb
)) != 0) {

4888 
check_mÆlo˚d_chunk
(
gm
, 
mem
, 
nb
);

4889 
	gpo°a˘i⁄
;

4893 i‡(
	gnb
 <
gm
->
dvsize
) {

4894 
size_t
 
rsize
 = 
gm
->
dvsize
 - 
nb
;

4895 
mchunk±r
 
	gp
 = 
gm
->
dv
;

4896 i‡(
	grsize
 >
MIN_CHUNK_SIZE
) {

4897 
mchunk±r
 
r
 = 
gm
->
dv
 = 
chunk_∂us_off£t
(
p
, 
nb
);

4898 
	ggm
->
	gdvsize
 = 
rsize
;

4899 
£t_size_™d_pöu£_of_‰ì_chunk
(
r
, 
rsize
);

4900 
£t_size_™d_pöu£_of_öu£_chunk
(
gm
, 
p
, 
nb
);

4903 
size_t
 
	gdvs
 = 
gm
->
dvsize
;

4904 
	ggm
->
	gdvsize
 = 0;

4905 
	ggm
->
	gdv
 = 0;

4906 
£t_öu£_™d_pöu£
(
gm
, 
p
, 
dvs
);

4908 
	gmem
 = 
chunk2mem
(
p
);

4909 
check_mÆlo˚d_chunk
(
gm
, 
mem
, 
nb
);

4910 
	gpo°a˘i⁄
;

4913 i‡(
	gnb
 < 
	ggm
->
	gt›size
) {

4914 
size_t
 
	grsize
 = 
gm
->
t›size
 -
nb
;

4915 
mchunk±r
 
	gp
 = 
gm
->
t›
;

4916 
mchunk±r
 
	gr
 = 
gm
->
t›
 = 
chunk_∂us_off£t
(
p
, 
nb
);

4917 
	gr
->
	ghód
 = 
rsize
 | 
PINUSE_BIT
;

4918 
£t_size_™d_pöu£_of_öu£_chunk
(
gm
, 
p
, 
nb
);

4919 
	gmem
 = 
chunk2mem
(
p
);

4920 
check_t›_chunk
(
gm
, gm->
t›
);

4921 
check_mÆlo˚d_chunk
(
gm
, 
mem
, 
nb
);

4922 
	gpo°a˘i⁄
;

4925 
	gmem
 = 
sys_Æloc
(
gm
, 
nb
, 
rq°
);

4926 #ifde‡
NV_DEBUG


4927 
Ârötf
(
°dîr
, "rq°->pid %d \n",
rq°
->
pid
);

4930 
	gpo°a˘i⁄
:

4931 
POSTACTION
(
gm
);

4934 if(
upd©e_nvøm_md©a
(
rq°
, 
mem
)){

4935 
Ârötf
(
°dîr
,"updatingÇvram metadata failed");

4936  
	gNULL
;

4940  
	gmem
;

4946 * 
d vmÆloc
(
size_t
 
byãs
) {

4972 #i‡
USE_LOCKS


4973 
ísuª_öôüliz©i⁄
();

4976 i‡(!
PREACTION
(
gm
)) {

4977 * 
	gmem
;

4978 
size_t
 
	gnb
;

4979 i‡(
	gbyãs
 <
MAX_SMALL_REQUEST
) {

4980 
bödex_t
 
idx
;

4981 
böm≠_t
 
	gsmÆlbôs
;

4982 
	gnb
 = (
byãs
 < 
MIN_REQUEST
)? 
MIN_CHUNK_SIZE
 : 
∑d_ªque°
(bytes);

4983 
	gidx
 = 
smÆl_ödex
(
nb
);

4984 
	gsmÆlbôs
 = 
gm
->
smÆlm≠
 >> 
idx
;

4986 i‡((
	gsmÆlbôs
 & 0x3U) != 0) {

4987 
mchunk±r
 
b
, 
p
;

4988 
	gidx
 +~
smÆlbôs
 & 1;

4989 
	gb
 = 
smÆlbö_©
(
gm
, 
idx
);

4990 
	gp
 = 
b
->
fd
;

4991 
as£π
(
chunksize
(
p
Ë=
smÆl_ödex2size
(
idx
));

4992 
u∆ök_fú°_smÆl_chunk
(
gm
, 
b
, 
p
, 
idx
);

4993 
£t_öu£_™d_pöu£
(
gm
, 
p
, 
smÆl_ödex2size
(
idx
));

4994 
	gmem
 = 
chunk2mem
(
p
);

4995 
check_mÆlo˚d_chunk
(
gm
, 
mem
, 
nb
);

4996 
	gpo°a˘i⁄
;

4999 i‡(
	gnb
 > 
	ggm
->
	gdvsize
) {

5000 i‡(
	gsmÆlbôs
 != 0) {

5001 
mchunk±r
 
b
, 
p
, 
r
;

5002 
size_t
 
	grsize
;

5003 
bödex_t
 
	gi
;

5004 
böm≠_t
 
	gÀ·bôs
 = (
smÆlbôs
 << 
idx
Ë& 
À·_bôs
(
idx2bô
(idx));

5005 
böm≠_t
 
	gÀa°bô
 = 
Àa°_bô
(
À·bôs
);

5006 
compuã_bô2idx
(
Àa°bô
, 
i
);

5007 
	gb
 = 
smÆlbö_©
(
gm
, 
i
);

5008 
	gp
 = 
b
->
fd
;

5009 
as£π
(
chunksize
(
p
Ë=
smÆl_ödex2size
(
i
));

5010 
u∆ök_fú°_smÆl_chunk
(
gm
, 
b
, 
p
, 
i
);

5011 
	grsize
 = 
smÆl_ödex2size
(
i
Ë- 
nb
;

5013 i‡(
	gSIZE_T_SIZE
 !4 && 
rsize
 < 
MIN_CHUNK_SIZE
)

5014 
£t_öu£_™d_pöu£
(
gm
, 
p
, 
smÆl_ödex2size
(
i
));

5016 
£t_size_™d_pöu£_of_öu£_chunk
(
gm
, 
p
, 
nb
);

5017 
	gr
 = 
chunk_∂us_off£t
(
p
, 
nb
);

5018 
£t_size_™d_pöu£_of_‰ì_chunk
(
r
, 
rsize
);

5019 
ª∂a˚_dv
(
gm
, 
r
, 
rsize
);

5021 
	gmem
 = 
chunk2mem
(
p
);

5022 
check_mÆlo˚d_chunk
(
gm
, 
mem
, 
nb
);

5023 
	gpo°a˘i⁄
;

5026 i‡(
	ggm
->
	gåìm≠
 !0 && (
mem
 = 
tmÆloc_smÆl
(
gm
, 
nb
)) != 0) {

5027 
check_mÆlo˚d_chunk
(
gm
, 
mem
, 
nb
);

5028 
	gpo°a˘i⁄
;

5032 i‡(
	gbyãs
 >
MAX_REQUEST
)

5033 
nb
 = 
MAX_SIZE_T
;

5035 
	gnb
 = 
∑d_ªque°
(
byãs
);

5036 i‡(
	ggm
->
	gåìm≠
 !0 && (
mem
 = 
tmÆloc_œrge
(
gm
, 
nb
)) != 0) {

5037 
check_mÆlo˚d_chunk
(
gm
, 
mem
, 
nb
);

5038 
	gpo°a˘i⁄
;

5042 i‡(
	gnb
 <
gm
->
dvsize
) {

5043 
size_t
 
rsize
 = 
gm
->
dvsize
 - 
nb
;

5044 
mchunk±r
 
	gp
 = 
gm
->
dv
;

5045 i‡(
	grsize
 >
MIN_CHUNK_SIZE
) {

5046 
mchunk±r
 
r
 = 
gm
->
dv
 = 
chunk_∂us_off£t
(
p
, 
nb
);

5047 
	ggm
->
	gdvsize
 = 
rsize
;

5048 
£t_size_™d_pöu£_of_‰ì_chunk
(
r
, 
rsize
);

5049 
£t_size_™d_pöu£_of_öu£_chunk
(
gm
, 
p
, 
nb
);

5052 
size_t
 
	gdvs
 = 
gm
->
dvsize
;

5053 
	ggm
->
	gdvsize
 = 0;

5054 
	ggm
->
	gdv
 = 0;

5055 
£t_öu£_™d_pöu£
(
gm
, 
p
, 
dvs
);

5057 
	gmem
 = 
chunk2mem
(
p
);

5058 
check_mÆlo˚d_chunk
(
gm
, 
mem
, 
nb
);

5059 
	gpo°a˘i⁄
;

5062 i‡(
	gnb
 < 
	ggm
->
	gt›size
) {

5063 
size_t
 
	grsize
 = 
gm
->
t›size
 -
nb
;

5064 
mchunk±r
 
	gp
 = 
gm
->
t›
;

5065 
mchunk±r
 
	gr
 = 
gm
->
t›
 = 
chunk_∂us_off£t
(
p
, 
nb
);

5066 
	gr
->
	ghód
 = 
rsize
 | 
PINUSE_BIT
;

5067 
£t_size_™d_pöu£_of_öu£_chunk
(
gm
, 
p
, 
nb
);

5068 
	gmem
 = 
chunk2mem
(
p
);

5069 
check_t›_chunk
(
gm
, gm->
t›
);

5070 
check_mÆlo˚d_chunk
(
gm
, 
mem
, 
nb
);

5071 
	gpo°a˘i⁄
;

5074 
	gmem
 = 
sys_Æloc
(
gm
, 
nb
, 
NULL
);

5076 
Ârötf
(
°dîr
, "mem %lu mm≠_°ødd∏%lu off£à%lu byã†%u\n", ()
mem
, 
mm≠_°¨èddr
, ()mem - mm≠_°¨èddr, 
byãs
 );

5078 
	gpo°a˘i⁄
:

5079 
POSTACTION
(
gm
);

5080  
	gmem
;

5088 
dl‰ì
(* 
mem
) {

5095 i‡(
	gmem
 != 0) {

5096 
mchunk±r
 
p
 = 
mem2chunk
(
mem
);

5097 #i‡
FOOTERS


5098 
m°©e
 
	gfm
 = 
gë_m°©e_f‹
(
p
);

5099 i‡(!
ok_magic
(
fm
)) {

5100 
USAGE_ERROR_ACTION
(
fm
, 
p
);

5104 
	#fm
 
gm


	)

5106 i‡(!
PREACTION
(
fm
)) {

5107 
check_öu£_chunk
(
fm
, 
p
);

5108 i‡(
RTCHECK
(
ok_addªss
(
fm
, 
p
Ë&& 
ok_öu£
(p))) {

5109 
size_t
 
	gpsize
 = 
chunksize
(
p
);

5110 
mchunk±r
 
	g√xt
 = 
chunk_∂us_off£t
(
p
, 
psize
);

5111 i‡(!
pöu£
(
p
)) {

5112 
size_t
 
	g¥evsize
 = 
p
->
¥ev_foŸ
;

5113 i‡(
is_mm≠≥d
(
p
)) {

5114 
	gpsize
 +
¥evsize
 + 
MMAP_FOOT_PAD
;

5115 i‡(
CALL_MUNMAP
((*)
p
 - 
¥evsize
, 
psize
) == 0)

5116 
fm
->
foŸ¥öt
 -
psize
;

5117 
	gpo°a˘i⁄
;

5120 
mchunk±r
 
	g¥ev
 = 
chunk_möus_off£t
(
p
, 
¥evsize
);

5121 
	gpsize
 +
¥evsize
;

5122 
	gp
 = 
¥ev
;

5123 i‡(
RTCHECK
(
ok_addªss
(
fm
, 
¥ev
))) {

5124 i‡(
	gp
 !
fm
->
dv
) {

5125 
u∆ök_chunk
(
fm
, 
p
, 
¥evsize
);

5127 i‡((
	g√xt
->
	ghód
 & 
	gINUSE_BITS
Ë=
INUSE_BITS
) {

5128 
fm
->
dvsize
 = 
psize
;

5129 
£t_‰ì_wôh_pöu£
(
p
, 
psize
, 
√xt
);

5130 
	gpo°a˘i⁄
;

5134 
	gîr‹a˘i⁄
;

5138 i‡(
RTCHECK
(
ok_√xt
(
p
, 
√xt
Ë&& 
ok_pöu£
(next))) {

5139 i‡(!
cöu£
(
√xt
)) {

5140 i‡(
	g√xt
 =
fm
->
t›
) {

5141 
size_t
 
tsize
 = 
fm
->
t›size
 +
psize
;

5142 
	gfm
->
	gt›
 = 
p
;

5143 
	gp
->
	ghód
 = 
tsize
 | 
PINUSE_BIT
;

5144 i‡(
	gp
 =
fm
->
dv
) {

5145 
fm
->
dv
 = 0;

5146 
	gfm
->
	gdvsize
 = 0;

5148 i‡(
should_åim
(
fm
, 
tsize
))

5149 
sys_åim
(
fm
, 0);

5150 
	gpo°a˘i⁄
;

5152 i‡(
	g√xt
 =
fm
->
dv
) {

5153 
size_t
 
dsize
 = 
fm
->
dvsize
 +
psize
;

5154 
	gfm
->
	gdv
 = 
p
;

5155 
£t_size_™d_pöu£_of_‰ì_chunk
(
p
, 
dsize
);

5156 
	gpo°a˘i⁄
;

5159 
size_t
 
	gnsize
 = 
chunksize
(
√xt
);

5160 
	gpsize
 +
nsize
;

5161 
u∆ök_chunk
(
fm
, 
√xt
, 
nsize
);

5162 
£t_size_™d_pöu£_of_‰ì_chunk
(
p
, 
psize
);

5163 i‡(
	gp
 =
fm
->
dv
) {

5164 
fm
->
dvsize
 = 
psize
;

5165 
	gpo°a˘i⁄
;

5170 
£t_‰ì_wôh_pöu£
(
p
, 
psize
, 
√xt
);

5172 i‡(
is_smÆl
(
psize
)) {

5173 
ö£π_smÆl_chunk
(
fm
, 
p
, 
psize
);

5174 
check_‰ì_chunk
(
fm
, 
p
);

5177 
tchunk±r
 
	gç
 = (tchunk±r)
p
;

5178 
ö£π_œrge_chunk
(
fm
, 
ç
, 
psize
);

5179 
check_‰ì_chunk
(
fm
, 
p
);

5180 i‡(--
	gfm
->
	gªÀa£_checks
 == 0)

5181 
ªÀa£_unu£d_£gmíts
(
fm
);

5183 
	gpo°a˘i⁄
;

5186 
	gîr‹a˘i⁄
:

5187 
USAGE_ERROR_ACTION
(
fm
, 
p
);

5188 
	gpo°a˘i⁄
:

5189 
POSTACTION
(
fm
);

5192 #i‡!
FOOTERS


5193 #unde‡
fm


5197 * 
d vˇŒoc
(
size_t
 
n_ñemíts
, size_à
ñem_size
) {

5198 * 
	gmem
;

5211 
	gmem
 = 
d vmÆloc
(
n_ñemíts
 * 
ñem_size
);

5213  
	gmem
;

5216 * 
dlˇŒoc
(
size_t
 
n_ñemíts
, size_à
ñem_size
) {

5217 * 
	gmem
;

5218 
size_t
 
	gªq
 = 0;

5219 i‡(
	gn_ñemíts
 != 0) {

5220 
ªq
 = 
n_ñemíts
 * 
ñem_size
;

5221 i‡(((
	gn_ñemíts
 | 
	gñem_size
Ë& ~(
	gsize_t
)0xffff) &&

5222 (
	gªq
 / 
	gn_ñemíts
 !
ñem_size
))

5223 
ªq
 = 
MAX_SIZE_T
;

5225 
	gmem
 = 
dlmÆloc
(
ªq
);

5226 i‡(
	gmem
 !0 && 
ˇŒoc_mu°_˛ór
(
mem2chunk
(
mem
)))

5227 
mem£t
(
mem
, 0, 
ªq
);

5229  
	gmem
;

5237 
mchunk±r
 
åy_ªÆloc_chunk
(
m°©e
 
m
, mchunk±∏
p
, 
size_t
 
nb
,

5238 
ˇn_move
) {

5239 
mchunk±r
 
	g√wp
 = 0;

5241 
Ârötf
(
°dîr
,"callomgÅry_realloc_chunk \n");

5243 
size_t
 
	gﬁdsize
 = 
chunksize
(
p
);

5244 
Ârötf
(
°dîr
,"ﬁdsizê%zu \n", 
ﬁdsize
);

5245 
mchunk±r
 
	g√xt
 = 
chunk_∂us_off£t
(
p
, 
ﬁdsize
);

5246 i‡(
RTCHECK
(
ok_addªss
(
m
, 
p
Ë&& 
ok_öu£
(p) &&

5247 
ok_√xt
(
p
, 
√xt
Ë&& 
ok_pöu£
(next))) {

5249 
Ârötf
(
°dîr
,"entering RTCHECK \n");

5251 i‡(
is_mm≠≥d
(
p
)) {

5253 
Ârötf
(
°dîr
,"is mmaped \n");

5254 
	g√wp
 = 
mm≠_ªsize
(
m
, 
p
, 
nb
, 
ˇn_move
);

5256 } i‡(
	gﬁdsize
 >
nb
) {

5257 
size_t
 
rsize
 = 
ﬁdsize
 - 
nb
;

5258 i‡(
	grsize
 >
MIN_CHUNK_SIZE
) {

5259 
mchunk±r
 
r
 = 
chunk_∂us_off£t
(
p
, 
nb
);

5260 
£t_öu£
(
m
, 
p
, 
nb
);

5261 
£t_öu£
(
m
, 
r
, 
rsize
);

5262 
di•o£_chunk
(
m
, 
r
, 
rsize
);

5264 
	g√wp
 = 
p
;

5266 i‡(
	g√xt
 =
m
->
t›
) {

5267 i‡(
ﬁdsize
 + 
m
->
t›size
 > 
nb
) {

5268 
size_t
 
√wsize
 = 
ﬁdsize
 + 
m
->
t›size
;

5269 
size_t
 
	g√wt›size
 = 
√wsize
 - 
nb
;

5270 
mchunk±r
 
	g√wt›
 = 
chunk_∂us_off£t
(
p
, 
nb
);

5271 
£t_öu£
(
m
, 
p
, 
nb
);

5272 
	g√wt›
->
	ghód
 = 
√wt›size
 |
PINUSE_BIT
;

5273 
	gm
->
	gt›
 = 
√wt›
;

5274 
	gm
->
	gt›size
 = 
√wt›size
;

5275 
	g√wp
 = 
p
;

5278 i‡(
	g√xt
 =
m
->
dv
) {

5279 
size_t
 
dvs
 = 
m
->
dvsize
;

5280 i‡(
	gﬁdsize
 + 
	gdvs
 >
nb
) {

5281 
size_t
 
dsize
 = 
ﬁdsize
 + 
dvs
 - 
nb
;

5282 i‡(
	gdsize
 >
MIN_CHUNK_SIZE
) {

5283 
mchunk±r
 
r
 = 
chunk_∂us_off£t
(
p
, 
nb
);

5284 
mchunk±r
 
	gn
 = 
chunk_∂us_off£t
(
r
, 
dsize
);

5285 
£t_öu£
(
m
, 
p
, 
nb
);

5286 
£t_size_™d_pöu£_of_‰ì_chunk
(
r
, 
dsize
);

5287 
˛ór_pöu£
(
n
);

5288 
	gm
->
	gdvsize
 = 
dsize
;

5289 
	gm
->
	gdv
 = 
r
;

5292 
size_t
 
	g√wsize
 = 
ﬁdsize
 + 
dvs
;

5293 
£t_öu£
(
m
, 
p
, 
√wsize
);

5294 
	gm
->
	gdvsize
 = 0;

5295 
	gm
->
	gdv
 = 0;

5297 
	g√wp
 = 
p
;

5300 i‡(!
cöu£
(
√xt
)) {

5301 
size_t
 
	g√xtsize
 = 
chunksize
(
√xt
);

5302 i‡(
	gﬁdsize
 + 
	g√xtsize
 >
nb
) {

5303 
size_t
 
rsize
 = 
ﬁdsize
 + 
√xtsize
 - 
nb
;

5304 
u∆ök_chunk
(
m
, 
√xt
, 
√xtsize
);

5305 i‡(
	grsize
 < 
	gMIN_CHUNK_SIZE
) {

5306 
size_t
 
	g√wsize
 = 
ﬁdsize
 + 
√xtsize
;

5307 
£t_öu£
(
m
, 
p
, 
√wsize
);

5310 
mchunk±r
 
	gr
 = 
chunk_∂us_off£t
(
p
, 
nb
);

5311 
£t_öu£
(
m
, 
p
, 
nb
);

5312 
£t_öu£
(
m
, 
r
, 
rsize
);

5313 
di•o£_chunk
(
m
, 
r
, 
rsize
);

5315 
	g√wp
 = 
p
;

5320 
USAGE_ERROR_ACTION
(
m
, 
ﬁdmem
);

5322  
	g√wp
;

5325 * 
öã∫Æ_memÆign
(
m°©e
 
m
, 
size_t
 
Æignmít
, size_à
byãs
) {

5326 * 
	gmem
 = 0;

5327 i‡(
	gÆignmít
 < 
	gMIN_CHUNK_SIZE
)

5328 
	gÆignmít
 = 
MIN_CHUNK_SIZE
;

5329 i‡((
	gÆignmít
 & (Æignmít-
	gSIZE_T_ONE
)) != 0) {

5330 
size_t
 
a
 = 
MALLOC_ALIGNMENT
 << 1;

5331 
	ga
 < 
	gÆignmít
)á <<= 1;

5332 
	gÆignmít
 = 
a
;

5334 i‡(
	gbyãs
 >
MAX_REQUEST
 - 
Æignmít
) {

5335 i‡(
m
 != 0) {

5336 
MALLOC_FAILURE_ACTION
;

5340 
size_t
 
	gnb
 = 
ªque°2size
(
byãs
);

5341 
size_t
 
	gªq
 = 
nb
 + 
Æignmít
 + 
MIN_CHUNK_SIZE
 - 
CHUNK_OVERHEAD
;

5342 
	gmem
 = 
öã∫Æ_mÆloc
(
m
, 
ªq
);

5343 i‡(
	gmem
 != 0) {

5344 
mchunk±r
 
p
 = 
mem2chunk
(
mem
);

5345 i‡(
PREACTION
(
m
))

5347 i‡((((
	gsize_t
)(
	gmem
)Ë& (
	gÆignmít
 - 1)) != 0) {

5356 * 
br
 = (*)
mem2chunk
((
size_t
)(((size_t)((*)
mem
 + 
Æignmít
 -

5357 
SIZE_T_ONE
)) &

5358 -
Æignmít
));

5359 * 
	gpos
 = ((
size_t
)(
br
 - (*)(
p
)Ë>
MIN_CHUNK_SIZE
)?

5360 
br
 : br+
Æignmít
;

5361 
mchunk±r
 
	g√wp
 = (mchunk±r)
pos
;

5362 
size_t
 
	gÀadsize
 = 
pos
 - (*)(
p
);

5363 
size_t
 
	g√wsize
 = 
chunksize
(
p
Ë- 
Àadsize
;

5365 i‡(
is_mm≠≥d
(
p
)) {

5366 
	g√wp
->
	g¥ev_foŸ
 = 
p
->
¥ev_foŸ
 + 
Àadsize
;

5367 
	g√wp
->
	ghód
 = 
√wsize
;

5370 
£t_öu£
(
m
, 
√wp
, 
√wsize
);

5371 
£t_öu£
(
m
, 
p
, 
Àadsize
);

5372 
di•o£_chunk
(
m
, 
p
, 
Àadsize
);

5374 
	gp
 = 
√wp
;

5378 i‡(!
is_mm≠≥d
(
p
)) {

5379 
size_t
 
	gsize
 = 
chunksize
(
p
);

5380 i‡(
	gsize
 > 
	gnb
 + 
	gMIN_CHUNK_SIZE
) {

5381 
size_t
 
	gªmaödî_size
 = 
size
 - 
nb
;

5382 
mchunk±r
 
	gªmaödî
 = 
chunk_∂us_off£t
(
p
, 
nb
);

5383 
£t_öu£
(
m
, 
p
, 
nb
);

5384 
£t_öu£
(
m
, 
ªmaödî
, 
ªmaödî_size
);

5385 
di•o£_chunk
(
m
, 
ªmaödî
, 
ªmaödî_size
);

5389 
	gmem
 = 
chunk2mem
(
p
);

5390 
as£π
 (
chunksize
(
p
Ë>
nb
);

5391 
as£π
(((
size_t
)
mem
 & (
Æignmít
 - 1)) == 0);

5392 
check_öu£_chunk
(
m
, 
p
);

5393 
POSTACTION
(
m
);

5396  
	gmem
;

5406 ** 
üŒoc
(
m°©e
 
m
,

5407 
size_t
 
n_ñemíts
,

5408 
size_t
* 
sizes
,

5409 
›ts
,

5410 * 
chunks
[]) {

5412 
size_t
 
	gñemít_size
;

5413 
size_t
 
	gc⁄ã¡s_size
;

5414 
size_t
 
	g¨øy_size
;

5415 * 
	gmem
;

5416 
mchunk±r
 
	gp
;

5417 
size_t
 
	gªmaödî_size
;

5418 ** 
	gm¨øy
;

5419 
mchunk±r
 
	g¨øy_chunk
;

5420 
Êag_t
 
	gwas_íabÀd
;

5421 
size_t
 
	gsize
;

5422 
size_t
 
	gi
;

5424 
ísuª_öôüliz©i⁄
();

5426 i‡(
	gchunks
 != 0) {

5427 i‡(
n_ñemíts
 == 0)

5428  
chunks
;

5429 
	gm¨øy
 = 
chunks
;

5430 
	g¨øy_size
 = 0;

5434 i‡(
	gn_ñemíts
 == 0)

5435  (**)
öã∫Æ_mÆloc
(
m
, 0);

5436 
	gm¨øy
 = 0;

5437 
	g¨øy_size
 = 
ªque°2size
(
n_ñemíts
 * ((*)));

5441 i‡(
	g›ts
 & 0x1) {

5442 
	gñemít_size
 = 
ªque°2size
(*
sizes
);

5443 
	gc⁄ã¡s_size
 = 
n_ñemíts
 * 
ñemít_size
;

5446 
	gñemít_size
 = 0;

5447 
	gc⁄ã¡s_size
 = 0;

5448 
	gi
 = 0; i !
n_ñemíts
; ++i)

5449 
	gc⁄ã¡s_size
 +
ªque°2size
(
sizes
[
i
]);

5452 
	gsize
 = 
c⁄ã¡s_size
 + 
¨øy_size
;

5459 
	gwas_íabÀd
 = 
u£_mm≠
(
m
);

5460 
dißbÀ_mm≠
(
m
);

5461 
	gmem
 = 
öã∫Æ_mÆloc
(
m
, 
size
 - 
CHUNK_OVERHEAD
);

5462 i‡(
	gwas_íabÀd
)

5463 
íabÀ_mm≠
(
m
);

5464 i‡(
	gmem
 == 0)

5467 i‡(
PREACTION
(
m
))  0;

5468 
	gp
 = 
mem2chunk
(
mem
);

5469 
	gªmaödî_size
 = 
chunksize
(
p
);

5471 
as£π
(!
is_mm≠≥d
(
p
));

5473 i‡(
	g›ts
 & 0x2) {

5474 
mem£t
((
size_t
*)
mem
, 0, 
ªmaödî_size
 - 
SIZE_T_SIZE
 - 
¨øy_size
);

5478 i‡(
	gm¨øy
 == 0) {

5479 
size_t
 
¨øy_chunk_size
;

5480 
	g¨øy_chunk
 = 
chunk_∂us_off£t
(
p
, 
c⁄ã¡s_size
);

5481 
	g¨øy_chunk_size
 = 
ªmaödî_size
 - 
c⁄ã¡s_size
;

5482 
	gm¨øy
 = (**Ë(
chunk2mem
(
¨øy_chunk
));

5483 
£t_size_™d_pöu£_of_öu£_chunk
(
m
, 
¨øy_chunk
, 
¨øy_chunk_size
);

5484 
	gªmaödî_size
 = 
c⁄ã¡s_size
;

5488 
	gi
 = 0; ; ++i) {

5489 
	gm¨øy
[
i
] = 
chunk2mem
(
p
);

5490 i‡(
	gi
 !
n_ñemíts
-1) {

5491 i‡(
ñemít_size
 != 0)

5492 
size
 = 
ñemít_size
;

5494 
	gsize
 = 
ªque°2size
(
sizes
[
i
]);

5495 
	gªmaödî_size
 -
size
;

5496 
£t_size_™d_pöu£_of_öu£_chunk
(
m
, 
p
, 
size
);

5497 
	gp
 = 
chunk_∂us_off£t
(
p
, 
size
);

5500 
£t_size_™d_pöu£_of_öu£_chunk
(
m
, 
p
, 
ªmaödî_size
);

5505 #i‡
DEBUG


5506 i‡(
	gm¨øy
 !
chunks
) {

5508 i‡(
ñemít_size
 != 0) {

5509 
as£π
(
ªmaödî_size
 =
ñemít_size
);

5512 
as£π
(
ªmaödî_size
 =
ªque°2size
(
sizes
[
i
]));

5514 
check_öu£_chunk
(
m
, 
mem2chunk
(
m¨øy
));

5516 
	gi
 = 0; i !
n_ñemíts
; ++i)

5517 
check_öu£_chunk
(
m
, 
mem2chunk
(
m¨øy
[
i
]));

5521 
POSTACTION
(
m
);

5522  
	gm¨øy
;

5532 
size_t
 
öã∫Æ_bulk_‰ì
(
m°©e
 
m
, * 
¨øy
[], size_à
√Àm
) {

5533 
size_t
 
	gun‰ìd
 = 0;

5534 i‡(!
PREACTION
(
m
)) {

5535 ** 
	ga
;

5536 ** 
	g„n˚
 = &(
¨øy
[
√Àm
]);

5537 
	ga
 = 
¨øy
;á !
„n˚
; ++a) {

5538 * 
	gmem
 = *
a
;

5539 i‡(
	gmem
 != 0) {

5540 
mchunk±r
 
p
 = 
mem2chunk
(
mem
);

5541 
size_t
 
	gpsize
 = 
chunksize
(
p
);

5542 #i‡
FOOTERS


5543 i‡(
gë_m°©e_f‹
(
p
Ë!
m
) {

5544 ++
un‰ìd
;

5548 
check_öu£_chunk
(
m
, 
p
);

5549 *
	ga
 = 0;

5550 i‡(
RTCHECK
(
ok_addªss
(
m
, 
p
Ë&& 
ok_öu£
(p))) {

5551 ** 
	gb
 = 
a
 + 1;

5552 
mchunk±r
 
	g√xt
 = 
√xt_chunk
(
p
);

5553 i‡(
	gb
 !
„n˚
 && *
b
 =
chunk2mem
(
√xt
)) {

5554 
size_t
 
√wsize
 = 
chunksize
(
√xt
Ë+ 
psize
;

5555 
£t_öu£
(
m
, 
p
, 
√wsize
);

5556 *
	gb
 = 
chunk2mem
(
p
);

5559 
di•o£_chunk
(
m
, 
p
, 
psize
);

5562 
CORRUPTION_ERROR_ACTION
(
m
);

5567 i‡(
should_åim
(
m
, m->
t›size
))

5568 
sys_åim
(
m
, 0);

5569 
POSTACTION
(
m
);

5571  
	gun‰ìd
;

5575 #i‡
MALLOC_INSPECT_ALL


5576 
öã∫Æ_ö•e˘_Æl
(
m°©e
 
m
,

5577 (*
h™dÀr
)(*
°¨t
,

5578 *
íd
,

5579 
size_t
 
u£d_byãs
,

5580 * 
ˇŒback_¨g
),

5581 * 
¨g
) {

5582 i‡(
is_öôülized
(
m
)) {

5583 
mchunk±r
 
	gt›
 = 
m
->
t›
;

5584 
m£gmíçå
 
	gs
;

5585 
	gs
 = &
m
->
£g
; s !0; s = 
s
->
√xt
) {

5586 
mchunk±r
 
q
 = 
Æign_as_chunk
(
s
->
ba£
);

5587 
£gmít_hﬁds
(
s
, 
q
Ë&& 
	gq
->
	ghód
 !
FENCEPOST_HEAD
) {

5588 
mchunk±r
 
√xt
 = 
√xt_chunk
(
q
);

5589 
size_t
 
	gsz
 = 
chunksize
(
q
);

5590 
size_t
 
	gu£d
;

5591 * 
	g°¨t
;

5592 i‡(
is_öu£
(
q
)) {

5593 
	gu£d
 = 
sz
 - 
CHUNK_OVERHEAD
;

5594 
	g°¨t
 = 
chunk2mem
(
q
);

5597 
	gu£d
 = 0;

5598 i‡(
is_smÆl
(
sz
)) {

5599 
	g°¨t
 = (*)((*)
q
 + (
mÆloc_chunk
));

5602 
	g°¨t
 = (*)((*)
q
 + (
mÆloc_åì_chunk
));

5605 i‡(
	g°¨t
 < (*)
	g√xt
)

5606 
h™dÀr
(
°¨t
, 
√xt
, 
u£d
, 
¨g
);

5607 i‡(
	gq
 =
t›
)

5609 
	gq
 = 
√xt
;

5618 #i‡!
ONLY_MSPACES


5623 * 
d vªÆloc
(* 
ﬁdmem
, 
size_t
 
byãs
) {

5624 * 
	gmem
 = 0;

5625 i‡(
	gﬁdmem
 == 0) {

5626 
mem
 = 
d vmÆloc
(
byãs
);

5628 i‡(
	gbyãs
 >
MAX_REQUEST
) {

5629 
MALLOC_FAILURE_ACTION
;

5631 #ifde‡
REALLOC_ZERO_BYTES_FREES


5632 i‡(
	gbyãs
 == 0) {

5637 
size_t
 
nb
 = 
ªque°2size
(
byãs
);

5638 
mchunk±r
 
	gﬁdp
 = 
mem2chunk
(
ﬁdmem
);

5639 #i‡! 
FOOTERS


5640 
m°©e
 
	gm
 = 
gm
;

5642 
m°©e
 
	gm
 = 
gë_m°©e_f‹
(
ﬁdp
);

5643 i‡(!
ok_magic
(
m
)) {

5644 
USAGE_ERROR_ACTION
(
m
, 
ﬁdmem
);

5648 i‡(!
PREACTION
(
m
)) {

5649 
mchunk±r
 
	g√wp
 = 
åy_ªÆloc_chunk
(
m
, 
ﬁdp
, 
nb
, 1);

5650 
POSTACTION
(
m
);

5651 i‡(
	g√wp
 != 0) {

5652 
check_öu£_chunk
(
m
, 
√wp
);

5653 
	gmem
 = 
chunk2mem
(
√wp
);

5656 
	gmem
 = 
öã∫Æ_mÆloc
(
m
, 
byãs
);

5657 i‡(
	gmem
 != 0) {

5658 
size_t
 
oc
 = 
chunksize
(
ﬁdp
Ë- 
ovîhód_f‹
(oldp);

5659 
mem˝y
(
mem
, 
ﬁdmem
, (
oc
 < 
byãs
)? oc : bytes);

5665  
	gmem
;

5670 * 
dÃóŒoc
(* 
ﬁdmem
, 
size_t
 
byãs
) {

5671 * 
	gmem
 = 0;

5672 i‡(
	gﬁdmem
 == 0) {

5673 
mem
 = 
dlmÆloc
(
byãs
);

5675 i‡(
	gbyãs
 >
MAX_REQUEST
) {

5676 
MALLOC_FAILURE_ACTION
;

5678 #ifde‡
REALLOC_ZERO_BYTES_FREES


5679 i‡(
	gbyãs
 == 0) {

5680 
dl‰ì
(
ﬁdmem
);

5684 
size_t
 
	gnb
 = 
ªque°2size
(
byãs
);

5685 
mchunk±r
 
	gﬁdp
 = 
mem2chunk
(
ﬁdmem
);

5686 #i‡! 
FOOTERS


5687 
m°©e
 
	gm
 = 
gm
;

5689 
m°©e
 
	gm
 = 
gë_m°©e_f‹
(
ﬁdp
);

5690 i‡(!
ok_magic
(
m
)) {

5691 
USAGE_ERROR_ACTION
(
m
, 
ﬁdmem
);

5695 i‡(!
PREACTION
(
m
)) {

5696 
mchunk±r
 
	g√wp
 = 
åy_ªÆloc_chunk
(
m
, 
ﬁdp
, 
nb
, 1);

5697 
POSTACTION
(
m
);

5698 i‡(
	g√wp
 != 0) {

5699 
check_öu£_chunk
(
m
, 
√wp
);

5700 
	gmem
 = 
chunk2mem
(
√wp
);

5703 
	gmem
 = 
öã∫Æ_mÆloc
(
m
, 
byãs
);

5704 i‡(
	gmem
 != 0) {

5705 
size_t
 
oc
 = 
chunksize
(
ﬁdp
Ë- 
ovîhód_f‹
(oldp);

5706 
mem˝y
(
mem
, 
ﬁdmem
, (
oc
 < 
byãs
)? oc : bytes);

5707 
öã∫Æ_‰ì
(
m
, 
ﬁdmem
);

5712  
	gmem
;

5715 * 
dÃóŒoc_ö_∂a˚
(* 
ﬁdmem
, 
size_t
 
byãs
) {

5716 * 
	gmem
 = 0;

5717 i‡(
	gﬁdmem
 != 0) {

5718 i‡(
byãs
 >
MAX_REQUEST
) {

5719 
MALLOC_FAILURE_ACTION
;

5722 
size_t
 
	gnb
 = 
ªque°2size
(
byãs
);

5723 
mchunk±r
 
	gﬁdp
 = 
mem2chunk
(
ﬁdmem
);

5724 #i‡! 
FOOTERS


5725 
m°©e
 
	gm
 = 
gm
;

5727 
m°©e
 
	gm
 = 
gë_m°©e_f‹
(
ﬁdp
);

5728 i‡(!
ok_magic
(
m
)) {

5729 
USAGE_ERROR_ACTION
(
m
, 
ﬁdmem
);

5733 i‡(!
PREACTION
(
m
)) {

5734 
mchunk±r
 
	g√wp
 = 
åy_ªÆloc_chunk
(
m
, 
ﬁdp
, 
nb
, 0);

5735 
POSTACTION
(
m
);

5736 i‡(
	g√wp
 =
ﬁdp
) {

5737 
check_öu£_chunk
(
m
, 
√wp
);

5738 
	gmem
 = 
ﬁdmem
;

5743  
	gmem
;

5746 * 
dlmemÆign
(
size_t
 
Æignmít
, size_à
byãs
) {

5747 i‡(
	gÆignmít
 <
MALLOC_ALIGNMENT
) {

5748  
dlmÆloc
(
byãs
);

5750  
öã∫Æ_memÆign
(
gm
, 
Æignmít
, 
byãs
);

5753 
dÕosix_memÆign
(** 
µ
, 
size_t
 
Æignmít
, size_à
byãs
) {

5754 * 
	gmem
 = 0;

5755 i‡(
	gÆignmít
 =
MALLOC_ALIGNMENT
)

5756 
mem
 = 
dlmÆloc
(
byãs
);

5758 
size_t
 
	gd
 = 
Æignmít
 / (*);

5759 
size_t
 
	gr
 = 
Æignmít
 % (*);

5760 i‡(
	gr
 !0 || 
d
 =0 || (d & (d-
SIZE_T_ONE
)) != 0)

5761  
EINVAL
;

5762 i‡(
	gbyãs
 >
MAX_REQUEST
 - 
Æignmít
) {

5763 i‡(
Æignmít
 < 
MIN_CHUNK_SIZE
)

5764 
Æignmít
 = 
MIN_CHUNK_SIZE
;

5765 
	gmem
 = 
öã∫Æ_memÆign
(
gm
, 
Æignmít
, 
byãs
);

5768 i‡(
	gmem
 == 0)

5769  
ENOMEM
;

5771 *
	gµ
 = 
mem
;

5776 * 
dlvÆloc
(
size_t
 
byãs
) {

5777 
size_t
 
	g∑gesz
;

5779 
ísuª_öôüliz©i⁄
();

5780 
	g∑gesz
 = 
m∑øms
.
∑ge_size
;

5781  
dlmemÆign
(
∑gesz
, 
byãs
);

5784 * 
dÕvÆloc
(
size_t
 
byãs
) {

5785 
size_t
 
	g∑gesz
;

5786 
ísuª_öôüliz©i⁄
();

5787 
	g∑gesz
 = 
m∑øms
.
∑ge_size
;

5788  
dlmemÆign
(
∑gesz
, (
byãs
 +Öagesz - 
SIZE_T_ONE
) & ~(pagesz - SIZE_T_ONE));

5791 ** 
dlödïídít_ˇŒoc
(
size_t
 
n_ñemíts
, size_à
ñem_size
,

5792 * 
chunks
[]) {

5793 
size_t
 
	gsz
 = 
ñem_size
;

5794  
üŒoc
(
gm
, 
n_ñemíts
, &
sz
, 3, 
chunks
);

5797 ** 
dlödïídít_comÆloc
(
size_t
 
n_ñemíts
, size_à
sizes
[],

5798 * 
chunks
[]) {

5799  
üŒoc
(
gm
, 
n_ñemíts
, 
sizes
, 0, 
chunks
);

5802 
size_t
 
dlbulk_‰ì
(* 
¨øy
[], size_à
√Àm
) {

5803  
öã∫Æ_bulk_‰ì
(
gm
, 
¨øy
, 
√Àm
);

5806 #i‡
MALLOC_INSPECT_ALL


5807 
dlmÆloc_ö•e˘_Æl
((*
h™dÀr
)(*
°¨t
,

5808 *
íd
,

5809 
size_t
 
u£d_byãs
,

5810 * 
ˇŒback_¨g
),

5811 * 
¨g
) {

5812 
ísuª_öôüliz©i⁄
();

5813 i‡(!
PREACTION
(
gm
)) {

5814 
öã∫Æ_ö•e˘_Æl
(
gm
, 
h™dÀr
, 
¨g
);

5815 
POSTACTION
(
gm
);

5820 
dlmÆloc_åim
(
size_t
 
∑d
) {

5821 
	gªsu…
 = 0;

5822 
ísuª_öôüliz©i⁄
();

5823 i‡(!
PREACTION
(
gm
)) {

5824 
	gªsu…
 = 
sys_åim
(
gm
, 
∑d
);

5825 
POSTACTION
(
gm
);

5827  
	gªsu…
;

5830 
size_t
 
dlmÆloc_foŸ¥öt
() {

5831  
	ggm
->
	gfoŸ¥öt
;

5834 
size_t
 
dlmÆloc_max_foŸ¥öt
() {

5835  
	ggm
->
	gmax_foŸ¥öt
;

5838 
size_t
 
dlmÆloc_foŸ¥öt_limô
() {

5839 
size_t
 
	gmaf
 = 
gm
->
foŸ¥öt_limô
;

5840  
	gmaf
 =0 ? 
MAX_SIZE_T
 : 
maf
;

5843 
size_t
 
dlmÆloc_£t_foŸ¥öt_limô
(size_à
byãs
) {

5844 
size_t
 
	gªsu…
;

5845 i‡(
	gbyãs
 == 0)

5846 
ªsu…
 = 
gønuœrôy_Æign
(1);

5847 i‡(
	gbyãs
 =
MAX_SIZE_T
)

5848 
ªsu…
 = 0;

5850 
	gªsu…
 = 
gønuœrôy_Æign
(
byãs
);

5851  
	ggm
->
	gfoŸ¥öt_limô
 = 
ªsu…
;

5854 #i‡!
NO_MALLINFO


5855 
mÆlöfo
 
dlmÆlöfo
() {

5856  
öã∫Æ_mÆlöfo
(
gm
);

5860 #i‡!
NO_MALLOC_STATS


5861 
dlmÆloc_°©s
() {

5862 
öã∫Æ_mÆloc_°©s
(
gm
);

5866 
dlmÆl›t
(
∑øm_numbî
, 
vÆue
) {

5867  
ch™ge_m∑øm
(
∑øm_numbî
, 
vÆue
);

5870 
size_t
 
dlmÆloc_ußbÀ_size
(* 
mem
) {

5871 i‡(
	gmem
 != 0) {

5872 
mchunk±r
 
p
 = 
mem2chunk
(
mem
);

5873 i‡(
is_öu£
(
p
))

5874  
chunksize
(
p
Ë- 
ovîhód_f‹
(p);

5883 #i‡
MSPACES


5885 
m°©e
 
öô_u£r_m°©e
(* 
tba£
, 
size_t
 
tsize
) {

5886 
size_t
 
	gmsize
 = 
∑d_ªque°
((
mÆloc_°©e
));

5887 
mchunk±r
 
	gmn
;

5888 
mchunk±r
 
	gm•
 = 
Æign_as_chunk
(
tba£
);

5889 
m°©e
 
	gm
 = (m°©e)(
chunk2mem
(
m•
));

5890 
mem£t
(
m
, 0, 
msize
);

5891 ()
INITIAL_LOCK
(&
m
->
muãx
);

5892 
	gm•
->
	ghód
 = (
msize
|
INUSE_BITS
);

5893 
	gm
->
	g£g
.
	gba£
 = 
m
->
Àa°_addr
 = 
tba£
;

5894 
	gm
->
	g£g
.
	gsize
 = 
m
->
foŸ¥öt
 = m->
max_foŸ¥öt
 = 
tsize
;

5895 
	gm
->
	gmagic
 = 
m∑øms
.
magic
;

5896 
	gm
->
	gªÀa£_checks
 = 
MAX_RELEASE_CHECK_RATE
;

5897 
	gm
->
	gmÊags
 = 
m∑øms
.
deÁu…_mÊags
;

5898 
	gm
->
	gexç
 = 0;

5899 
	gm
->
	gexts
 = 0;

5900 
dißbÀ_c⁄tiguous
(
m
);

5901 
öô_bös
(
m
);

5902 
	gmn
 = 
√xt_chunk
(
mem2chunk
(
m
));

5903 
öô_t›
(
m
, 
mn
, (
size_t
)((
tba£
 + 
tsize
Ë- (*)mnË- 
TOP_FOOT_SIZE
);

5904 
check_t›_chunk
(
m
, m->
t›
);

5905  
	gm
;

5908 
m•a˚
 
¸óã_m•a˚
(
size_t
 
ˇ∑côy
, 
locked
) {

5909 
m°©e
 
	gm
 = 0;

5910 
size_t
 
	gmsize
;

5911 
ísuª_öôüliz©i⁄
();

5912 
	gmsize
 = 
∑d_ªque°
((
mÆloc_°©e
));

5913 i‡(
	gˇ∑côy
 < (
	gsize_t
Ë-(
	gmsize
 + 
	gTOP_FOOT_SIZE
 + 
	gm∑øms
.
	g∑ge_size
)) {

5914 
size_t
 
	grs
 = ((
ˇ∑côy
 =0)? 
m∑øms
.
gønuœrôy
 :

5915 (
ˇ∑côy
 + 
TOP_FOOT_SIZE
 + 
msize
));

5916 
size_t
 
	gtsize
 = 
gønuœrôy_Æign
(
rs
);

5917 * 
	gtba£
 = (*)(
CALL_MMAP
(
tsize
));

5918 i‡(
	gtba£
 !
CMFAIL
) {

5919 
m
 = 
öô_u£r_m°©e
(
tba£
, 
tsize
);

5920 
	gm
->
	g£g
.
	gsÊags
 = 
USE_MMAP_BIT
;

5921 
£t_lock
(
m
, 
locked
);

5924  (
	gm•a˚
)
	gm
;

5927 
m•a˚
 
¸óã_m•a˚_wôh_ba£
(* 
ba£
, 
size_t
 
ˇ∑côy
, 
locked
) {

5928 
m°©e
 
	gm
 = 0;

5929 
size_t
 
	gmsize
;

5930 
ísuª_öôüliz©i⁄
();

5931 
	gmsize
 = 
∑d_ªque°
((
mÆloc_°©e
));

5932 i‡(
	gˇ∑côy
 > 
	gmsize
 + 
	gTOP_FOOT_SIZE
 &&

5933 
	gˇ∑côy
 < (
	gsize_t
Ë-(
	gmsize
 + 
	gTOP_FOOT_SIZE
 + 
	gm∑øms
.
	g∑ge_size
)) {

5934 
	gm
 = 
öô_u£r_m°©e
((*)
ba£
, 
ˇ∑côy
);

5935 
	gm
->
	g£g
.
	gsÊags
 = 
EXTERN_BIT
;

5936 
£t_lock
(
m
, 
locked
);

5938  (
	gm•a˚
)
	gm
;

5941 
m•a˚_åack_œrge_chunks
(
m•a˚
 
m•
, 
íabÀ
) {

5942 
	gªt
 = 0;

5943 
m°©e
 
	gms
 = (m°©e)
m•
;

5944 i‡(!
PREACTION
(
ms
)) {

5945 i‡(!
u£_mm≠
(
ms
))

5946 
	gªt
 = 1;

5947 i‡(!
	gíabÀ
)

5948 
íabÀ_mm≠
(
ms
);

5950 
dißbÀ_mm≠
(
ms
);

5951 
POSTACTION
(
ms
);

5953  
	gªt
;

5956 
size_t
 
de°roy_m•a˚
(
m•a˚
 
m•
) {

5957 
size_t
 
	g‰ìd
 = 0;

5958 
m°©e
 
	gms
 = (m°©e)
m•
;

5959 i‡(
ok_magic
(
ms
)) {

5960 
m£gmíçå
 
	g•
 = &
ms
->
£g
;

5961 ()
DESTROY_LOCK
(&
ms
->
muãx
);

5962 
	g•
 != 0) {

5963 * 
ba£
 = 
•
->base;

5964 
size_t
 
	gsize
 = 
•
->
size
;

5965 
Êag_t
 
	gÊag
 = 
•
->
sÊags
;

5966 
	g•
 = 
•
->
√xt
;

5967 i‡((
	gÊag
 & 
	gUSE_MMAP_BIT
Ë&& !(Êag & 
	gEXTERN_BIT
) &&

5968 
CALL_MUNMAP
(
ba£
, 
size
) == 0)

5969 
‰ìd
 +
size
;

5973 
USAGE_ERROR_ACTION
(
ms
,ms);

5975  
	g‰ìd
;

5983 * 
m•a˚_mÆloc
(
m•a˚
 
m•
, 
size_t
 
byãs
) {

5984 
m°©e
 
	gms
 = (m°©e)
m•
;

5985 i‡(!
ok_magic
(
ms
)) {

5986 
USAGE_ERROR_ACTION
(
ms
,ms);

5989 i‡(!
PREACTION
(
ms
)) {

5990 * 
	gmem
;

5991 
size_t
 
	gnb
;

5992 i‡(
	gbyãs
 <
MAX_SMALL_REQUEST
) {

5993 
bödex_t
 
idx
;

5994 
böm≠_t
 
	gsmÆlbôs
;

5995 
	gnb
 = (
byãs
 < 
MIN_REQUEST
)? 
MIN_CHUNK_SIZE
 : 
∑d_ªque°
(bytes);

5996 
	gidx
 = 
smÆl_ödex
(
nb
);

5997 
	gsmÆlbôs
 = 
ms
->
smÆlm≠
 >> 
idx
;

5999 i‡((
	gsmÆlbôs
 & 0x3U) != 0) {

6000 
mchunk±r
 
b
, 
p
;

6001 
	gidx
 +~
smÆlbôs
 & 1;

6002 
	gb
 = 
smÆlbö_©
(
ms
, 
idx
);

6003 
	gp
 = 
b
->
fd
;

6004 
as£π
(
chunksize
(
p
Ë=
smÆl_ödex2size
(
idx
));

6005 
u∆ök_fú°_smÆl_chunk
(
ms
, 
b
, 
p
, 
idx
);

6006 
£t_öu£_™d_pöu£
(
ms
, 
p
, 
smÆl_ödex2size
(
idx
));

6007 
	gmem
 = 
chunk2mem
(
p
);

6008 
check_mÆlo˚d_chunk
(
ms
, 
mem
, 
nb
);

6009 
	gpo°a˘i⁄
;

6012 i‡(
	gnb
 > 
	gms
->
	gdvsize
) {

6013 i‡(
	gsmÆlbôs
 != 0) {

6014 
mchunk±r
 
b
, 
p
, 
r
;

6015 
size_t
 
	grsize
;

6016 
bödex_t
 
	gi
;

6017 
böm≠_t
 
	gÀ·bôs
 = (
smÆlbôs
 << 
idx
Ë& 
À·_bôs
(
idx2bô
(idx));

6018 
böm≠_t
 
	gÀa°bô
 = 
Àa°_bô
(
À·bôs
);

6019 
compuã_bô2idx
(
Àa°bô
, 
i
);

6020 
	gb
 = 
smÆlbö_©
(
ms
, 
i
);

6021 
	gp
 = 
b
->
fd
;

6022 
as£π
(
chunksize
(
p
Ë=
smÆl_ödex2size
(
i
));

6023 
u∆ök_fú°_smÆl_chunk
(
ms
, 
b
, 
p
, 
i
);

6024 
	grsize
 = 
smÆl_ödex2size
(
i
Ë- 
nb
;

6026 i‡(
	gSIZE_T_SIZE
 !4 && 
rsize
 < 
MIN_CHUNK_SIZE
)

6027 
£t_öu£_™d_pöu£
(
ms
, 
p
, 
smÆl_ödex2size
(
i
));

6029 
£t_size_™d_pöu£_of_öu£_chunk
(
ms
, 
p
, 
nb
);

6030 
	gr
 = 
chunk_∂us_off£t
(
p
, 
nb
);

6031 
£t_size_™d_pöu£_of_‰ì_chunk
(
r
, 
rsize
);

6032 
ª∂a˚_dv
(
ms
, 
r
, 
rsize
);

6034 
	gmem
 = 
chunk2mem
(
p
);

6035 
check_mÆlo˚d_chunk
(
ms
, 
mem
, 
nb
);

6036 
	gpo°a˘i⁄
;

6039 i‡(
	gms
->
	gåìm≠
 !0 && (
mem
 = 
tmÆloc_smÆl
(
ms
, 
nb
)) != 0) {

6040 
check_mÆlo˚d_chunk
(
ms
, 
mem
, 
nb
);

6041 
	gpo°a˘i⁄
;

6045 i‡(
	gbyãs
 >
MAX_REQUEST
)

6046 
nb
 = 
MAX_SIZE_T
;

6048 
	gnb
 = 
∑d_ªque°
(
byãs
);

6049 i‡(
	gms
->
	gåìm≠
 !0 && (
mem
 = 
tmÆloc_œrge
(
ms
, 
nb
)) != 0) {

6050 
check_mÆlo˚d_chunk
(
ms
, 
mem
, 
nb
);

6051 
	gpo°a˘i⁄
;

6055 i‡(
	gnb
 <
ms
->
dvsize
) {

6056 
size_t
 
rsize
 = 
ms
->
dvsize
 - 
nb
;

6057 
mchunk±r
 
	gp
 = 
ms
->
dv
;

6058 i‡(
	grsize
 >
MIN_CHUNK_SIZE
) {

6059 
mchunk±r
 
r
 = 
ms
->
dv
 = 
chunk_∂us_off£t
(
p
, 
nb
);

6060 
	gms
->
	gdvsize
 = 
rsize
;

6061 
£t_size_™d_pöu£_of_‰ì_chunk
(
r
, 
rsize
);

6062 
£t_size_™d_pöu£_of_öu£_chunk
(
ms
, 
p
, 
nb
);

6065 
size_t
 
	gdvs
 = 
ms
->
dvsize
;

6066 
	gms
->
	gdvsize
 = 0;

6067 
	gms
->
	gdv
 = 0;

6068 
£t_öu£_™d_pöu£
(
ms
, 
p
, 
dvs
);

6070 
	gmem
 = 
chunk2mem
(
p
);

6071 
check_mÆlo˚d_chunk
(
ms
, 
mem
, 
nb
);

6072 
	gpo°a˘i⁄
;

6075 i‡(
	gnb
 < 
	gms
->
	gt›size
) {

6076 
size_t
 
	grsize
 = 
ms
->
t›size
 -
nb
;

6077 
mchunk±r
 
	gp
 = 
ms
->
t›
;

6078 
mchunk±r
 
	gr
 = 
ms
->
t›
 = 
chunk_∂us_off£t
(
p
, 
nb
);

6079 
	gr
->
	ghód
 = 
rsize
 | 
PINUSE_BIT
;

6080 
£t_size_™d_pöu£_of_öu£_chunk
(
ms
, 
p
, 
nb
);

6081 
	gmem
 = 
chunk2mem
(
p
);

6082 
check_t›_chunk
(
ms
, ms->
t›
);

6083 
check_mÆlo˚d_chunk
(
ms
, 
mem
, 
nb
);

6084 
	gpo°a˘i⁄
;

6087 
	gmem
 = 
sys_Æloc
(
ms
, 
nb
, 
NULL
);

6089 
	gpo°a˘i⁄
:

6090 
POSTACTION
(
ms
);

6091  
	gmem
;

6097 
m•a˚_‰ì
(
m•a˚
 
m•
, * 
mem
) {

6098 i‡(
	gmem
 != 0) {

6099 
mchunk±r
 
p
 = 
mem2chunk
(
mem
);

6100 #i‡
FOOTERS


6101 
m°©e
 
	gfm
 = 
gë_m°©e_f‹
(
p
);

6102 
	gm•
 = 
m•
;

6104 
m°©e
 
	gfm
 = (m°©e)
m•
;

6106 i‡(!
ok_magic
(
fm
)) {

6107 
USAGE_ERROR_ACTION
(
fm
, 
p
);

6110 i‡(!
PREACTION
(
fm
)) {

6111 
check_öu£_chunk
(
fm
, 
p
);

6112 i‡(
RTCHECK
(
ok_addªss
(
fm
, 
p
Ë&& 
ok_öu£
(p))) {

6113 
size_t
 
	gpsize
 = 
chunksize
(
p
);

6114 
mchunk±r
 
	g√xt
 = 
chunk_∂us_off£t
(
p
, 
psize
);

6115 i‡(!
pöu£
(
p
)) {

6116 
size_t
 
	g¥evsize
 = 
p
->
¥ev_foŸ
;

6117 i‡(
is_mm≠≥d
(
p
)) {

6118 
	gpsize
 +
¥evsize
 + 
MMAP_FOOT_PAD
;

6119 i‡(
CALL_MUNMAP
((*)
p
 - 
¥evsize
, 
psize
) == 0)

6120 
fm
->
foŸ¥öt
 -
psize
;

6121 
	gpo°a˘i⁄
;

6124 
mchunk±r
 
	g¥ev
 = 
chunk_möus_off£t
(
p
, 
¥evsize
);

6125 
	gpsize
 +
¥evsize
;

6126 
	gp
 = 
¥ev
;

6127 i‡(
RTCHECK
(
ok_addªss
(
fm
, 
¥ev
))) {

6128 i‡(
	gp
 !
fm
->
dv
) {

6129 
u∆ök_chunk
(
fm
, 
p
, 
¥evsize
);

6131 i‡((
	g√xt
->
	ghód
 & 
	gINUSE_BITS
Ë=
INUSE_BITS
) {

6132 
fm
->
dvsize
 = 
psize
;

6133 
£t_‰ì_wôh_pöu£
(
p
, 
psize
, 
√xt
);

6134 
	gpo°a˘i⁄
;

6138 
	gîr‹a˘i⁄
;

6142 i‡(
RTCHECK
(
ok_√xt
(
p
, 
√xt
Ë&& 
ok_pöu£
(next))) {

6143 i‡(!
cöu£
(
√xt
)) {

6144 i‡(
	g√xt
 =
fm
->
t›
) {

6145 
size_t
 
tsize
 = 
fm
->
t›size
 +
psize
;

6146 
	gfm
->
	gt›
 = 
p
;

6147 
	gp
->
	ghód
 = 
tsize
 | 
PINUSE_BIT
;

6148 i‡(
	gp
 =
fm
->
dv
) {

6149 
fm
->
dv
 = 0;

6150 
	gfm
->
	gdvsize
 = 0;

6152 i‡(
should_åim
(
fm
, 
tsize
))

6153 
sys_åim
(
fm
, 0);

6154 
	gpo°a˘i⁄
;

6156 i‡(
	g√xt
 =
fm
->
dv
) {

6157 
size_t
 
dsize
 = 
fm
->
dvsize
 +
psize
;

6158 
	gfm
->
	gdv
 = 
p
;

6159 
£t_size_™d_pöu£_of_‰ì_chunk
(
p
, 
dsize
);

6160 
	gpo°a˘i⁄
;

6163 
size_t
 
	gnsize
 = 
chunksize
(
√xt
);

6164 
	gpsize
 +
nsize
;

6165 
u∆ök_chunk
(
fm
, 
√xt
, 
nsize
);

6166 
£t_size_™d_pöu£_of_‰ì_chunk
(
p
, 
psize
);

6167 i‡(
	gp
 =
fm
->
dv
) {

6168 
fm
->
dvsize
 = 
psize
;

6169 
	gpo°a˘i⁄
;

6174 
£t_‰ì_wôh_pöu£
(
p
, 
psize
, 
√xt
);

6176 i‡(
is_smÆl
(
psize
)) {

6177 
ö£π_smÆl_chunk
(
fm
, 
p
, 
psize
);

6178 
check_‰ì_chunk
(
fm
, 
p
);

6181 
tchunk±r
 
	gç
 = (tchunk±r)
p
;

6182 
ö£π_œrge_chunk
(
fm
, 
ç
, 
psize
);

6183 
check_‰ì_chunk
(
fm
, 
p
);

6184 i‡(--
	gfm
->
	gªÀa£_checks
 == 0)

6185 
ªÀa£_unu£d_£gmíts
(
fm
);

6187 
	gpo°a˘i⁄
;

6190 
	gîr‹a˘i⁄
:

6191 
USAGE_ERROR_ACTION
(
fm
, 
p
);

6192 
	gpo°a˘i⁄
:

6193 
POSTACTION
(
fm
);

6198 * 
m•a˚_ˇŒoc
(
m•a˚
 
m•
, 
size_t
 
n_ñemíts
, size_à
ñem_size
) {

6199 * 
	gmem
;

6200 
size_t
 
	gªq
 = 0;

6201 
m°©e
 
	gms
 = (m°©e)
m•
;

6202 i‡(!
ok_magic
(
ms
)) {

6203 
USAGE_ERROR_ACTION
(
ms
,ms);

6206 i‡(
	gn_ñemíts
 != 0) {

6207 
ªq
 = 
n_ñemíts
 * 
ñem_size
;

6208 i‡(((
	gn_ñemíts
 | 
	gñem_size
Ë& ~(
	gsize_t
)0xffff) &&

6209 (
	gªq
 / 
	gn_ñemíts
 !
ñem_size
))

6210 
ªq
 = 
MAX_SIZE_T
;

6212 
	gmem
 = 
öã∫Æ_mÆloc
(
ms
, 
ªq
);

6213 i‡(
	gmem
 !0 && 
ˇŒoc_mu°_˛ór
(
mem2chunk
(
mem
)))

6214 
mem£t
(
mem
, 0, 
ªq
);

6215  
	gmem
;

6218 * 
m•a˚_ªÆloc
(
m•a˚
 
m•
, * 
ﬁdmem
, 
size_t
 
byãs
) {

6219 * 
	gmem
 = 0;

6220 i‡(
	gﬁdmem
 == 0) {

6221 
mem
 = 
m•a˚_mÆloc
(
m•
, 
byãs
);

6223 i‡(
	gbyãs
 >
MAX_REQUEST
) {

6224 
MALLOC_FAILURE_ACTION
;

6226 #ifde‡
REALLOC_ZERO_BYTES_FREES


6227 i‡(
	gbyãs
 == 0) {

6228 
m•a˚_‰ì
(
m•
, 
ﬁdmem
);

6232 
size_t
 
	gnb
 = 
ªque°2size
(
byãs
);

6233 
mchunk±r
 
	gﬁdp
 = 
mem2chunk
(
ﬁdmem
);

6234 #i‡! 
FOOTERS


6235 
m°©e
 
	gm
 = (m°©e)
m•
;

6237 
m°©e
 
	gm
 = 
gë_m°©e_f‹
(
ﬁdp
);

6238 i‡(!
ok_magic
(
m
)) {

6239 
USAGE_ERROR_ACTION
(
m
, 
ﬁdmem
);

6243 i‡(!
PREACTION
(
m
)) {

6244 
mchunk±r
 
	g√wp
 = 
åy_ªÆloc_chunk
(
m
, 
ﬁdp
, 
nb
, 1);

6245 
POSTACTION
(
m
);

6246 i‡(
	g√wp
 != 0) {

6247 
check_öu£_chunk
(
m
, 
√wp
);

6248 
	gmem
 = 
chunk2mem
(
√wp
);

6251 
	gmem
 = 
m•a˚_mÆloc
(
m
, 
byãs
);

6252 i‡(
	gmem
 != 0) {

6253 
size_t
 
oc
 = 
chunksize
(
ﬁdp
Ë- 
ovîhód_f‹
(oldp);

6254 
mem˝y
(
mem
, 
ﬁdmem
, (
oc
 < 
byãs
)? oc : bytes);

6255 
m•a˚_‰ì
(
m
, 
ﬁdmem
);

6260  
	gmem
;

6263 * 
m•a˚_ªÆloc_ö_∂a˚
(
m•a˚
 
m•
, * 
ﬁdmem
, 
size_t
 
byãs
) {

6264 * 
	gmem
 = 0;

6265 i‡(
	gﬁdmem
 != 0) {

6266 i‡(
byãs
 >
MAX_REQUEST
) {

6267 
MALLOC_FAILURE_ACTION
;

6270 
size_t
 
	gnb
 = 
ªque°2size
(
byãs
);

6271 
mchunk±r
 
	gﬁdp
 = 
mem2chunk
(
ﬁdmem
);

6272 #i‡! 
FOOTERS


6273 
m°©e
 
	gm
 = (m°©e)
m•
;

6275 
m°©e
 
	gm
 = 
gë_m°©e_f‹
(
ﬁdp
);

6276 
	gm•
 = 
m•
;

6277 i‡(!
ok_magic
(
m
)) {

6278 
USAGE_ERROR_ACTION
(
m
, 
ﬁdmem
);

6282 i‡(!
PREACTION
(
m
)) {

6283 
mchunk±r
 
	g√wp
 = 
åy_ªÆloc_chunk
(
m
, 
ﬁdp
, 
nb
, 0);

6284 
POSTACTION
(
m
);

6285 i‡(
	g√wp
 =
ﬁdp
) {

6286 
check_öu£_chunk
(
m
, 
√wp
);

6287 
	gmem
 = 
ﬁdmem
;

6292  
	gmem
;

6295 * 
m•a˚_memÆign
(
m•a˚
 
m•
, 
size_t
 
Æignmít
, size_à
byãs
) {

6296 
m°©e
 
	gms
 = (m°©e)
m•
;

6297 i‡(!
ok_magic
(
ms
)) {

6298 
USAGE_ERROR_ACTION
(
ms
,ms);

6301 i‡(
	gÆignmít
 <
MALLOC_ALIGNMENT
)

6302  
m•a˚_mÆloc
(
m•
, 
byãs
);

6303  
öã∫Æ_memÆign
(
ms
, 
Æignmít
, 
byãs
);

6306 ** 
m•a˚_ödïídít_ˇŒoc
(
m•a˚
 
m•
, 
size_t
 
n_ñemíts
,

6307 
size_t
 
ñem_size
, * 
chunks
[]) {

6308 
size_t
 
	gsz
 = 
ñem_size
;

6309 
m°©e
 
	gms
 = (m°©e)
m•
;

6310 i‡(!
ok_magic
(
ms
)) {

6311 
USAGE_ERROR_ACTION
(
ms
,ms);

6314  
üŒoc
(
ms
, 
n_ñemíts
, &
sz
, 3, 
chunks
);

6317 ** 
m•a˚_ödïídít_comÆloc
(
m•a˚
 
m•
, 
size_t
 
n_ñemíts
,

6318 
size_t
 
sizes
[], * 
chunks
[]) {

6319 
m°©e
 
	gms
 = (m°©e)
m•
;

6320 i‡(!
ok_magic
(
ms
)) {

6321 
USAGE_ERROR_ACTION
(
ms
,ms);

6324  
üŒoc
(
ms
, 
n_ñemíts
, 
sizes
, 0, 
chunks
);

6327 
size_t
 
m•a˚_bulk_‰ì
(
m•a˚
 
m•
, * 
¨øy
[], size_à
√Àm
) {

6328  
öã∫Æ_bulk_‰ì
((
m°©e
)
m•
, 
¨øy
, 
√Àm
);

6331 #i‡
MALLOC_INSPECT_ALL


6332 
m•a˚_ö•e˘_Æl
(
m•a˚
 
m•
,

6333 (*
h™dÀr
)(*
°¨t
,

6334 *
íd
,

6335 
size_t
 
u£d_byãs
,

6336 * 
ˇŒback_¨g
),

6337 * 
¨g
) {

6338 
m°©e
 
	gms
 = (m°©e)
m•
;

6339 i‡(
ok_magic
(
ms
)) {

6340 i‡(!
PREACTION
(
ms
)) {

6341 
öã∫Æ_ö•e˘_Æl
(
ms
, 
h™dÀr
, 
¨g
);

6342 
POSTACTION
(
ms
);

6346 
USAGE_ERROR_ACTION
(
ms
,ms);

6351 
m•a˚_åim
(
m•a˚
 
m•
, 
size_t
 
∑d
) {

6352 
	gªsu…
 = 0;

6353 
m°©e
 
	gms
 = (m°©e)
m•
;

6354 i‡(
ok_magic
(
ms
)) {

6355 i‡(!
PREACTION
(
ms
)) {

6356 
	gªsu…
 = 
sys_åim
(
ms
, 
∑d
);

6357 
POSTACTION
(
ms
);

6361 
USAGE_ERROR_ACTION
(
ms
,ms);

6363  
	gªsu…
;

6366 #i‡!
NO_MALLOC_STATS


6367 
m•a˚_mÆloc_°©s
(
m•a˚
 
m•
) {

6368 
m°©e
 
	gms
 = (m°©e)
m•
;

6369 i‡(
ok_magic
(
ms
)) {

6370 
öã∫Æ_mÆloc_°©s
(
ms
);

6373 
USAGE_ERROR_ACTION
(
ms
,ms);

6378 
size_t
 
m•a˚_foŸ¥öt
(
m•a˚
 
m•
) {

6379 
size_t
 
	gªsu…
 = 0;

6380 
m°©e
 
	gms
 = (m°©e)
m•
;

6381 i‡(
ok_magic
(
ms
)) {

6382 
	gªsu…
 = 
ms
->
foŸ¥öt
;

6385 
USAGE_ERROR_ACTION
(
ms
,ms);

6387  
	gªsu…
;

6390 
size_t
 
m•a˚_max_foŸ¥öt
(
m•a˚
 
m•
) {

6391 
size_t
 
	gªsu…
 = 0;

6392 
m°©e
 
	gms
 = (m°©e)
m•
;

6393 i‡(
ok_magic
(
ms
)) {

6394 
	gªsu…
 = 
ms
->
max_foŸ¥öt
;

6397 
USAGE_ERROR_ACTION
(
ms
,ms);

6399  
	gªsu…
;

6402 
size_t
 
m•a˚_foŸ¥öt_limô
(
m•a˚
 
m•
) {

6403 
size_t
 
	gªsu…
 = 0;

6404 
m°©e
 
	gms
 = (m°©e)
m•
;

6405 i‡(
ok_magic
(
ms
)) {

6406 
size_t
 
	gmaf
 = 
ms
->
foŸ¥öt_limô
;

6407 
	gªsu…
 = (
maf
 =0Ë? 
MAX_SIZE_T
 : maf;

6410 
USAGE_ERROR_ACTION
(
ms
,ms);

6412  
	gªsu…
;

6415 
size_t
 
m•a˚_£t_foŸ¥öt_limô
(
m•a˚
 
m•
, size_à
byãs
) {

6416 
size_t
 
	gªsu…
 = 0;

6417 
m°©e
 
	gms
 = (m°©e)
m•
;

6418 i‡(
ok_magic
(
ms
)) {

6419 i‡(
	gbyãs
 == 0)

6420 
ªsu…
 = 
gønuœrôy_Æign
(1);

6421 i‡(
	gbyãs
 =
MAX_SIZE_T
)

6422 
ªsu…
 = 0;

6424 
	gªsu…
 = 
gønuœrôy_Æign
(
byãs
);

6425 
	gms
->
	gfoŸ¥öt_limô
 = 
ªsu…
;

6428 
USAGE_ERROR_ACTION
(
ms
,ms);

6430  
	gªsu…
;

6433 #i‡!
NO_MALLINFO


6434 
mÆlöfo
 
m•a˚_mÆlöfo
(
m•a˚
 
m•
) {

6435 
m°©e
 
	gms
 = (m°©e)
m•
;

6436 i‡(!
ok_magic
(
ms
)) {

6437 
USAGE_ERROR_ACTION
(
ms
,ms);

6439  
öã∫Æ_mÆlöfo
(
ms
);

6443 
size_t
 
m•a˚_ußbÀ_size
(* 
mem
) {

6444 i‡(
	gmem
 != 0) {

6445 
mchunk±r
 
p
 = 
mem2chunk
(
mem
);

6446 i‡(
is_öu£
(
p
))

6447  
chunksize
(
p
Ë- 
ovîhód_f‹
(p);

6452 
m•a˚_mÆl›t
(
∑øm_numbî
, 
vÆue
) {

6453  
ch™ge_m∑øm
(
∑øm_numbî
, 
vÆue
);

	@oswego_malloc.h

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

4 #ifde‡
__˝lu•lus


8 *
nv_mÆloc
(
size_t
);

9 *
nv_ªÆloc
(*, 
size_t
);

10 *
nv_ˇŒoc
(
size_t
, size_t);

11 *
≤v_mÆloc
(
size_t
 , 
rq°_°ru˘
 *);

12 *
≤v_ªad
(
size_t
 
byãs
, 
rq°_°ru˘
 *
rq°
);

13 #ifde‡
__˝lu•lus


	@pepper.c

3 
	~<î∫o.h
>

4 
	~<±hªad.h
>

5 
	~<°d¨g.h
>

6 
	~<°dio.h
>

7 
	~<°dlib.h
>

8 
	~<°rög.h
>

10 
	~"µ≠i/c/µ_com∂ëi⁄_ˇŒback.h
"

11 
	~"µ≠i/c/µ_îr‹s.h
"

12 
	~"µ≠i/c/µ_moduÀ.h
"

13 
	~"µ≠i/c/µ_v¨.h
"

14 
	~"µ≠i/c/µb.h
"

15 
	~"µ≠i/c/µb_c‹e.h
"

16 
	~"µ≠i/c/µb_ö°™˚.h
"

17 
	~"µ≠i/c/µb_mesßgög.h
"

18 
	~"µ≠i/c/µb_v¨.h
"

19 
	~"µ≠i/c/µp.h
"

20 
	~"µ≠i/c/µp_ö°™˚.h
"

21 
	~"µ≠i/c/µp_mesßgög.h
"

23 
	~"bích-‰amew‹k.h
"

25 
	sMesßgeInfo
 {

26 
PP_In°™˚
 
	mö°™˚
;

27 
PP_V¨
 
	mmesßge
;

30 c⁄° * c⁄° 
	gkRunBíchm¨ksMëhodId
 = "runBenchmarks";

31 c⁄° 
	gkMesßgeArgumítSï¨©‹
 = ':';

32 c⁄° 
	gkNuŒTîmö©‹
 = '\0';

33 c⁄° 
	gkMaxMesßgeSize
 = 512;

35 
PPB_Mesßgög
* 
	gµb_mesßgög_öãrÁ˚
 = 
NULL
;

36 
PPB_V¨
* 
	gµb_v¨_öãrÁ˚
 = 
NULL
;

37 
PPB_C‹e
* 
	gµb_c‹e_öãrÁ˚
 = 
NULL
;

38 
PP_ModuÀ
 
	gmoduÀ_id
 = 0;

40 
PP_In°™˚
 
	gmy_ö°™˚
;

42 
SídSåögMesßge
(c⁄° *
f‹m©
, ...);

43 
SídSåögMesßgeOnMaöThªad
(*
°r
);

44 
Rï‹tSètus
(c⁄° *
f‹m©
, ...);

45 
f‹k_thªad
(
bíchm¨k_size_t
);

46 
±hªad_muãx_t
 
	grun_muãx
 = 
PTHREAD_MUTEX_INITIALIZER
;

58 * 
	$V¨ToCSå
(
PP_V¨
 
v¨
) {

59 
uöt32_t
 
Àn
 = 0;

60 i‡(
µb_v¨_öãrÁ˚
 !
NULL
) {

61 c⁄° * 
v¨_c_°r
 = 
µb_v¨_öãrÁ˚
->
	`V¨ToUtf8
(
v¨
, &
Àn
);

62 i‡(
Àn
 > 0) {

63 * 
c_°r
 = (*)
	`mÆloc
(
Àn
 + 1);

64 
	`mem˝y
(
c_°r
, 
v¨_c_°r
, 
Àn
);

65 
c_°r
[
Àn
] = 
kNuŒTîmö©‹
;

66  
c_°r
;

69  
NULL
;

70 
	}
}

79 
PP_V¨
 
	$CSåToV¨
(c⁄° * 
°r
) {

80 i‡(
µb_v¨_öãrÁ˚
 !
NULL
) {

81  
µb_v¨_öãrÁ˚
->
	`V¨FromUtf8
(
moduÀ_id
, 
°r
, 
	`°æí
(str));

83  
	`PP_MakeUndeföed
();

84 
	}
}

109 
PP_Boﬁ
 
	$In°™˚_DidCª©e
(
PP_In°™˚
 
ö°™˚
,

110 
uöt32_t
 
¨gc
,

111 c⁄° * 
¨gn
[],

112 c⁄° * 
¨gv
[]) {

113 
my_ö°™˚
 = 
ö°™˚
;

114  
PP_TRUE
;

115 
	}
}

124 
	$In°™˚_DidDe°roy
(
PP_In°™˚
 
ö°™˚
) {

125 
	}
}

139 
	$In°™˚_DidCh™geVõw
(
PP_In°™˚
 
ö°™˚
,

140 c⁄° 
PP_Re˘
* 
posôi⁄
,

141 c⁄° 
PP_Re˘
* 
˛ù
) {

142 
	}
}

161 
	$In°™˚_DidCh™geFocus
(
PP_In°™˚
 
ö°™˚
,

162 
PP_Boﬁ
 
has_focus
) {

163 
	}
}

175 
PP_Boﬁ
 
	$In°™˚_H™dÀDocumítLﬂd
(
PP_In°™˚
 
ö°™˚
,

176 
PP_Resour˚
 
uæ_lﬂdî
) {

178  
PP_FALSE
;

179 
	}
}

189 
	$Mesßgög_H™dÀMesßge
(
PP_In°™˚
 
ö°™˚
, 
PP_V¨
 
v¨_mesßge
) {

190 i‡(
v¨_mesßge
.
ty≥
 !
PP_VARTYPE_STRING
) {

194 * 
mesßge
 = 
	`V¨ToCSå
(
v¨_mesßge
);

195 i‡(
mesßge
 =
NULL
)

197 i‡(
	`°∫cmp
(
mesßge
,

198 
kRunBíchm¨ksMëhodId
,

199 
	`°æí
(
kRunBíchm¨ksMëhodId
)) == 0) {

200 
bíchm¨k_size_t
 
bích_size
 = 
kBíchm¨kSmÆl
;

201 i‡(
	`°∫cmp
(
mesßge
 + 
	`°æí
(
kRunBíchm¨ksMëhodId
) + 1,

203 
	`°æí
("large")) == 0) {

204 
bích_size
 = 
kBíchm¨kL¨ge
;

209 
	`SídSåögMesßgeOnMaöThªad
(
	`°rdup
("Starting..."));

210 
	`f‹k_thªad
(
bích_size
);

212 
	`‰ì
(
mesßge
);

213 
	}
}

222 
PP_EXPORT
 
öt32_t
 
	$PPP_InôülizeModuÀ
(
PP_ModuÀ
 
a_moduÀ_id
,

223 
PPB_GëI¡îÁ˚
 
gë_brow£r
) {

224 
moduÀ_id
 = 
a_moduÀ_id
;

225 
µb_mesßgög_öãrÁ˚
 =

226 (
PPB_Mesßgög
*)(
	`gë_brow£r
(
PPB_MESSAGING_INTERFACE
));

227 
µb_v¨_öãrÁ˚
 = (
PPB_V¨
*)(
	`gë_brow£r
(
PPB_VAR_INTERFACE
));

228 
µb_c‹e_öãrÁ˚
 = (
PPB_C‹e
*)(
	`gë_brow£r
(
PPB_CORE_INTERFACE
));

230  
PP_OK
;

231 
	}
}

239 
PP_EXPORT
 c⁄° * 
	$PPP_GëI¡îÁ˚
(c⁄° * 
öãrÁ˚_«me
) {

240 i‡(
	`°rcmp
(
öãrÁ˚_«me
, 
PPP_INSTANCE_INTERFACE
) == 0) {

241 
PPP_In°™˚
 
ö°™˚_öãrÁ˚
 = {

242 &
In°™˚_DidCª©e
,

243 &
In°™˚_DidDe°roy
,

244 &
In°™˚_DidCh™geVõw
,

245 &
In°™˚_DidCh™geFocus
,

246 &
In°™˚_H™dÀDocumítLﬂd
,

248  &
ö°™˚_öãrÁ˚
;

249 } i‡(
	`°rcmp
(
öãrÁ˚_«me
, 
PPP_MESSAGING_INTERFACE
) == 0) {

250 
PPP_Mesßgög
 
mesßgög_öãrÁ˚
 = {

251 &
Mesßgög_H™dÀMesßge


253  &
mesßgög_öãrÁ˚
;

255  
NULL
;

256 
	}
}

261 
PP_EXPORT
 
	$PPP_ShutdownModuÀ
() {

262 
	}
}

264 
	$SídSåögMesßge
(c⁄° *
f‹m©
, ...) {

265 
va_li°
 
≠
;

266 
°r
[
kMaxMesßgeSize
];

267 
	`va_°¨t
(
≠
, 
f‹m©
);

268 
	`v¢¥ötf
(
°r
, 
kMaxMesßgeSize
, 
f‹m©
, 
≠
);

269 
	`va_íd
(
≠
);

270 
PP_V¨
 
v¨_msg
 = 
	`CSåToV¨
(
°r
);

271 
µb_mesßgög_öãrÁ˚
->
	`Po°Mesßge
(
my_ö°™˚
, 
v¨_msg
);

272 
µb_v¨_öãrÁ˚
->
	`Rñó£
(
v¨_msg
);

273 
	}
}

275 
	$PPSídSåögCÆlback
(*
u£r_d©a
, 
ªsu…
) {

276 i‡(
ªsu…
 < 0Ë
	`¥ötf
("PPSSCBÑesult %d\n",Ñesult);

277 
	`SídSåögMesßge
(
u£r_d©a
);

278 
	`‰ì
(
u£r_d©a
);

279 
	}
}

283 
	$SídSåögMesßgeOnMaöThªad
(*
°r
) {

284 
PP_Com∂ëi⁄CÆlback
 
cb
;

285 
cb
 = 
	`PP_MakeCom∂ëi⁄CÆlback
(
PPSídSåögCÆlback
, 
°r
);

286 
µb_c‹e_öãrÁ˚
->
	`CÆlOnMaöThªad
(0, 
cb
, 0);

287 
	}
}

289 
	sthªad_öfo
 {

290 
bíchm¨k_size_t
 
	mbích_size
;

291 } 
	tthªad_öfo_t
;

293 *
	$bích_thªad
(*
p
) {

294 if(
	`±hªad_muãx_åylock
(&
run_muãx
) != 0) {

295 
	`Rï‹tSètus
("BenchmarksálreadyÑunning");

296  
NULL
;

298 
thªad_öfo_t
 *
ti
 = (thªad_öfo_à*)
p
;

299 
	`Rï‹tSètus
("Started %s benchmarkÅhread...",

300 
ti
->
bích_size
 =
kBíchm¨kSmÆl
 ? "small" : "large");

302 
sc‹e
 = 
	`‰amew‹k_maö
(
ti
->
bích_size
);

303 
	`Rï‹tSètus
("Sc‹e: %d", 
sc‹e
);

304 
	`±hªad_muãx_u∆ock
(&
run_muãx
);

306 
	`‰ì
(
ti
);

307  
NULL
;

308 
	}
}

310 
	$f‹k_thªad
(
bíchm¨k_size_t
 
size
) {

311 
±hªad_t
 
th
;

312 
î
;

313 
thªad_öfo_t
 *
ti
 = 
	`mÆloc
((thread_info_t));

314 
ti
->
bích_size
 = 
size
;

315 if(
î
 = 
	`±hªad_¸óã
(&
th
, 
NULL
, 
bích_thªad
, 
ti
)) {

316 
	`Rï‹tSètus
("±hªad_¸óã faûed!ÑëvÆ %d, %s", 
î
, 
	`°ªº‹
(er));

317 
	`ab‹t
();

320 
	}
}

322 
	$Rï‹tSètus
(c⁄° *
f‹m©
, ...) {

323 
va_li°
 
≠
;

324 *
°r
 = 
	`mÆloc
(
kMaxMesßgeSize
);

326 
	`va_°¨t
(
≠
, 
f‹m©
);

328 
	`v¢¥ötf
(
°r
, 
kMaxMesßgeSize
, 
f‹m©
, 
≠
);

329 
	`va_íd
(
≠
);

330 i‡(!
µb_c‹e_öãrÁ˚
->
	`IsMaöThªad
()) {

331 
	`SídSåögMesßgeOnMaöThªad
(
°r
);

333 
	`SídSåögMesßge
(
°r
);

334 
	`‰ì
(
°r
);

336 
	}
}

	@pidigits.c

8 
	~<°dio.h
>

9 
	~<°dlib.h
>

10 
	~<°rög.h
>

11 
	~<gmp.h
>

12 
	~"bích-‰amew‹k.h
"

14 
mpz_t
 
	gnumî
, 
	gaccum
, 
	gdíom
, 
	gtmp1
, 
	gtmp2
;

16 
	$exåa˘_digô
()

18 i‡(
	`mpz_cmp
(
numî
, 
accum
) > 0)

22 
	`mpz_mul_2exp
(
tmp1
, 
numî
, 1);

23 
	`mpz_add
(
tmp1
,Åmp1, 
numî
);

24 
	`mpz_add
(
tmp1
,Åmp1, 
accum
);

25 
	`mpz_fdiv_qr
(
tmp1
, 
tmp2
,Åmp1, 
díom
);

28 
	`mpz_add
(
tmp2
,Åmp2, 
numî
);

31 i‡(
	`mpz_cmp
(
tmp2
, 
díom
) >= 0)

34  
	`mpz_gë_ui
(
tmp1
);

35 
	}
}

37 
	$√xt_ãrm
(
k
)

39 
y2
 = 
k
*2 + 1;

41 
	`mpz_mul_2exp
(
tmp1
, 
numî
, 1);

42 
	`mpz_add
(
accum
,áccum, 
tmp1
);

43 
	`mpz_mul_ui
(
accum
,áccum, 
y2
);

44 
	`mpz_mul_ui
(
numî
,Çumî, 
k
);

45 
	`mpz_mul_ui
(
díom
, díom, 
y2
);

46 
	}
}

48 
	$ñimö©e_digô
(
d
)

50 
	`mpz_submul_ui
(
accum
, 
díom
, 
d
);

51 
	`mpz_mul_ui
(
accum
,áccum, 10);

52 
	`mpz_mul_ui
(
numî
,Çumer, 10);

53 
	}
}

55 *
	gdigô°r
;

57 
	$pidigôs
(
n
)

59 
d
;

60 
i
 = 0, 
k
 = 0, 
m
;

61 
	`mpz_öô
(
tmp1
);

62 
	`mpz_öô
(
tmp2
);

63 
	`mpz_öô_£t_ui
(
numî
, 1);

64 
	`mpz_öô_£t_ui
(
accum
, 0);

65 
	`mpz_öô_£t_ui
(
díom
, 1);

70 
k
++;

71 
	`√xt_ãrm
(
k
);

72 
d
 = 
	`exåa˘_digô
();

73 } 
d
 == -1);

76 
digô°r
[
i
] = 
d
 + '0';

78 
i
++;

79 
m
 = 
i
%10;

82 if(
i
 >
n
)

84 
	`ñimö©e_digô
(
d
);

87 if(
m
) {

88 
m
 = 10 - m;

93 
	}
}

94 c⁄° 
	gnum_ªf_digôs
 = 1000;

95 c⁄° * 
	gªf_digôs
 = "3141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117067982148086513282306647093844609550582231725359408128481117450284102701938521105559644622948954930381964428810975665933446128475648233786783165271201909145648566923460348610454326648213393607260249141273724587006606315588174881520920962829254091715364367892590360011330530548820466521384146951941511609433057270365759591953092186117381932611793105118548074462379962749567351885752724891227938183011949129833673362440656643086021394946395224737190702179860943702770539217176293176752384674818467669405132000568127145263560827785771342757789609173637178721468440901224953430146549585371050792279689258923542019956112129021960864034418159813629774771309960518707211349999998372978049951059731732816096318595024459455346908302642522308253344685035261931188171010003137838752886587533208381420617177669147303598253490428755468731159562863882353787593751957781857780532171226806613001927876611195909216420198";

97 
	$run_pidigôs
(
digôs
)

99 
digô°r
 = 
	`mÆloc
(
digôs
+1);

100 
	`pidigôs
(
digôs
);

101 
digô°r
[
digôs
] = '\0';

102 i‡(
digôs
 =
num_ªf_digôs
) {

103  
	`°∫cmp
(
digô°r
, 
ªf_digôs
, 
num_ªf_digôs
);

106 
	}
}

	@procstat.c

42 
	~<°dio.h
>

43 
	~<uni°d.h
>

44 
	~<time.h
>

45 
	~<löux/limôs.h
>

46 
	~<sys/times.h
>

49 
	tnum
;

51 
num
 
	gpid
;

52 
	gtcomm
[
PATH_MAX
];

53 
	g°©e
;

55 
num
 
	gµid
;

56 
num
 
	gpgid
;

57 
num
 
	gsid
;

58 
num
 
	gây_ƒ
;

59 
num
 
	gây_pgΩ
;

61 
num
 
	gÊags
;

62 
num
 
	gmö_Êt
;

63 
num
 
	gcmö_Êt
;

64 
num
 
	gmaj_Êt
;

65 
num
 
	gcmaj_Êt
;

66 
num
 
	gutime
;

67 
num
 
	g°imev
;

69 
num
 
	gcutime
;

70 
num
 
	gc°ime
;

71 
num
 
	g¥i‹ôy
;

72 
num
 
	gni˚v
;

73 
num
 
	gnum_thªads
;

74 
num
 
	gô_ªÆ_vÆue
;

76 
	g°¨t_time
;

78 
num
 
	gvsize
;

79 
num
 
	grss
;

80 
num
 
	grs¶im
;

81 
num
 
	g°¨t_code
;

82 
num
 
	gíd_code
;

83 
num
 
	g°¨t_°ack
;

84 
num
 
	ge•
;

85 
num
 
	geù
;

87 
num
 
	g≥ndög
;

88 
num
 
	gblocked
;

89 
num
 
	gsigign
;

90 
num
 
	gsigˇtch
;

91 
num
 
	gwch™
;

92 
num
 
	gzîo1
;

93 
num
 
	gzîo2
;

94 
num
 
	gexô_sig«l
;

95 
num
 
	g˝u
;

96 
num
 
	gπ_¥i‹ôy
;

97 
num
 
	gpﬁicy
;

99 
	gtick•î£c
;

101 
FILE
 *
	göput
;

104 
¥öt_°©
();

105 
	$ªad⁄e
(
num
 *
x
Ë{ 
	`fsˇnf
(
öput
, "%Œd ", x); 
	}
}

106 
	$ªadunsig√d
(*
x
Ë{ 
	`fsˇnf
(
öput
, "%Œu ", x); 
	}
}

107 
	$ªad°r
(*
x
Ë{ 
	`fsˇnf
(
öput
, "%†", x);
	}
}

108 
	$ªadch¨
(*
x
Ë{ 
	`fsˇnf
(
öput
, "%¯", x);
	}
}

110 
	$¥öt⁄e
(*
«me
, 
num
 
x
Ë{ 
	`¥ötf
("%20s: %Œd\n",Çame, x);
	}
}

111 
	$¥öt⁄ex
(*
«me
, 
num
 
x
Ë{ 
	`¥ötf
("%20s: %016Œx\n",Çame, x);
	}
}

112 
	$¥ötunsig√d
(*
«me
, 
x
Ë{ 
	`¥ötf
("%20s: %Œu\n",Çame, x);
	}
}

113 
	$¥ötch¨
(*
«me
, 
x
Ë{ 
	`¥ötf
("%20s: %c\n",Çame, x);
	}
}

114 
	$¥öt°r
(*
«me
, *
x
Ë{ 
	`¥ötf
("%20s: %s\n",Çame, x);
	}
}

115 
	$¥öâime
(*
«me
, 
num
 
x
Ë{ 
	`¥ötf
("%20s: %f\n",Çame, ((()xË/ 
tick•î£c
));
	}
}

117 
	$gëtimesö˚boŸ
() {

118 
FILE
 *
¥ocu±ime
;

119 
£c
, 
s£c
;

121 
¥ocu±ime
 = 
	`f›í
("/proc/uptime", "r");

122 
	`fsˇnf
(
¥ocu±ime
, "%d.%ds", &
£c
, &
s£c
);

123 
	`f˛o£
(
¥ocu±ime
);

124  (
£c
*
tick•î£c
)+
s£c
;

125 
	}
}

127 
	$¥öâimediff
(*
«me
, 
num
 
x
) {

128 
sö˚boŸ
 = 
	`gëtimesö˚boŸ
();

129 
ru¬ög
 = 
sö˚boŸ
 - 
x
;

130 
time_t
 
π
 = 
	`time
(
NULL
Ë- (
ru¬ög
 / 
tick•î£c
);

131 
buf
[1024];

133 
	`°r·ime
(
buf
, (buf), "%m.%d %H:%M", 
	`loˇ…ime
(&
π
));

134 
	`¥ötf
("%20s: %†(%u.%us)\n", 
«me
, 
buf
, 
ru¬ög
 / 
tick•î£c
,Ñunning %Åickspersec);

135 
	}
}

139 
	$¥öt_°©
() {

141 
tick•î£c
 = 
	`sysc⁄f
(
_SC_CLK_TCK
);

142 
öput
 = 
NULL
;

144 
vÆ
 = (Ë
	`gëpid
();

145 
s
[256];

147 
	`•rötf
(
s
, "%d",
vÆ
);

149 
	`Ârötf
(
°dîr
,"%†\n",
s
);

152 
	`chdú
("/proc");

153 if(
	`chdú
(
s
Ë=0Ë{ 
öput
 = 
	`f›í
("stat", "r"); }

154 if(!
öput
) {

155 
	`≥º‹
("open");

163 
	`ªad⁄e
(&
pid
);

164 
	`ªad°r
(
tcomm
);

165 
	`ªadch¨
(&
°©e
);

166 
	`ªad⁄e
(&
µid
);

167 
	`ªad⁄e
(&
pgid
);

168 
	`ªad⁄e
(&
sid
);

169 
	`ªad⁄e
(&
ây_ƒ
);

170 
	`ªad⁄e
(&
ây_pgΩ
);

171 
	`ªad⁄e
(&
Êags
);

172 
	`ªad⁄e
(&
mö_Êt
);

173 
	`ªad⁄e
(&
cmö_Êt
);

174 
	`ªad⁄e
(&
maj_Êt
);

175 
	`ªad⁄e
(&
cmaj_Êt
);

176 
	`ªad⁄e
(&
utime
);

177 
	`ªad⁄e
(&
°imev
);

178 
	`ªad⁄e
(&
cutime
);

179 
	`ªad⁄e
(&
c°ime
);

180 
	`ªad⁄e
(&
¥i‹ôy
);

181 
	`ªad⁄e
(&
ni˚v
);

182 
	`ªad⁄e
(&
num_thªads
);

183 
	`ªad⁄e
(&
ô_ªÆ_vÆue
);

184 
	`ªadunsig√d
(&
°¨t_time
);

185 
	`ªad⁄e
(&
vsize
);

186 
	`ªad⁄e
(&
rss
);

187 
	`ªad⁄e
(&
rs¶im
);

188 
	`ªad⁄e
(&
°¨t_code
);

189 
	`ªad⁄e
(&
íd_code
);

190 
	`ªad⁄e
(&
°¨t_°ack
);

191 
	`ªad⁄e
(&
e•
);

192 
	`ªad⁄e
(&
eù
);

193 
	`ªad⁄e
(&
≥ndög
);

194 
	`ªad⁄e
(&
blocked
);

195 
	`ªad⁄e
(&
sigign
);

196 
	`ªad⁄e
(&
sigˇtch
);

197 
	`ªad⁄e
(&
wch™
);

198 
	`ªad⁄e
(&
zîo1
);

199 
	`ªad⁄e
(&
zîo2
);

200 
	`ªad⁄e
(&
exô_sig«l
);

201 
	`ªad⁄e
(&
˝u
);

202 
	`ªad⁄e
(&
π_¥i‹ôy
);

203 
	`ªad⁄e
(&
pﬁicy
);

221 
	`¥öâime
("°ime", 
°imev
);

251 
	}
}

	@procstat.h

1 
	~<°dio.h
>

2 
	~<uni°d.h
>

3 
	~<time.h
>

4 
	~<löux/limôs.h
>

5 
	~<sys/times.h
>

7 #i‚de‡
PROCSTAT_H_


8 
	#PROCSTAT_H_


	)

10 #ifde‡
__˝lu•lus


14 
¥öt_°©
();

16 #ifde‡
__˝lu•lus


	@revcomp.c

7 
	~<as£π.h
>

8 
	~<˘y≥.h
>

9 
	~<±hªad.h
>

10 
	~<°döt.h
>

11 
	~<°dio.h
>

12 
	~<°dlib.h
>

13 
	~<°rög.h
>

14 
	~<sys/ty≥s.h
>

15 
	~<uni°d.h
>

19 
	#LINE_LENGTH
 60

	)

20 
	#STDOUT
 1

	)

22 #ifde‡
ARRAYFILE


23 
	#fgës_u∆ocked
 
°rögfûe_fgës


	)

24 #unde‡
°dö


25 
	#°dö
 
°rögfûe_°dö


	)

27 #i‚de‡
__GLIBC__


28 
	#fgës_u∆ocked
 
fgës


	)

32 
	slookup
 {

33 
uöt8_t
 
	mbyãs
[256];

34 
uöt16_t
 
	m∑ús
[256*256];

35 } 
	tlookup_t
;

38 
	$öô_lookup
(c⁄° 
uöt8_t
 *
‰om
, c⁄° uöt8_à*
to
, 
lookup_t
 *
lookup
) {

39 
i
 = 0; i < 256; ++i) {

40 
lookup
->
byãs
[
i
] = i;

42 ; *
‰om
 && *
to
; ++from, ++to) {

43 
lookup
->
byãs
[
	`tﬁowî
(*
‰om
)] = *
to
;

44 
lookup
->
byãs
[
	`touµî
(*
‰om
)] = *
to
;

47 
i
 = 0; i != 256; ++i) {

48 
j
 = 0; j != 256; ++j) {

49 
lookup
->
∑ús
[(
i
 << 8Ë+ 
j
] =

50 ((
uöt16_t
)
lookup
->
byãs
[
j
] << 8Ë+Üookup->byãs[
i
];

53 
	}
}

55 
	sjob
 {

56 
job
 *
	m¥ev_job
;

58 
±hªad_muãx_t
 *
	mio_muãx
;

59 
±hªad_c⁄d_t
 
	mc⁄dôi⁄
;

60 
	mföished
;

62 c⁄° 
uöt8_t
 *
	mhódî_begö
;

63 c⁄° 
uöt8_t
 *
	mhódî_íd
;

64 c⁄° 
uöt8_t
 *
	mbody_begö
;

65 c⁄° 
uöt8_t
 *
	mbody_íd
;

66 c⁄° 
lookup_t
 *
	mlookup
;

67 
±hªad_t
 
	mthªad
;

68 
uöt8_t
 *
	mbuf„r
;

69 
	m‰ì_buf„r
;

70 } 
	tjob_t
;

72 
off_t
 
	$gë_fûe_size
(
FILE
 *
f
) {

73 
begö
 = 
	`·ñl
(
f
);

74 
	`f£ek
(
f
, 0, 
SEEK_END
);

75 
size
 = 
	`·ñl
(
f
Ë- 
begö
;

76 
	`f£ek
(
f
, 
begö
, 
SEEK_SET
);

78  
size
;

79 
	}
}

82 
	$≥rsi°ít_wrôe
(
fd
, c⁄° *
±r
, 
size_t
 
size
) {

83 #ifde‡
ARRAYFILE


84 
	`as£π
(
	`¨øyfûe_fwrôe
(
±r
, 
size
, 1, 
¨øyfûe_°dout
));

86 
size
 > 0) {

87 
ssize_t
 
ªsu…
 = 
	`wrôe
(
fd
, 
±r
, 
size
);

89 
	`as£π
(
ªsu…
 >= 0);

91 
size
 -
ªsu…
;

94 
	}
}

96 
size_t


97 
	$ªvî£_com∂emít
(

98 c⁄° 
uöt8_t
 *
begö
,

99 c⁄° 
uöt8_t
 *
íd
,

100 c⁄° 
lookup_t
 *
lookup
,

101 
uöt8_t
 *
buf„r
) {

102 
size_t
 
size
 = 
íd
 - 
begö
;

103 c⁄° 
uöt8_t
 *
ªad_p
 = (c⁄° uöt8_à*)
íd
;

104 
uöt8_t
 *
buf„r_begö
 = 
buf„r
;

106 
size
 >
LINE_LENGTH
) {

107 
uöt16_t
 *
∑ú_buf„r
 = (uöt16_à*)
buf„r
;

108 c⁄° 
uöt16_t
 *
ªad_∑ú
 = (c⁄° uöt16_à*)
ªad_p
;

110 
size_t
 
i
 = 0; i < 
LINE_LENGTH
; i += 2) {

111 *
∑ú_buf„r
++ = 
lookup
->
∑ús
[*--
ªad_∑ú
];

114 
ªad_p
 -
LINE_LENGTH
&(~1);

115 
buf„r
 +
LINE_LENGTH
&(~1);

117 i‡(
LINE_LENGTH
 % 2 != 0) {

118 *
buf„r
++ = *--
ªad_p
;

121 *
buf„r
++ = '\n';

122 
size
 -
LINE_LENGTH
;

125 i‡(
size
 > 0) {

126 
ªad_p
 > 
begö
) {

127 *
buf„r
++ = 
lookup
->
byãs
[*--
ªad_p
];

129 *
buf„r
++ = '\n';

132  
buf„r
 - 
buf„r_begö
;

133 
	}
}

135 
size_t
 
	$round_by
(
size_t
 
a
, size_à
b
) {

136  
a
 -á%
b
;

137 
	}
}

140 
	$¥o˚ss_block
(

141 
job_t
 *
job
) {

142 c⁄° 
uöt8_t
 *
hódî_begö
 = 
job
->header_begin;

143 c⁄° 
uöt8_t
 *
hódî_íd
 = 
job
->header_end;

144 c⁄° 
uöt8_t
 *
body_begö
 = 
job
->body_begin;

145 c⁄° 
uöt8_t
 *
body_íd
 = 
job
->body_end;

146 c⁄° 
lookup_t
 *
lookup
 = 
job
->lookup;

147 
±hªad_muãx_t
 *
io_muãx
 = 
job
->io_mutex;

148 
±hªad_c⁄d_t
 *
c⁄dôi⁄
 = &
job
->condition;

149 
uöt8_t
 *
buf„r
 = 
job
->buffer;

151 
size_t
 
size
 = 
	`ªvî£_com∂emít
(

152 
body_begö
, 
body_íd
,

153 
lookup
,

154 
buf„r
);

156 
	`±hªad_muãx_lock
(
io_muãx
);

157 i‡(
job
->
¥ev_job
) {

158 i‡(!
job
->
¥ev_job
->
föished
) {

159 
	`±hªad_c⁄d_waô
(

160 &
job
->
¥ev_job
->
c⁄dôi⁄
, 
io_muãx
);

164 i‡(
hódî_begö
 && 
hódî_íd
) {

165 
	`≥rsi°ít_wrôe
(

166 
STDOUT
, 
hódî_begö
, 
hódî_íd
 - header_begin);

168 
	`≥rsi°ít_wrôe
(
STDOUT
, 
buf„r
, 
size
);

169 
job
->
föished
 = 1;

170 
	`±hªad_c⁄d_sig«l
(
c⁄dôi⁄
);

171 
	`±hªad_muãx_u∆ock
(
io_muãx
);

172 
	}
}

174 
job_t
 *
	$dëach_job
(

175 c⁄° 
uöt8_t
 *
hódî_begö
, c⁄° uöt8_à*
hódî_íd
,

176 c⁄° 
uöt8_t
 *
body_begö
, c⁄° uöt8_à*
body_íd
,

177 c⁄° 
lookup_t
 *
lookup
,

178 
±hªad_muãx_t
 *
muãx
,

179 
job_t
 *
¥ev_job
,

180 
uöt8_t
 *
buf„r
,

181 
‰ì_buf„r
) {

182 
job_t
 *
job
 = 
	`nvˇŒoc
(1, (*job));

183 
	`as£π
(
job
);

185 
job
->
io_muãx
 = 
muãx
;

186 
	`±hªad_c⁄d_öô
(&
job
->
c⁄dôi⁄
, 0);

187 
job
->
hódî_begö
 = header_begin;

188 
job
->
hódî_íd
 = header_end;

189 
job
->
body_begö
 = body_begin;

190 
job
->
body_íd
 = body_end;

191 
job
->
lookup
 =Üookup;

192 
job
->
buf„r
 = buffer;

193 
job
->
¥ev_job
 =Örev_job;

194 
job
->
‰ì_buf„r
 = free_buffer;

196 
	`±hªad_¸óã
(&
job
->
thªad
, 0, (*(*)(*))&
¥o˚ss_block
, job);

198  
job
;

199 
	}
}

201 
job_t
 *

202 
	$do_¥o˚ss_block
(

203 c⁄° 
uöt8_t
 *
hódî_begö
, c⁄° uöt8_à*
hódî_íd
,

204 c⁄° 
uöt8_t
 *
body_begö
, c⁄° uöt8_à*
body_íd
,

205 c⁄° 
lookup_t
 *
lookup
,

206 
±hªad_muãx_t
 *
muãx
,

207 
job_t
 *
¥ev_job
) {

208 
uöt64_t
 
body_size
 = 
body_íd
 - 
body_begö
;

209 
uöt64_t
 
èû_Àn
 = 
	`round_by
(
body_size
/2, 
LINE_LENGTH
);

210 c⁄° 
uöt8_t
 *
•lô_©
 = 
body_íd
 - 
èû_Àn
;

212 
uöt8_t
 *
buf„r
 = 
	`mÆloc
(

213 
body_size
*(
LINE_LENGTH
 + 1)/LINE_LENGTH + LINE_LENGTH);

214 
	`as£π
(
buf„r
);

216 
¥ev_job
 = 
	`dëach_job
(

217 
hódî_begö
, 
hódî_íd
,

218 
•lô_©
, 
body_íd
,

219 
lookup
,

220 
muãx
,

221 
¥ev_job
,

222 
buf„r
,

224 
¥ev_job
 = 
	`dëach_job
(

226 
body_begö
, 
•lô_©
,

227 
lookup
,

228 
muãx
,

229 
¥ev_job
,

230 
buf„r
 + 
èû_Àn
*(
LINE_LENGTH
 + 1)/LINE_LENGTH,

233  
¥ev_job
;

234 
	}
}

237 
	$ªvcomp_maö
() {

238 #ifde‡ 
ARRAYFILE


239 
°dö_size
 = 
Á°a_ouçut_Àn
;

241 
	`£tvbuf
(
°dö
, 0, 
_IOFBF
, 1024*1024);

243 
°dö_size
 = 
	`gë_fûe_size
(
°dö
);

245 
uöt8_t
 *
buf„r
 = 
	`nvˇŒoc
(
°dö_size
 + 
LINE_LENGTH
, 1);

246 
	`as£π
(
buf„r
);

247 
lookup_t
 
lookup
;

248 
±hªad_muãx_t
 
muãx
;

249 
job_t
 *
job
 = 0;

251 
	`öô_lookup
(

252 (c⁄° 
uöt8_t
 *)"acbdghkmnsrutwvy",

253 (c⁄° 
uöt8_t
 *)"TGVHCDMKNSYAAWBR",

254 &
lookup
);

256 
	`±hªad_muãx_öô
(&
muãx
, 0);

258 
uöt8_t
 *
cuºít
 = 
buf„r
;

259 
uöt8_t
 *
íd
 = 
buf„r
 + 
°dö_size
;

260 
uöt8_t
 *
hódî_begö
 = 0;

261 
uöt8_t
 *
hódî_íd
 = 0;

262 
uöt8_t
 *
body_begö
 = 0;

264 
	`fgës_u∆ocked
((*)
cuºít
, 
íd
 - cuºít, 
°dö
)) {

265 i‡(
cuºít
[0] == '>') {

266 i‡(
body_begö
 != 0) {

267 
job
 = 
	`do_¥o˚ss_block
(

268 
hódî_begö
, 
hódî_íd
,

269 
body_begö
, 
cuºít
,

270 &
lookup
,

271 &
muãx
,

272 
job
);

274 
size_t
 
Àn
 = 
	`°æí
((c⁄° *)
cuºít
);

275 
hódî_begö
 = 
cuºít
;

276 
hódî_íd
 = 
cuºít
 + 
Àn
;

277 
cuºít
 +
Àn
;

278 
body_begö
 = 
cuºít
;

280 i‡(
cuºít
[
LINE_LENGTH
] == '\n') {

281 
cuºít
 +
LINE_LENGTH
;

283 
size_t
 
Àn
 = 
	`°æí
((c⁄° *)
cuºít
);

284 i‡(
cuºít
[
Àn
 - 1] == '\n') {

285 --
Àn
;

287 
cuºít
 +
Àn
;

292 i‡(
body_begö
 != 0) {

293 
job
 = 
	`do_¥o˚ss_block
(

294 
hódî_begö
, 
hódî_íd
,

295 
body_begö
, 
cuºít
,

296 &
lookup
,

297 &
muãx
,

298 
job
);

301 
job
) {

302 
	`±hªad_joö
(
job
->
thªad
, 0);

304 i‡(
job
->
‰ì_buf„r
) {

305 
	`nv_‰ì
(
job
->
buf„r
);

307 
job
 = job->
¥ev_job
;

310 
	`nv_‰ì
(
buf„r
);

313 
	}
}

315 
	$run_ªvcomp
(
ign‹ed
) {

316 
run
 = 0;

317 #ifde‡
ARRAYFILE


318 
°rögfûe_°dö
 = 
	`°rögfûe_›í
((*)
Á°a_ouçut
, 
Á°a_ouçut_Àn
, "r");

319 i‡(!
°rögfûe_°dö
)  -1;

320 
	`as£π
(
¨øyfûe_°dout
);

321 
	`¨øyfûe_£t_kìp_ouçut
(
¨øyfûe_°dout
, 0);

324 
	`ªvcomp_maö
();

326 #ifde‡
ARRAYFILE


327 *
ouçut
 = 
	`¨øyfûe_joö
(
¨øyfûe_°dout
, 
NULL
);

328 
	`¨øyfûe_ªwöd
(
¨øyfûe_°dout
);

331 
	`nv_‰ì
(
ouçut
);

332 
	`°rögfûe_˛o£
(
°rögfûe_°dö
);

336 
	}
}

	@revcomp_file.c

7 
	~<as£π.h
>

8 
	~<˘y≥.h
>

9 
	~<±hªad.h
>

10 
	~<°döt.h
>

11 
	~<°dio.h
>

12 
	~<°dlib.h
>

13 
	~<°rög.h
>

14 
	~<sys/ty≥s.h
>

15 
	~<uni°d.h
>

16 
	~"IOtimî.h
"

20 
	#LINE_LENGTH
 60

	)

21 
	#STDOUT
 1

	)

23 #ifde‡
ARRAYFILE


24 
	#fgës_u∆ocked
 
°rögfûe_fgës


	)

25 #unde‡
°dö


26 
	#°dö
 
°rögfûe_°dö


	)

28 #i‚de‡
__GLIBC__


29 
	#fgës_u∆ocked
 
fgës


	)

33 
	#INFILE
 "Á°a_ouçut"

	)

34 
	#OUTFILE
 "ªvcomp_ouçut"

	)

37 *
	gnv_ouçå
 = 
NULL
;

40 
FILE
 *
	gouput_fûe
, *
	göput_fûe
;

42 
	slookup
 {

43 
uöt8_t
 
	mbyãs
[256];

44 
uöt16_t
 
	m∑ús
[256*256];

45 } 
	tlookup_t
;

48 
	$öô_lookup
(c⁄° 
uöt8_t
 *
‰om
, c⁄° uöt8_à*
to
, 
lookup_t
 *
lookup
) {

49 
i
 = 0; i < 256; ++i) {

50 
lookup
->
byãs
[
i
] = i;

52 ; *
‰om
 && *
to
; ++from, ++to) {

53 
lookup
->
byãs
[
	`tﬁowî
(*
‰om
)] = *
to
;

54 
lookup
->
byãs
[
	`touµî
(*
‰om
)] = *
to
;

57 
i
 = 0; i != 256; ++i) {

58 
j
 = 0; j != 256; ++j) {

59 
lookup
->
∑ús
[(
i
 << 8Ë+ 
j
] =

60 ((
uöt16_t
)
lookup
->
byãs
[
j
] << 8Ë+Üookup->byãs[
i
];

63 
	}
}

65 
	sjob
 {

66 
job
 *
	m¥ev_job
;

68 
±hªad_muãx_t
 *
	mio_muãx
;

69 
±hªad_c⁄d_t
 
	mc⁄dôi⁄
;

70 
	mföished
;

72 c⁄° 
uöt8_t
 *
	mhódî_begö
;

73 c⁄° 
uöt8_t
 *
	mhódî_íd
;

74 c⁄° 
uöt8_t
 *
	mbody_begö
;

75 c⁄° 
uöt8_t
 *
	mbody_íd
;

76 c⁄° 
lookup_t
 *
	mlookup
;

77 
±hªad_t
 
	mthªad
;

78 
uöt8_t
 *
	mbuf„r
;

79 
	m‰ì_buf„r
;

80 } 
	tjob_t
;

82 
off_t
 
	$gë_fûe_size
(
FILE
 *
f
) {

83 
begö
 = 
	`·ñl
(
f
);

84 
	`f£ek
(
f
, 0, 
SEEK_END
);

85 
size
 = 
	`·ñl
(
f
Ë- 
begö
;

86 
	`f£ek
(
f
, 
begö
, 
SEEK_SET
);

88  
size
;

89 
	}
}

91 
	$≥rsi°ít_wrôe
(
fd
, c⁄° *
±r
, 
size_t
 
size
) {

92 #ifde‡
ARRAYFILE


93 
	`as£π
(
	`_fwrôe
(
±r
, 
size
, 1, 
ouput_fûe
));

96 
fd
 = 
	`fûío
(
ouput_fûe
);

98 
size
 > 0) {

99 
ssize_t
 
ªsu…
 = 
	`_wrôe
(
fd
, 
±r
, 
size
);

101 
	`as£π
(
ªsu…
 >= 0);

103 
size
 -
ªsu…
;

106 
	}
}

110 
size_t


111 
	$ªvî£_com∂emít
(

112 c⁄° 
uöt8_t
 *
begö
,

113 c⁄° 
uöt8_t
 *
íd
,

114 c⁄° 
lookup_t
 *
lookup
,

115 
uöt8_t
 *
buf„r
) {

116 
size_t
 
size
 = 
íd
 - 
begö
;

117 c⁄° 
uöt8_t
 *
ªad_p
 = (c⁄° uöt8_à*)
íd
;

118 
uöt8_t
 *
buf„r_begö
 = 
buf„r
;

120 
size
 >
LINE_LENGTH
) {

121 
uöt16_t
 *
∑ú_buf„r
 = (uöt16_à*)
buf„r
;

122 c⁄° 
uöt16_t
 *
ªad_∑ú
 = (c⁄° uöt16_à*)
ªad_p
;

124 
size_t
 
i
 = 0; i < 
LINE_LENGTH
; i += 2) {

125 *
∑ú_buf„r
++ = 
lookup
->
∑ús
[*--
ªad_∑ú
];

128 
ªad_p
 -
LINE_LENGTH
&(~1);

129 
buf„r
 +
LINE_LENGTH
&(~1);

131 i‡(
LINE_LENGTH
 % 2 != 0) {

132 *
buf„r
++ = *--
ªad_p
;

135 *
buf„r
++ = '\n';

136 
size
 -
LINE_LENGTH
;

139 i‡(
size
 > 0) {

140 
ªad_p
 > 
begö
) {

141 *
buf„r
++ = 
lookup
->
byãs
[*--
ªad_p
];

143 *
buf„r
++ = '\n';

146  
buf„r
 - 
buf„r_begö
;

147 
	}
}

149 
size_t
 
	$round_by
(
size_t
 
a
, size_à
b
) {

150  
a
 -á%
b
;

151 
	}
}

154 
	$¥o˚ss_block
(

155 
job_t
 *
job
) {

156 c⁄° 
uöt8_t
 *
hódî_begö
 = 
job
->header_begin;

157 c⁄° 
uöt8_t
 *
hódî_íd
 = 
job
->header_end;

158 c⁄° 
uöt8_t
 *
body_begö
 = 
job
->body_begin;

159 c⁄° 
uöt8_t
 *
body_íd
 = 
job
->body_end;

160 c⁄° 
lookup_t
 *
lookup
 = 
job
->lookup;

161 
±hªad_muãx_t
 *
io_muãx
 = 
job
->io_mutex;

162 
±hªad_c⁄d_t
 *
c⁄dôi⁄
 = &
job
->condition;

163 
uöt8_t
 *
buf„r
 = 
job
->buffer;

165 
size_t
 
size
 = 
	`ªvî£_com∂emít
(

166 
body_begö
, 
body_íd
,

167 
lookup
,

168 
buf„r
);

170 
	`±hªad_muãx_lock
(
io_muãx
);

171 i‡(
job
->
¥ev_job
) {

172 i‡(!
job
->
¥ev_job
->
föished
) {

173 
	`±hªad_c⁄d_waô
(

174 &
job
->
¥ev_job
->
c⁄dôi⁄
, 
io_muãx
);

178 i‡(
hódî_begö
 && 
hódî_íd
) {

179 
	`≥rsi°ít_wrôe
(

180 
STDOUT
, 
hódî_begö
, 
hódî_íd
 - header_begin);

182 
	`≥rsi°ít_wrôe
(
STDOUT
, 
buf„r
, 
size
);

183 
job
->
föished
 = 1;

184 
	`±hªad_c⁄d_sig«l
(
c⁄dôi⁄
);

185 
	`±hªad_muãx_u∆ock
(
io_muãx
);

186 
	}
}

188 
job_t
 *
	$dëach_job
(

189 c⁄° 
uöt8_t
 *
hódî_begö
, c⁄° uöt8_à*
hódî_íd
,

190 c⁄° 
uöt8_t
 *
body_begö
, c⁄° uöt8_à*
body_íd
,

191 c⁄° 
lookup_t
 *
lookup
,

192 
±hªad_muãx_t
 *
muãx
,

193 
job_t
 *
¥ev_job
,

194 
uöt8_t
 *
buf„r
,

195 
‰ì_buf„r
) {

196 
job_t
 *
job
 = 
	`ˇŒoc
(1, (*job));

197 
	`as£π
(
job
);

199 
job
->
io_muãx
 = 
muãx
;

200 
	`±hªad_c⁄d_öô
(&
job
->
c⁄dôi⁄
, 0);

201 
job
->
hódî_begö
 = header_begin;

202 
job
->
hódî_íd
 = header_end;

203 
job
->
body_begö
 = body_begin;

204 
job
->
body_íd
 = body_end;

205 
job
->
lookup
 =Üookup;

206 
job
->
buf„r
 = buffer;

207 
job
->
¥ev_job
 =Örev_job;

208 
job
->
‰ì_buf„r
 = free_buffer;

210 
	`±hªad_¸óã
(&
job
->
thªad
, 0, (*(*)(*))&
¥o˚ss_block
, job);

212  
job
;

213 
	}
}

215 
job_t
 *

216 
	$do_¥o˚ss_block
(

217 c⁄° 
uöt8_t
 *
hódî_begö
, c⁄° uöt8_à*
hódî_íd
,

218 c⁄° 
uöt8_t
 *
body_begö
, c⁄° uöt8_à*
body_íd
,

219 c⁄° 
lookup_t
 *
lookup
,

220 
±hªad_muãx_t
 *
muãx
,

221 
job_t
 *
¥ev_job
) {

222 
uöt64_t
 
body_size
 = 
body_íd
 - 
body_begö
;

223 
uöt64_t
 
èû_Àn
 = 
	`round_by
(
body_size
/2, 
LINE_LENGTH
);

224 c⁄° 
uöt8_t
 *
•lô_©
 = 
body_íd
 - 
èû_Àn
;

226 
uöt8_t
 *
buf„r
 = 
	`mÆloc
(

227 
body_size
*(
LINE_LENGTH
 + 1)/LINE_LENGTH + LINE_LENGTH);

228 
	`as£π
(
buf„r
);

230 
¥ev_job
 = 
	`dëach_job
(

231 
hódî_begö
, 
hódî_íd
,

232 
•lô_©
, 
body_íd
,

233 
lookup
,

234 
muãx
,

235 
¥ev_job
,

236 
buf„r
,

238 
¥ev_job
 = 
	`dëach_job
(

240 
body_begö
, 
•lô_©
,

241 
lookup
,

242 
muãx
,

243 
¥ev_job
,

244 
buf„r
 + 
èû_Àn
*(
LINE_LENGTH
 + 1)/LINE_LENGTH,

247  
¥ev_job
;

248 
	}
}

251 * 
	$ªadlöe
(*
cuºít
, 
Àngth
, * 
buf„r
){

253 
idx
 =0;

254 * 
ãmp
 = 
	`°rchr
(
buf„r
, '\n');

255 if(!
ãmp
Ë 
NULL
;

257 
Àn
 = ()
ãmp
 - ()
buf„r
;

259 if(
Àn
 < 1Ë 
NULL
;

261 
	`mem˝y
(
cuºít
, 
buf„r
, 
Àn
);

263 
cuºít
[
Àn
] = '\n';

267 
buf„r
 = buf„∏+ 
Àn
 + 1;

269  
buf„r
;

270 
	}
}

272 
	gcuº
 = 0;

274 
	$ªvcomp_maö
() {

276 
	`£tvbuf
(
öput_fûe
, 0, 
_IOFBF
, 1024*1024);

278 
°dö_size
 = 
	`gë_fûe_size
(
öput_fûe
);

280 
uöt8_t
 *
buf„r
 = 
	`ˇŒoc
(
°dö_size
 + 
LINE_LENGTH
, 1);

282 *
mybuf„r
 = 
	`ˇŒoc
(
°dö_size
 + 
LINE_LENGTH
, 1);

284 
	`as£π
(
buf„r
);

285 
lookup_t
 
lookup
;

286 
±hªad_muãx_t
 
muãx
;

287 
job_t
 *
job
 = 0;

288 
idx
 = 0;

289 
˙å
 = 0;

291 
	`öô_lookup
(

292 (c⁄° 
uöt8_t
 *)"acbdghkmnsrutwvy",

293 (c⁄° 
uöt8_t
 *)"TGVHCDMKNSYAAWBR",

294 &
lookup
);

296 
	`±hªad_muãx_öô
(&
muãx
, 0);

299 
uöt8_t
 *
cuºít
 = 
buf„r
;

300 
uöt8_t
 *
íd
 = 
buf„r
 + 
°dö_size
;

301 
uöt8_t
 *
hódî_begö
 = 0;

302 
uöt8_t
 *
hódî_íd
 = 0;

303 
uöt8_t
 *
body_begö
 = 0;

306 
	`_‰ód
(
mybuf„r
,1,
°dö_size
, 
öput_fûe
);

310 (
mybuf„r
 = 
	`ªadlöe
((*)
cuºít
, 
íd
 - cuºít,mybuf„r)Ë!
NULL
) {

312 if(
cuºít
) {

313 i‡(
cuºít
[0] == '>') {

314 i‡(
body_begö
 != 0) {

315 
job
 = 
	`do_¥o˚ss_block
(

316 
hódî_begö
, 
hódî_íd
,

317 
body_begö
, 
cuºít
,

318 &
lookup
,

319 &
muãx
,

320 
job
);

322 
size_t
 
Àn
 = 
	`°æí
((c⁄° *)
cuºít
);

324 
	`Ârötf
(
°dîr
, "LEN LENÜí %d \n", 
Àn
);

326 
hódî_begö
 = 
cuºít
;

327 
hódî_íd
 = 
cuºít
 + 
Àn
;

328 
cuºít
 +
Àn
;

329 
body_begö
 = 
cuºít
;

331 i‡(
cuºít
[
LINE_LENGTH
] == '\n') {

332 
cuºít
 +
LINE_LENGTH
;

334 
size_t
 
Àn
 = 
	`°æí
((c⁄° *)
cuºít
);

335 i‡(
cuºít
[
Àn
 - 1] == '\n') {

336 --
Àn
;

338 
cuºít
 +
Àn
;

344 i‡(
body_begö
 != 0) {

345 
job
 = 
	`do_¥o˚ss_block
(

346 
hódî_begö
, 
hódî_íd
,

347 
body_begö
, 
cuºít
,

348 &
lookup
,

349 &
muãx
,

350 
job
);

353 
job
) {

354 
	`±hªad_joö
(
job
->
thªad
, 0);

356 i‡(
job
->
‰ì_buf„r
) {

359 
job
 = job->
¥ev_job
;

365 
	}
}

367 *
	$¨øyfûe_joö2
 (
FILE
 *
pFûe
) {

368 
lSize
;

369 * 
buf„r
;

370 
size_t
 
ªsu…
;

372 if(!
pFûe
Ë
	`Ârötf
(
°dîr
,"invalid file \n");

376 
	`f£ek
 (
pFûe
 , 0 , 
SEEK_END
);

377 
lSize
 = 
	`·ñl
 (
pFûe
);

378 
	`ªwöd
 (
pFûe
);

381 
buf„r
 = (*Ë
	`mÆloc
 (()*
lSize
);

382 i‡(
buf„r
 =
NULL
Ë{
	`Âuts
 ("Mem‹yÉº‹",
°dîr
); 
	`exô
 (2);}

385 
ªsu…
 = 
	`_‰ód
 (
buf„r
,1,
lSize
,
pFûe
);

386 i‡(
ªsu…
 !
lSize
Ë{
	`Âuts
 ("RódögÉº‹",
°dîr
); 
	`exô
 (3);}

391 
	`f˛o£
 (
pFûe
);

393  
buf„r
;

396 
	}
}

399 
	$run_ªvcomp
(
ign‹ed
) {

400 
run
 = 0;

403 
ouput_fûe
 = 
	`f›í
 ( 
OUTFILE
 , "w+" );

404 i‡(
ouput_fûe
==
NULL
Ë{
	`Âuts
 ("Fûêîr‹",
°dîr
); 
	`exô
 (1);}

406 
öput_fûe
 = 
	`f›í
((*)
INFILE
, "r");

407 i‡(!
öput_fûe
)  -1;

408 
	`as£π
(
ouput_fûe
);

411 
	`ªvcomp_maö
();

413 *
ouçut
 = 
	`¨øyfûe_joö2
(
ouput_fûe
);

418 
	`f˛o£
(
öput_fûe
);

421 
	}
}

	@revcomp_nvram.c

7 
	~<as£π.h
>

8 
	~<˘y≥.h
>

9 
	~<±hªad.h
>

10 
	~<°döt.h
>

11 
	~<°dio.h
>

12 
	~<°dlib.h
>

13 
	~<°rög.h
>

14 
	~<sys/ty≥s.h
>

15 
	~<uni°d.h
>

16 
	~"IOtimî.h
"

17 
	~"nvmÆloc_wøp.h
"

21 
	#LINE_LENGTH
 60

	)

22 
	#STDOUT
 1

	)

24 #ifde‡
ARRAYFILE


25 
	#fgës_u∆ocked
 
°rögfûe_fgës


	)

26 #unde‡
°dö


27 
	#°dö
 
°rögfûe_°dö


	)

29 #i‚de‡
__GLIBC__


30 
	#fgës_u∆ocked
 
fgës


	)

34 
	#INFILE
 "Á°a_ouçut"

	)

35 
	#OUTFILE
 "ªvcomp_ouçut"

	)

38 
FILE
 *
	gouput_fûe
, *
	göput_fûe
;

41 *
	gnv_outfûe
 = 
NULL
;

44 
	slookup
 {

45 
uöt8_t
 
	mbyãs
[256];

46 
uöt16_t
 
	m∑ús
[256*256];

47 } 
	tlookup_t
;

50 
	$öô_lookup
(c⁄° 
uöt8_t
 *
‰om
, c⁄° uöt8_à*
to
, 
lookup_t
 *
lookup
) {

51 
i
 = 0; i < 256; ++i) {

52 
lookup
->
byãs
[
i
] = i;

54 ; *
‰om
 && *
to
; ++from, ++to) {

55 
lookup
->
byãs
[
	`tﬁowî
(*
‰om
)] = *
to
;

56 
lookup
->
byãs
[
	`touµî
(*
‰om
)] = *
to
;

59 
i
 = 0; i != 256; ++i) {

60 
j
 = 0; j != 256; ++j) {

61 
lookup
->
∑ús
[(
i
 << 8Ë+ 
j
] =

62 ((
uöt16_t
)
lookup
->
byãs
[
j
] << 8Ë+Üookup->byãs[
i
];

65 
	}
}

67 
	sjob
 {

68 
job
 *
	m¥ev_job
;

70 
±hªad_muãx_t
 *
	mio_muãx
;

71 
±hªad_c⁄d_t
 
	mc⁄dôi⁄
;

72 
	mföished
;

74 c⁄° 
uöt8_t
 *
	mhódî_begö
;

75 c⁄° 
uöt8_t
 *
	mhódî_íd
;

76 c⁄° 
uöt8_t
 *
	mbody_begö
;

77 c⁄° 
uöt8_t
 *
	mbody_íd
;

78 c⁄° 
lookup_t
 *
	mlookup
;

79 
±hªad_t
 
	mthªad
;

80 
uöt8_t
 *
	mbuf„r
;

81 
	m‰ì_buf„r
;

82 } 
	tjob_t
;

84 
off_t
 
	$gë_fûe_size
(
FILE
 *
f
) {

85 
begö
 = 
	`·ñl
(
f
);

86 
	`f£ek
(
f
, 0, 
SEEK_END
);

87 
size
 = 
	`·ñl
(
f
Ë- 
begö
;

88 
	`f£ek
(
f
, 
begö
, 
SEEK_SET
);

90  
size
;

91 
	}
}

93 
	$≥rsi°ít_wrôe
(c⁄° *
±r
, 
size_t
 
size
) {

94 #ifde‡
ARRAYFILE


95 
	`as£π
(
	`_fwrôe
(
±r
, 
size
, 1, 
ouput_fûe
));

98 
rq°_°ru˘
 
rq°
;

100 
rq°
.
byãs
 = 
size
;

101 
rq°
.
pid
 = 
PROC_ID
;

102 
rq°
.
id
 = 
CHUNK_ID
+2;

104 
nv_outfûe
 = 
	`mÆloc
(
size
);

105 if(!
nv_outfûe
) {

106 
	`Ârötf
(
°dîr
,"persistent_write: outfileállocation failed \n");

110 
	`mem˝y
(
nv_outfûe
,
±r
, 
size
);

116 
	}
}

119 
	$≥rsi°ít_wrôe_‹ig
(
fd
, c⁄° *
±r
, 
size_t
 
size
) {

120 #ifde‡
ARRAYFILE


121 
	`as£π
(
	`_fwrôe
(
±r
, 
size
, 1, 
ouput_fûe
));

124 
fd
 = 
	`fûío
(
ouput_fûe
);

126 
size
 > 0) {

127 
ssize_t
 
ªsu…
 = 
	`_wrôe
(
fd
, 
±r
, 
size
);

129 
	`as£π
(
ªsu…
 >= 0);

131 
size
 -
ªsu…
;

134 
	}
}

140 
size_t


141 
	$ªvî£_com∂emít
(

142 c⁄° 
uöt8_t
 *
begö
,

143 c⁄° 
uöt8_t
 *
íd
,

144 c⁄° 
lookup_t
 *
lookup
,

145 
uöt8_t
 *
buf„r
) {

146 
size_t
 
size
 = 
íd
 - 
begö
;

147 c⁄° 
uöt8_t
 *
ªad_p
 = (c⁄° uöt8_à*)
íd
;

148 
uöt8_t
 *
buf„r_begö
 = 
buf„r
;

150 
size
 >
LINE_LENGTH
) {

151 
uöt16_t
 *
∑ú_buf„r
 = (uöt16_à*)
buf„r
;

152 c⁄° 
uöt16_t
 *
ªad_∑ú
 = (c⁄° uöt16_à*)
ªad_p
;

154 
size_t
 
i
 = 0; i < 
LINE_LENGTH
; i += 2) {

155 *
∑ú_buf„r
++ = 
lookup
->
∑ús
[*--
ªad_∑ú
];

158 
ªad_p
 -
LINE_LENGTH
&(~1);

159 
buf„r
 +
LINE_LENGTH
&(~1);

161 i‡(
LINE_LENGTH
 % 2 != 0) {

162 *
buf„r
++ = *--
ªad_p
;

165 *
buf„r
++ = '\n';

166 
size
 -
LINE_LENGTH
;

169 i‡(
size
 > 0) {

170 
ªad_p
 > 
begö
) {

171 *
buf„r
++ = 
lookup
->
byãs
[*--
ªad_p
];

173 *
buf„r
++ = '\n';

176  
buf„r
 - 
buf„r_begö
;

177 
	}
}

179 
size_t
 
	$round_by
(
size_t
 
a
, size_à
b
) {

180  
a
 -á%
b
;

181 
	}
}

184 
	$¥o˚ss_block
(

185 
job_t
 *
job
) {

186 c⁄° 
uöt8_t
 *
hódî_begö
 = 
job
->header_begin;

187 c⁄° 
uöt8_t
 *
hódî_íd
 = 
job
->header_end;

188 c⁄° 
uöt8_t
 *
body_begö
 = 
job
->body_begin;

189 c⁄° 
uöt8_t
 *
body_íd
 = 
job
->body_end;

190 c⁄° 
lookup_t
 *
lookup
 = 
job
->lookup;

191 
±hªad_muãx_t
 *
io_muãx
 = 
job
->io_mutex;

192 
±hªad_c⁄d_t
 *
c⁄dôi⁄
 = &
job
->condition;

193 
uöt8_t
 *
buf„r
 = 
job
->buffer;

194 
rq°_°ru˘
 
rq°
;

197 
size_t
 
size
 = 
	`ªvî£_com∂emít
(

198 
body_begö
, 
body_íd
,

199 
lookup
,

200 
buf„r
);

202 
	`±hªad_muãx_lock
(
io_muãx
);

203 i‡(
job
->
¥ev_job
) {

204 i‡(!
job
->
¥ev_job
->
föished
) {

205 
	`±hªad_c⁄d_waô
(

206 &
job
->
¥ev_job
->
c⁄dôi⁄
, 
io_muãx
);

210 
rq°
.
byãs
 = 
hódî_íd
 - 
hódî_begö
 + 
size
;

211 
rq°
.
pid
 = 
PROC_ID
;

212 
rq°
.
id
 = 
CHUNK_ID
+2;

214 
nv_outfûe
 = 
	`≤vmÆloc
(
rq°
.
byãs
, &rqst);

215 if(!
nv_outfûe
) {

216 
	`Ârötf
(
°dîr
,"process_block: outfileállocation failed \n");

220 i‡(
hódî_begö
 && 
hódî_íd
) {

227 
	`mem˝y
(
nv_outfûe
, 
hódî_begö
, 
hódî_íd
 - header_begin);

233 
Àn
 = 
hódî_íd
 - 
hódî_begö
;

234 
	`mem˝y
(
nv_outfûe
 + 
Àn
, 
buf„r
, 
size
);

237 
job
->
föished
 = 1;

238 
	`±hªad_c⁄d_sig«l
(
c⁄dôi⁄
);

239 
	`±hªad_muãx_u∆ock
(
io_muãx
);

240 
	}
}

242 
job_t
 *
	$dëach_job
(

243 c⁄° 
uöt8_t
 *
hódî_begö
, c⁄° uöt8_à*
hódî_íd
,

244 c⁄° 
uöt8_t
 *
body_begö
, c⁄° uöt8_à*
body_íd
,

245 c⁄° 
lookup_t
 *
lookup
,

246 
±hªad_muãx_t
 *
muãx
,

247 
job_t
 *
¥ev_job
,

248 
uöt8_t
 *
buf„r
,

249 
‰ì_buf„r
) {

250 
job_t
 *
job
 = 
	`ˇŒoc
(1, (*job));

251 
	`as£π
(
job
);

253 
job
->
io_muãx
 = 
muãx
;

254 
	`±hªad_c⁄d_öô
(&
job
->
c⁄dôi⁄
, 0);

255 
job
->
hódî_begö
 = header_begin;

256 
job
->
hódî_íd
 = header_end;

257 
job
->
body_begö
 = body_begin;

258 
job
->
body_íd
 = body_end;

259 
job
->
lookup
 =Üookup;

260 
job
->
buf„r
 = buffer;

261 
job
->
¥ev_job
 =Örev_job;

262 
job
->
‰ì_buf„r
 = free_buffer;

264 
	`±hªad_¸óã
(&
job
->
thªad
, 0, (*(*)(*))&
¥o˚ss_block
, job);

266  
job
;

267 
	}
}

269 
job_t
 *

270 
	$do_¥o˚ss_block
(

271 c⁄° 
uöt8_t
 *
hódî_begö
, c⁄° uöt8_à*
hódî_íd
,

272 c⁄° 
uöt8_t
 *
body_begö
, c⁄° uöt8_à*
body_íd
,

273 c⁄° 
lookup_t
 *
lookup
,

274 
±hªad_muãx_t
 *
muãx
,

275 
job_t
 *
¥ev_job
) {

276 
uöt64_t
 
body_size
 = 
body_íd
 - 
body_begö
;

277 
uöt64_t
 
èû_Àn
 = 
	`round_by
(
body_size
/2, 
LINE_LENGTH
);

278 c⁄° 
uöt8_t
 *
•lô_©
 = 
body_íd
 - 
èû_Àn
;

280 
uöt8_t
 *
buf„r
 = 
	`mÆloc
(

281 
body_size
*(
LINE_LENGTH
 + 1)/LINE_LENGTH + LINE_LENGTH);

282 
	`as£π
(
buf„r
);

284 
¥ev_job
 = 
	`dëach_job
(

285 
hódî_begö
, 
hódî_íd
,

286 
•lô_©
, 
body_íd
,

287 
lookup
,

288 
muãx
,

289 
¥ev_job
,

290 
buf„r
,

292 
¥ev_job
 = 
	`dëach_job
(

294 
body_begö
, 
•lô_©
,

295 
lookup
,

296 
muãx
,

297 
¥ev_job
,

298 
buf„r
 + 
èû_Àn
*(
LINE_LENGTH
 + 1)/LINE_LENGTH,

301  
¥ev_job
;

302 
	}
}

305 
	$ªvcomp_maö
() {

311 
lSize
;

312 
size_t
 
ªsu…
;

313 
rq°_°ru˘
 
rq°
;

315 
rq°
.
byãs
 = 
MAXSIZE
;

316 
rq°
.
pid
 = 
PROC_ID
;

317 
rq°
.
id
 = 
CHUNK_ID
;

319 
lSize
 = 
rq°
.
byãs
;

321 
	`Ârötf
(
°dout
, "enteringÑevcomp_main \n");

324 
uöt8_t
 *
buf„r
 = 
	`≤vªad
(
lSize
,&
rq°
);

327 
	`as£π
(
buf„r
);

328 
lookup_t
 
lookup
;

329 
±hªad_muãx_t
 
muãx
;

330 
job_t
 *
job
 = 0;

332 
	`öô_lookup
(

333 (c⁄° 
uöt8_t
 *)"acbdghkmnsrutwvy",

334 (c⁄° 
uöt8_t
 *)"TGVHCDMKNSYAAWBR",

335 &
lookup
);

337 
	`±hªad_muãx_öô
(&
muãx
, 0);

339 
uöt8_t
 *
cuºít
 = 
buf„r
;

340 
uöt8_t
 *
íd
 = 
buf„r
 + 
lSize
;

341 
uöt8_t
 *
hódî_begö
 = 0;

342 
uöt8_t
 *
hódî_íd
 = 0;

343 
uöt8_t
 *
body_begö
 = 0;

346 
	`Ârötf
(
°dîr
,"Cuºíà%†\n",
cuºít
);

349 i‡(
cuºít
[0] == '>') {

350 i‡(
body_begö
 != 0) {

351 
job
 = 
	`do_¥o˚ss_block
(

352 
hódî_begö
, 
hódî_íd
,

353 
body_begö
, 
cuºít
,

354 &
lookup
,

355 &
muãx
,

356 
job
);

358 
size_t
 
Àn
 = 
	`°æí
((c⁄° *)
cuºít
);

359 
hódî_begö
 = 
cuºít
;

360 
hódî_íd
 = 
cuºít
 + 
Àn
;

361 
cuºít
 +
Àn
;

362 
body_begö
 = 
cuºít
;

364 i‡(
cuºít
[
LINE_LENGTH
] == '\n') {

365 
cuºít
 +
LINE_LENGTH
;

367 
size_t
 
Àn
 = 
	`°æí
((c⁄° *)
cuºít
);

368 i‡(
cuºít
[
Àn
 - 1] == '\n') {

369 --
Àn
;

371 
cuºít
 +
Àn
;

375 i‡(
body_begö
 != 0) {

376 
job
 = 
	`do_¥o˚ss_block
(

377 
hódî_begö
, 
hódî_íd
,

378 
body_begö
, 
cuºít
,

379 &
lookup
,

380 &
muãx
,

381 
job
);

384 
job
) {

385 
	`±hªad_joö
(
job
->
thªad
, 0);

387 i‡(
job
->
‰ì_buf„r
) {

388 
	`nv_‰ì
(
job
->
buf„r
);

390 
job
 = job->
¥ev_job
;

393 
	`Ârötf
(
°dout
, "revcomp mainÑeturning \n");

398 
	}
}

404 
	$ªvcomp_maö1
() {

406 
	`£tvbuf
(
öput_fûe
, 0, 
_IOFBF
, 1024*1024);

408 
°dö_size
 = 
	`gë_fûe_size
(
öput_fûe
);

410 
uöt8_t
 *
buf„r
 = 
	`ˇŒoc
(
°dö_size
 + 
LINE_LENGTH
, 1);

411 
	`as£π
(
buf„r
);

412 
lookup_t
 
lookup
;

413 
±hªad_muãx_t
 
muãx
;

414 
job_t
 *
job
 = 0;

416 
	`öô_lookup
(

417 (c⁄° 
uöt8_t
 *)"acbdghkmnsrutwvy",

418 (c⁄° 
uöt8_t
 *)"TGVHCDMKNSYAAWBR",

419 &
lookup
);

421 
	`±hªad_muãx_öô
(&
muãx
, 0);

423 
uöt8_t
 *
cuºít
 = 
buf„r
;

424 
uöt8_t
 *
íd
 = 
buf„r
 + 
°dö_size
;

425 
uöt8_t
 *
hódî_begö
 = 0;

426 
uöt8_t
 *
hódî_íd
 = 0;

427 
uöt8_t
 *
body_begö
 = 0;

429 
	`fgës_u∆ocked
((*)
cuºít
, 
íd
 - cuºít, 
öput_fûe
)) {

430 i‡(
cuºít
[0] == '>') {

431 i‡(
body_begö
 != 0) {

432 
job
 = 
	`do_¥o˚ss_block
(

433 
hódî_begö
, 
hódî_íd
,

434 
body_begö
, 
cuºít
,

435 &
lookup
,

436 &
muãx
,

437 
job
);

439 
size_t
 
Àn
 = 
	`°æí
((c⁄° *)
cuºít
);

440 
hódî_begö
 = 
cuºít
;

441 
hódî_íd
 = 
cuºít
 + 
Àn
;

442 
cuºít
 +
Àn
;

443 
body_begö
 = 
cuºít
;

445 i‡(
cuºít
[
LINE_LENGTH
] == '\n') {

446 
cuºít
 +
LINE_LENGTH
;

448 
size_t
 
Àn
 = 
	`°æí
((c⁄° *)
cuºít
);

449 i‡(
cuºít
[
Àn
 - 1] == '\n') {

450 --
Àn
;

452 
cuºít
 +
Àn
;

457 i‡(
body_begö
 != 0) {

458 
job
 = 
	`do_¥o˚ss_block
(

459 
hódî_begö
, 
hódî_íd
,

460 
body_begö
, 
cuºít
,

461 &
lookup
,

462 &
muãx
,

463 
job
);

466 
job
) {

467 
	`±hªad_joö
(
job
->
thªad
, 0);

469 i‡(
job
->
‰ì_buf„r
) {

470 
	`‰ì
(
job
->
buf„r
);

472 
job
 = job->
¥ev_job
;

475 
	`‰ì
(
buf„r
);

478 
	}
}

480 *
	$¨øyfûe_joö2_ﬁd
 (
FILE
 *
pFûe
) {

481 
lSize
;

482 * 
buf„r
;

483 
size_t
 
ªsu…
;

485 if(!
pFûe
Ë
	`Ârötf
(
°dîr
,"invalid file \n");

489 
	`f£ek
 (
pFûe
 , 0 , 
SEEK_END
);

490 
lSize
 = 
	`·ñl
 (
pFûe
);

491 
	`ªwöd
 (
pFûe
);

494 
buf„r
 = (*Ë
	`mÆloc
 (()*
lSize
);

495 i‡(
buf„r
 =
NULL
Ë{
	`Âuts
 ("Mem‹yÉº‹",
°dîr
); 
	`exô
 (2);}

498 
ªsu…
 = 
	`_‰ód
 (
buf„r
,1,
lSize
,
pFûe
);

499 i‡(
ªsu…
 !
lSize
Ë{
	`Âuts
 ("RódögÉº‹",
°dîr
); 
	`exô
 (3);}

504 
	`f˛o£
 (
pFûe
);

506  
buf„r
;

509 
	}
}

511 *
	$¨øyfûe_joö2
 (
FILE
 *
pFûe
) {

513 
lSize
;

514 * 
buf„r
;

515 
size_t
 
ªsu…
;

516 
rq°_°ru˘
 
rq°
;

518 
lSize
 = 10125;

519 
rq°
.
byãs
 = 
lSize
;

520 
rq°
.
pid
 = 
PROC_ID
;

521 
rq°
.
id
 = 
CHUNK_ID
+2;

523 
buf„r
 = 
	`≤vmÆloc
(
rq°
.
byãs
, &rqst);

524 if(!
buf„r
) {

525 
	`Ârötf
(
°dîr
,"arrayfile_join2: outfileállocation failed \n");

529  
buf„r
;

532 
buf„r
 = (*Ë
	`mÆloc
 (()*
lSize
);

533 i‡(
buf„r
 =
NULL
Ë{
	`Âuts
 ("Mem‹yÉº‹",
°dîr
); 
	`exô
 (2);}

536 
buf„r
 = (*)
	`Æloˇã_mem
(
lSize
);

537 i‡(
buf„r
 =
NULL
Ë{
	`Âuts
 ("RódögÉº‹",
°dîr
); 
	`exô
 (3);}

540  
buf„r
;

543 
	}
}

549 
	$run_ªvcomp
(
ign‹ed
) {

550 
run
 = 0;

553 
ouput_fûe
 = 
	`f›í
 ( 
OUTFILE
 , "w+" );

554 i‡(
ouput_fûe
==
NULL
Ë{
	`Âuts
 ("Fûêîr‹",
°dîr
); 
	`exô
 (1);}

561 
	`ªvcomp_maö
();

571 
	}
}

	@richards.c

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

23 
	~"bích-‰amew‹k.h
"

24 
	~"nvmÆloc_wøp.h
"

25 
	~"IOtimî.h
"

27 
	#Cou¡_1k
 1000

	)

28 
	#Qpktcou¡vÆ_1k
 2322

	)

29 
	#Hﬁdcou¡vÆ_1k
 928

	)

31 
	#Cou¡_1M
 10000*100

	)

32 
	#Qpktcou¡vÆ_1M
 2326410

	)

33 
	#Hﬁdcou¡vÆ_1M
 930563

	)

35 
	#Cou¡_10k
 10000

	)

36 
	#Qpktcou¡vÆ_10k
 23246

	)

37 
	#Hﬁdcou¡vÆ_10k
 9297

	)

40 
	gCou¡
;

41 
	gQpktcou¡vÆ
;

42 
	gHﬁdcou¡vÆ
;

44 
	#TRUE
 1

	)

45 
	#FALSE
 0

	)

46 
	#MAXINT
 32767

	)

48 
	#BUFSIZE
 3

	)

49 
	#I_IDLE
 1

	)

50 
	#I_WORK
 2

	)

51 
	#I_HANDLERA
 3

	)

52 
	#I_HANDLERB
 4

	)

53 
	#I_DEVA
 5

	)

54 
	#I_DEVB
 6

	)

55 
	#PKTBIT
 1

	)

56 
	#WAITBIT
 2

	)

57 
	#HOLDBIT
 4

	)

58 
	#NOTPKTBIT
 !1

	)

59 
	#NOTWAITBIT
 !2

	)

60 
	#NOTHOLDBIT
 0XFFFB

	)

62 
	#S_RUN
 0

	)

63 
	#S_RUNPKT
 1

	)

64 
	#S_WAIT
 2

	)

65 
	#S_WAITPKT
 3

	)

66 
	#S_HOLD
 4

	)

67 
	#S_HOLDPKT
 5

	)

68 
	#S_HOLDWAIT
 6

	)

69 
	#S_HOLDWAITPKT
 7

	)

71 
	#K_DEV
 1000

	)

72 
	#K_WORK
 1001

	)

74 
	s∑ckë


76 
∑ckë
 *
	mp_lök
;

77 
	mp_id
;

78 
	mp_köd
;

79 
	mp_a1
;

80 
	mp_a2
[
BUFSIZE
+1];

83 
	sèsk


85 
èsk
 *
	mt_lök
;

86 
	mt_id
;

87 
	mt_¥i
;

88 
∑ckë
 *
	mt_wkq
;

89 
	mt_°©e
;

90 
	mèsk
 *(*
	mt_‚
)(
	m∑ckë
 *);

91 
	mt_v1
;

92 
	mt_v2
;

95 
	gÆphabë
[28] = "0ABCDEFGHIJKLMNOPQRSTUVWXYZ";

96 
èsk
 *
	gèskèb
[11] = {(task *)10,0,0,0,0,0,0,0,0,0,0};

97 
èsk
 *
	gèskli°
 = 0;

98 
èsk
 *
	gtcb
;

99 
	gèskid
;

100 
	gv1
;

101 
	gv2
;

102 
	gqpktcou¡
 = 0;

103 
	ghﬁdcou¡
 = 0;

104 
	gåacög
 = 0;

105 
	gœyout
 = 0;

107 
≠≥nd
(
∑ckë
 *
pkt
, ∑ckë *
±r
);

109 
¸óãèsk
(
id
,

110 
¥i
,

111 
∑ckë
 *
wkq
,

112 
°©e
,

113 
èsk
 *(*
‚
)(
∑ckë
 *),

114 
v1
,

115 
v2
)

117 
èsk
 *
	gt
 = (èsk *)
Æloˇã_mem
((task));

119 
	gèskèb
[
id
] = 
t
;

120 
	gt
->
	gt_lök
 = 
èskli°
;

121 
	gt
->
	gt_id
 = 
id
;

122 
	gt
->
	gt_¥i
 = 
¥i
;

123 
	gt
->
	gt_wkq
 = 
wkq
;

124 
	gt
->
	gt_°©e
 = 
°©e
;

125 
	gt
->
	gt_‚
 = 
‚
;

126 
	gt
->
	gt_v1
 = 
v1
;

127 
	gt
->
	gt_v2
 = 
v2
;

128 
	gèskli°
 = 
t
;

131 
∑ckë
 *
	$pkt
(
∑ckë
 *
lök
, 
id
, 
köd
)

133 
i
;

134 
∑ckë
 *
p
 = (∑ckë *)
	`Æloˇã_mem
((packet));

136 
i
=0; i<=
BUFSIZE
; i++)

137 
p
->
p_a2
[
i
] = 0;

139 
p
->
p_lök
 = 
lök
;

140 
p
->
p_id
 = 
id
;

141 
p
->
p_köd
 = 
köd
;

142 
p
->
p_a1
 = 0;

144  (
p
);

145 
	}
}

147 
	$åa˚
(
a
)

149 i‡–--
œyout
 <= 0 )

151 
	`¥ötf
("\n");

152 
œyout
 = 50;

155 
	`¥ötf
("%c", 
a
);

156 
	}
}

158 
	$scheduÀ
()

160  
tcb
 != 0 )

162 
∑ckë
 *
pkt
;

163 
èsk
 *
√wtcb
;

165 
pkt
=0;

167  
tcb
->
t_°©e
 )

169 
S_WAITPKT
:

170 
pkt
 = 
tcb
->
t_wkq
;

171 
tcb
->
t_wkq
 = 
pkt
->
p_lök
;

172 
tcb
->
t_°©e
 =Åcb->
t_wkq
 =0 ? 
S_RUN
 : 
S_RUNPKT
;

174 
S_RUN
:

175 
S_RUNPKT
:

176 
èskid
 = 
tcb
->
t_id
;

177 
v1
 = 
tcb
->
t_v1
;

178 
v2
 = 
tcb
->
t_v2
;

179 i‡(
åacög
) {

180 
	`åa˚
(
èskid
+'0');

182 
√wtcb
 = (*(
tcb
->
t_‚
))(
pkt
);

183 
tcb
->
t_v1
 = 
v1
;

184 
tcb
->
t_v2
 = 
v2
;

185 
tcb
 = 
√wtcb
;

188 
S_WAIT
:

189 
S_HOLD
:

190 
S_HOLDPKT
:

191 
S_HOLDWAIT
:

192 
S_HOLDWAITPKT
:

193 
tcb
 =Åcb->
t_lök
;

200 
	}
}

202 
èsk
 *
	$waô
()

204 
tcb
->
t_°©e
 |
WAITBIT
;

205  (
tcb
);

206 
	}
}

208 
èsk
 *
	$hﬁd£lf
()

210 ++
hﬁdcou¡
;

211 
tcb
->
t_°©e
 |
HOLDBIT
;

212  (
tcb
->
t_lök
) ;

213 
	}
}

215 
èsk
 *
	$födtcb
(
id
)

217 
èsk
 *
t
 = 0;

219 i‡(1<=
id
 && id<=()
èskèb
[0])

220 
t
 = 
èskèb
[
id
];

221 i‡(
t
==0Ë
	`¥ötf
("\nBadÅask id %d\n", 
id
);

222 (
t
);

223 
	}
}

225 
èsk
 *
	$ªÀa£
(
id
)

227 
èsk
 *
t
;

229 
t
 = 
	`födtcb
(
id
);

230 i‡–
t
==0 )  (0);

232 
t
->
t_°©e
 &
NOTHOLDBIT
;

233 i‡–
t
->
t_¥i
 > 
tcb
->t_pri )  (t);

235  (
tcb
) ;

236 
	}
}

239 
èsk
 *
	$qpkt
(
∑ckë
 *
pkt
)

241 
èsk
 *
t
;

243 
t
 = 
	`födtcb
(
pkt
->
p_id
);

244 i‡(
t
==0)  (t);

246 
qpktcou¡
++;

248 
pkt
->
p_lök
 = 0;

249 
pkt
->
p_id
 = 
èskid
;

251 i‡(
t
->
t_wkq
==0)

253 
t
->
t_wkq
 = 
pkt
;

254 
t
->
t_°©e
 |
PKTBIT
;

255 i‡(
t
->
t_¥i
 > 
tcb
->t_pri)  (t);

259 
	`≠≥nd
(
pkt
, (
∑ckë
 *)&(
t
->
t_wkq
));

262  (
tcb
);

263 
	}
}

265 
èsk
 *
	$idÀ‚
(
∑ckë
 *
pkt
)

267 i‡–--
v2
==0 )  ( 
	`hﬁd£lf
() );

269 i‡–(
v1
&1) == 0 )

271 
v1
 = ( v1>>1Ë& 
MAXINT
;

272  ( 
	`ªÀa£
(
I_DEVA
) );

276 
v1
 = ( (v1>>1Ë& 
MAXINT
) ^ 0XD008;

277  ( 
	`ªÀa£
(
I_DEVB
) );

279 
	}
}

281 
èsk
 *
	$w‹k‚
(
∑ckë
 *
pkt
)

283 i‡–
pkt
==0 )  ( 
	`waô
() );

286 
i
;

288 
v1
 = 
I_HANDLERA
 + 
I_HANDLERB
 - v1;

289 
pkt
->
p_id
 = 
v1
;

291 
pkt
->
p_a1
 = 0;

292 
i
=0; i<=
BUFSIZE
; i++)

294 
v2
++;

295 i‡–
v2
 > 26 ) v2 = 1;

296 (
pkt
->
p_a2
)[
i
] = 
Æphabë
[
v2
];

298  ( 
	`qpkt
(
pkt
) );

300 
	}
}

302 
èsk
 *
	$h™dÀr‚
(
∑ckë
 *
pkt
)

304 i‡–
pkt
!=0) {

305 
	`≠≥nd
(
pkt
, (
∑ckë
 *)’kt->
p_köd
==
K_WORK
 ? &
v1
 : &
v2
));

308 i‡–
v1
!=0 ) {

309 
cou¡
;

310 
∑ckë
 *
w‹kpkt
 = (∑ckë *)
v1
;

311 
cou¡
 = 
w‹kpkt
->
p_a1
;

313 i‡–
cou¡
 > 
BUFSIZE
 ) {

314 
v1
 = ()(((
∑ckë
 *)v1)->
p_lök
);

315  ( 
	`qpkt
(
w‹kpkt
) );

318 i‡–
v2
!=0 ) {

319 
∑ckë
 *
devpkt
;

321 
devpkt
 = (
∑ckë
 *)
v2
;

322 
v2
 = ()(((
∑ckë
 *)v2)->
p_lök
);

323 
devpkt
->
p_a1
 = 
w‹kpkt
->
p_a2
[
cou¡
];

324 
w‹kpkt
->
p_a1
 = 
cou¡
+1;

325 –
	`qpkt
(
devpkt
) );

328  
	`waô
();

329 
	}
}

331 
èsk
 *
	$dev‚
(
∑ckë
 *
pkt
)

333 i‡–
pkt
==0 )

335 i‡–
v1
==0 )  ( 
	`waô
() );

336 
pkt
 = (
∑ckë
 *)
v1
;

337 
v1
 = 0;

338  ( 
	`qpkt
(
pkt
) );

342 
v1
 = ()
pkt
;

343 i‡(
åacög
Ë
	`åa˚
(
pkt
->
p_a1
);

344  ( 
	`hﬁd£lf
() );

346 
	}
}

348 
	$≠≥nd
(
∑ckë
 *
pkt
, ∑ckë *
±r
)

350 
pkt
->
p_lök
 = 0;

352  
±r
->
p_lök
 )Ötr =Ötr->p_link;

354 
±r
->
p_lök
 = 
pkt
;

355 
	}
}

357 
	$rich¨ds
()

359 
∑ckë
 *
wkq
 = 0;

363 
	`¸óãèsk
(
I_IDLE
, 0, 
wkq
, 
S_RUN
, 
idÀ‚
, 1, 
Cou¡
);

365 
wkq
 = 
	`pkt
(0, 0, 
K_WORK
);

366 
wkq
 = 
	`pkt
(wkq, 0, 
K_WORK
);

368 
	`¸óãèsk
(
I_WORK
, 1000, 
wkq
, 
S_WAITPKT
, 
w‹k‚
, 
I_HANDLERA
, 0);

370 
wkq
 = 
	`pkt
(0, 
I_DEVA
, 
K_DEV
);

371 
wkq
 = 
	`pkt
(wkq, 
I_DEVA
, 
K_DEV
);

372 
wkq
 = 
	`pkt
(wkq, 
I_DEVA
, 
K_DEV
);

374 
	`¸óãèsk
(
I_HANDLERA
, 2000, 
wkq
, 
S_WAITPKT
, 
h™dÀr‚
, 0, 0);

376 
wkq
 = 
	`pkt
(0, 
I_DEVB
, 
K_DEV
);

377 
wkq
 = 
	`pkt
(wkq, 
I_DEVB
, 
K_DEV
);

378 
wkq
 = 
	`pkt
(wkq, 
I_DEVB
, 
K_DEV
);

380 
	`¸óãèsk
(
I_HANDLERB
, 3000, 
wkq
, 
S_WAITPKT
, 
h™dÀr‚
, 0, 0);

382 
wkq
 = 0;

383 
	`¸óãèsk
(
I_DEVA
, 4000, 
wkq
, 
S_WAIT
, 
dev‚
, 0, 0);

384 
	`¸óãèsk
(
I_DEVB
, 5000, 
wkq
, 
S_WAIT
, 
dev‚
, 0, 0);

386 
tcb
 = 
èskli°
;

388 
qpktcou¡
 = 
hﬁdcou¡
 = 0;

392 
åacög
 = 
FALSE
;

393 
œyout
 = 0;

395 
	`scheduÀ
();

403 i‡(
qpktcou¡
 =
Qpktcou¡vÆ
 && 
hﬁdcou¡
 =
Hﬁdcou¡vÆ
) {

407 
	`¥ötf
("RichardsÑesults incorrect");

416 
	}
}

418 
	$run_rich¨ds
(
cou¡
)

420 
cou¡
) {

422 
Cou¡
 = 
Cou¡_1k
;

423 
Qpktcou¡vÆ
 = 
Qpktcou¡vÆ_1k
;

424 
Hﬁdcou¡vÆ
 = 
Hﬁdcou¡vÆ_1k
;

427 
Cou¡
 = 
Cou¡_10k
;

428 
Qpktcou¡vÆ
 = 
Qpktcou¡vÆ_10k
;

429 
Hﬁdcou¡vÆ
 = 
Hﬁdcou¡vÆ_10k
;

432 
Cou¡
 = 
Cou¡_1M
;

433 
Qpktcou¡vÆ
 = 
Qpktcou¡vÆ_1M
;

434 
Hﬁdcou¡vÆ
 = 
Hﬁdcou¡vÆ_1M
;

437 
Cou¡
 = 
cou¡
;

438 
	`¥ötf
("unknown count value forÑichards: benchmark willÑun but"

442  
	`rich¨ds
();

443 
	}
}

	@simple_hash3.h

8 #i‚de‡
SIMPLE_HASH_H


9 
	#SIMPLE_HASH_H


	)

11 
	~<as£π.h
>

12 
	~<°dio.h
>

13 
	~<°dlib.h
>

15 
	~<°döt.h
>

16 
	~"nvmÆloc_wøp.h
"

18 
	tuöt
;

19 
uöt64_t
 
	tui64
;

21 íum { 
	mht_num_¥imes
 = 28 };

25 
	ght_¥ime_li°
[
ht_num_¥imes
] =

35 
	sht_node


37 
ui64
 
	mkey
;

38 
uöt
 
	mvÆ
;

39 
ht_node
 *
	m√xt
;

42 
	sht_ht


44 
	msize
;

45 
ht_node
 ** 
	mtbl
;

46 
	môî_ödex
;

47 
ht_node
 * 
	môî_√xt
;

48 
	môems
;

50 #ifde‡
HT_DEBUG


51 
	mcﬁlisi⁄s
;

56 
ölöe


58 
	$ht_hashcode
(
ht_ht
 *
ht
, 
ui64
 
key
)

60 
key
 = ((key ^ (key >> 5)) ^ 0x01010101);

61  (
key
 % 
ht
->
size
);

62 
	}
}

65 
ht_node
*

66 
	$ht_node_¸óã
(
ui64
 
key
)

68 
ht_node
 *
node
;

70 i‡((
node
 = (
ht_node
 *)
	`ˇŒoc
(1, (ht_node))) == 0)

72 
	`≥º‹
("calloc ht_node");

73 
	`as£π
(0);

74 
	`exô
(1);

77 
node
->
key
 = key;

78  (
node
);

79 
	}
}

81 
ht_ht
 *

82 
	$ht_¸óã
(
size
)

84 
i
 = 0;

85 
ht_ht
 *
ht
 = (ht_hà*)
	`ˇŒoc
(1, (ht_ht));

87 
ht_¥ime_li°
[
i
] < ()
size
)

88 
i
++;

90 
ht
->
size
 = 
ht_¥ime_li°
[
i
];

91 
ht
->
tbl
 = (
ht_node
 **)
	`ˇŒoc
(ht->
size
 , (ht_node *));

93 #ifde‡
HT_DEBUG


94 
ht
->
cﬁlisi⁄s
 = 0;

97  (
ht
);

98 
	}
}

101 
	$ht_de°roy
(
ht_ht
 *
ht
)

103 
ht_node
 *
cur
, *
√xt
;

104 
i
;

106 #ifde‡
HT_DEBUG


107 
chaö_Àn
;

108 
max_chaö_Àn
 = 0;

109 
dísôy
 = 0;

110 
	`Ârötf
(
°dîr
, " HT: sizê %d\n", 
ht
->
size
);

111 
	`Ârötf
(
°dîr
, " HT: iãm† %d\n", 
ht
->
ôems
);

112 
	`Ârötf
(
°dîr
, " HT: cﬁlisi⁄† %d\n", 
ht
->
cﬁlisi⁄s
);

115 
i
=0; i<
ht
->
size
; i++)

117 
√xt
 = 
ht
->
tbl
[
i
];

119 #ifde‡
HT_DEBUG


120 i‡(
√xt
)

121 
dísôy
++;

123 
chaö_Àn
 = 0;

126 
√xt
)

128 
cur
 = 
√xt
;

129 
√xt
 =Çext->next;

130 
	`nv_‰ì
(
cur
);

132 #ifde‡
HT_DEBUG


133 
chaö_Àn
++;

137 #ifde‡
HT_DEBUG


138 i‡(
chaö_Àn
 > 
max_chaö_Àn
)

139 
max_chaö_Àn
 = 
chaö_Àn
;

143 
	`nv_‰ì
(
ht
->
tbl
);

144 
	`nv_‰ì
(
ht
);

146 #ifde‡
HT_DEBUG


147 
	`Ârötf
(
°dîr
, " HT: dísôy %d\n", 
dísôy
);

148 
	`Ârötf
(
°dîr
, " HT: max chaöÜí %d\n\n", 
max_chaö_Àn
);

150 
	}
}

152 
ölöe
 

153 
ht_node
 *

154 
	$ht_föd
(
ht_ht
 *
ht
, 
ui64
 
key
)

156 
hash_code
 = 
	`ht_hashcode
(
ht
, 
key
);

157 
ht_node
 *
node
 = 
ht
->
tbl
[
hash_code
];

159 
node
)

161 i‡(
key
 =
node
->key)

162  (
node
);

163 
node
 =Çode->
√xt
;

166  ((
ht_node
 *)
NULL
);

167 
	}
}

169 
ölöe
 

170 
ht_node
 *

171 
	$ht_föd_√w
(
ht_ht
 *
ht
, 
ui64
 
key
)

173 
hash_code
 = 
	`ht_hashcode
(
ht
, 
key
);

174 
ht_node
 *
¥ev
 = 0, *
node
 = 
ht
->
tbl
[
hash_code
];

176 
node
)

178 i‡(
key
 =
node
->key)

179 (
node
);

181 
¥ev
 = 
node
;

182 
node
 =Çode->
√xt
;

183 #ifde‡
HT_DEBUG


184 
ht
->
cﬁlisi⁄s
++;

188 
ht
->
ôems
++;

189 i‡(
¥ev
)

191  (
¥ev
->
√xt
 = 
	`ht_node_¸óã
(
key
));

195 (
ht
->
tbl
[
hash_code
] = 
	`ht_node_¸óã
(
key
));

197 
	}
}

202 
ölöe
 

203 
ht_node
 *

204 
	$ht_√xt
(
ht_ht
 *
ht
)

206 
ödex
;

207 
ht_node
 *
node
 = 
ht
->
ôî_√xt
;

209 i‡(
node
)

211 
ht
->
ôî_√xt
 = 
node
->
√xt
;

212  (
node
);

216 
ht
->
ôî_ödex
 < ht->
size
)

218 
ödex
 = 
ht
->
ôî_ödex
++;

219 i‡(
ht
->
tbl
[
ödex
])

221 
ht
->
ôî_√xt
 = ht->
tbl
[
ödex
]->
√xt
;

222 (
ht
->
tbl
[
ödex
]);

227  ((
ht_node
 *)
NULL
);

228 
	}
}

230 
ölöe
 

231 
ht_node
 *

232 
	$ht_fú°
(
ht_ht
 *
ht
)

234 
ht
->
ôî_ödex
 = 0;

235 
ht
->
ôî_√xt
 = (
ht_node
 *)
NULL
;

236  (
	`ht_√xt
(
ht
));

237 
	}
}

239 
ölöe


241 
	$ht_cou¡
(
ht_ht
 *
ht
)

243  (
ht
->
ôems
);

244 
	}
}

	@spectralnorm.c

13 
	~<m©h.h
>

14 
	~<sched.h
>

15 
	~<°dio.h
>

16 
	~<°dlib.h
>

18 
	~"bích-‰amew‹k.h
"

20 
	#Ál£
 0

	)

21 
	#åue
 1

	)

24 
	tv2dt
 
	t__©åibuã__
((
	tve˘‹_size
(16)));

25 c⁄° 
v2dt
 
	gv1
 = {1.0, 1.0};

28 
	sP¨am


30 * 
	mu
;

31 * 
	mtmp
;

32 * 
	mv
;

34 
	mN
;

35 
	mN2
;

37 
	mr_begö
;

38 
	mr_íd
;

43 
	$evÆ_A
(
i
, 
j
)

49 
d
 = (((
i
+
j
) * (i+j+1)) >> 1) + i+1;

51  1.0 / 
d
;

52 
	}
}

59 
v2dt


60 
	$evÆ_A_i
(
i
, 
j
)

62 
d1
 = (((
i
+
j
) * (i+j+1)) >> 1) + i+1;

63 
d2
 = (((
i
+1 +
j
) * (i+1 +j+1)) >> 1) + (i+1) +1;

64 
v2dt
 
r
 = {
d1
, 
d2
};

66  
v1
 / 
r
;

67 
	}
}

74 
v2dt


75 
	$evÆ_A_j
(
i
, 
j
)

77 
d1
 = (((
i
+
j
) * (i+j+1)) >> 1) + i+1;

78 
d2
 = (((
i
+ 
j
+1) * (i+ j+1 +1)) >> 1) + i+1;

79 
v2dt
 
r
 = {
d1
, 
d2
};

81  
v1
 / 
r
;

82 
	}
}

87 
	$evÆ_A_times_u
(
P¨am
 *
p
)

90 c⁄° 
v2dt
 *
pU
 = (*Ë
p
->
u
;

91 
i
;

92 
õ
;

94 
i
 = 
p
->
r_begö
, 
õ
 =Ö->
r_íd
; i < ie; i++)

96 
v2dt
 
sum
 = {0, 0};

99 
j
;

100 
j
 = 0; j < 
p
->
N2
; j++)

101 
sum
 +
pU
[
j
] * 
	`evÆ_A_j
(
i
, j*2);

105 *
mem
 = (*Ë&
sum
;

107 
p
->
tmp
[
i
] = 
mem
[0] + mem[1];

111 
j
 = j*2; 
	`__buûtö_ex≥˘
(j < 
p
->
N
, 
Ál£
); j++)

112 
p
->
tmp
[
i
] +
	`evÆ_A
(i, 
j
Ë*Ö->
u
[j];

114 
	}
}

117 
	$evÆ_At_times_u
(
P¨am
 *
p
)

119 c⁄° 
v2dt
 *
pT
 = (*Ë
p
->
tmp
;

120 
i
;

121 
õ
;

123 
i
 = 
p
->
r_begö
, 
õ
 =Ö->
r_íd
; i < ie; i++)

125 
v2dt
 
sum
 = {0, 0};

126 
j
;

128 
j
 = 0; j < 
p
->
N2
; j++)

129 
sum
 +
pT
[
j
] * 
	`evÆ_A_i
(j*2, 
i
);

132 *
mem
 = (*Ë&
sum
;

134 
p
->
v
[
i
] = 
mem
[0] + mem[1];

138 
j
 = j*2; 
	`__buûtö_ex≥˘
(j < 
p
->
N
, 
Ál£
); j++)

139 
p
->
v
[
i
] +
	`evÆ_A
(
j
, iË*Ö->
tmp
[j];

141 
	}
}

150 
	$evÆ_AtA_times_u
(
P¨am
 *
p
)

152 
	`evÆ_A_times_u
(
p
);

153 #¥agm®
omp
 
b¨rõr


155 
	`evÆ_At_times_u
(
p
);

156 #¥agm®
omp
 
b¨rõr


157 
	}
}

164 
	$GëThªadCou¡
()

166 #ifde‡
__GLIBC__


167 
˝u_£t_t
 
cs
;

168 
i
;

169 
cou¡
 = 0;

171 
	`CPU_ZERO
(&
cs
);

172 
	`sched_gëafföôy
(0, (
cs
), &cs);

174 
i
 = 0; i < 16; i++)

175 i‡(
	`CPU_ISSET
(
i
, &
cs
))

176 
cou¡
++;

178  
cou¡
;

182 
	}
}

185 
	$•e˘øl_game
(
N
)

188 
	`__©åibuã__
((
	`Æig√d
(64))Ë
u
[
N
];

189 
	`__©åibuã__
((
	`Æig√d
(64))Ë
tmp
[
N
];

190 
	`__©åibuã__
((
	`Æig√d
(64))Ë
v
[
N
];

192 
vBv
 = 0.0;

193 
vv
 = 0.0;

195 #¥agm®
omp
 
∑øŒñ
 (
sh¨ed
Ë
	`num_thªads
(
	`GëThªadCou¡
())

197 
i
;

199 #¥agm®
omp
 
	`scheduÀ
()

200 
i
 = 0; i < 
N
; i++)

201 
u
[
i
] = 1.0;

207 
thªadid
 = 0;

208 
thªadcou¡
 = 1;

209 
chunk
 = 
N
 / 
thªadcou¡
;

210 
ôe
;

211 
P¨am
 
my_∑øm
;

213 
my_∑øm
.
tmp
 =Åmp;

214 
my_∑øm
.
N
 = N;

215 
my_∑øm
.
N2
 = 
N
/2;

221 
my_∑øm
.
r_begö
 = 
thªadid
 * 
chunk
;

222 
my_∑øm
.
r_íd
 = (
thªadid
 < (
thªadcou¡
 -1)) ?

223 (
my_∑øm
.
r_begö
 + 
chunk
Ë: 
N
;

225 
ôe
 = 0; ite < 10; ite++)

227 
my_∑øm
.
u
 = u;

228 
my_∑øm
.
v
 = v;

229 
	`evÆ_AtA_times_u
(&
my_∑øm
);

231 
my_∑øm
.
u
 = 
v
;

232 
my_∑øm
.
v
 = 
u
;

233 
	`evÆ_AtA_times_u
(&
my_∑øm
);

238 
i
;

240 #¥agm®
omp
 
	`scheduÀ
(Ë
	`ªdu˘i⁄
–+ : 
vBv
, 
vv
 ) 
nowaô


242 
i
 = 0; i < 
N
; i++)

244 
vv
 +
v
[
i
] * v[i];

245 
vBv
 +
u
[
i
] * 
v
[i];

251  
	`sqπ
(
vBv
/
vv
);

252 
	}
}

254 c⁄° 
	gª„ªn˚_ªsu…
 = 1.274224047;

257 
	$•e˘ø ‹m
(
N
)

259 
ªsu…
 = 
	`•e˘øl_game
(
N
);

261 i‡(
N
 =350 && 
	`Ábs
(
ªsu…
 - 
ª„ªn˚_ªsu…
) > .0000001)  -1;

263 
	}
}

265 
	$run_•e˘ø ‹m
(
N
) {

266  
	`•e˘ø ‹m
(
N
);

267 
	}
}

	@test.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~"nv_m≠.h
"

5 
	$maö
(){

7 *
±r
 = 
NULL
;

8 
size_t
 
byãs
;

9 
rq°_°ru˘
 
rq°
;

11 
rq°
.
byãs
 = 100;

12 
rq°
.
pid
 = 99;

13 
rq°
.
id
 = 1;

15 
±r
 = 
	`≤v_ªad
(
byãs
, &
rq°
);

20 
	}
}

	@/usr/include/assert.h

24 #ifdef 
_ASSERT_H


26 #unde‡
_ASSERT_H


27 #unde‡
as£π


28 #unde‡
__ASSERT_VOID_CAST


30 #ifdef 
__USE_GNU


31 #unde‡
as£π_≥º‹


36 
	#_ASSERT_H
 1

	)

37 
	~<„©uªs.h
>

39 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

40 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

42 
	#__ASSERT_VOID_CAST
 ()

	)

50 #ifdef 
NDEBUG


52 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

60 #ifdef 
__USE_GNU


61 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

66 #i‚de‡
_ASSERT_H_DECLS


67 
	#_ASSERT_H_DECLS


	)

68 
__BEGIN_DECLS


71 
	$__as£π_Áû
 (
__c⁄°
 *
__as£πi⁄
, __c⁄° *
__fûe
,

72 
__löe
, 
__c⁄°
 *
__fun˘i⁄
)

73 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

76 
	$__as£π_≥º‹_Áû
 (
__î∫um
, 
__c⁄°
 *
__fûe
,

77 
__löe
,

78 
__c⁄°
 *
__fun˘i⁄
)

79 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

84 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

85 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

88 
__END_DECLS


91 
	#as£π
(
ex¥
) \

92 ((
ex¥
) \

93 ? 
	`__ASSERT_VOID_CAST
 (0) \

94 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

96 #ifdef 
__USE_GNU


97 
	#as£π_≥º‹
(
î∫um
) \

98 (!(
î∫um
) \

99 ? 
	`__ASSERT_VOID_CAST
 (0) \

100 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

108 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

109 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

111 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

112 
	#__ASSERT_FUNCTION
 
__func__


	)

114 
	#__ASSERT_FUNCTION
 ((
__c⁄°
 *Ë0)

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__exã∫_ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__exã∫_ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_XOPEN2K8


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #ifde‡
__USE_XOPEN


38 
	~<sys/°©.h
>

41 #ifdef 
__USE_MISC


42 #i‚de‡
R_OK


45 
	#R_OK
 4

	)

46 
	#W_OK
 2

	)

47 
	#X_OK
 1

	)

48 
	#F_OK
 0

	)

53 #ifde‡
__USE_XOPEN


54 
	#SEEK_SET
 0

	)

55 
	#SEEK_CUR
 1

	)

56 
	#SEEK_END
 2

	)

64 
f˙é
 (
__fd
, 
__cmd
, ...);

72 #i‚de‡
__USE_FILE_OFFSET64


73 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

75 #ifde‡
__REDIRECT


76 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

77 
	`__n⁄nuŒ
 ((1));

79 
	#›í
 
›í64


	)

82 #ifde‡
__USE_LARGEFILE64


83 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

86 #ifde‡
__USE_ATFILE


96 #i‚de‡
__USE_FILE_OFFSET64


97 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

98 
	`__n⁄nuŒ
 ((2));

100 #ifde‡
__REDIRECT


101 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

102 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

104 
	#›í©
 
›í©64


	)

108 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

109 
	`__n⁄nuŒ
 ((2));

117 #i‚de‡
__USE_FILE_OFFSET64


118 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

120 #ifde‡
__REDIRECT


121 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

122 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

124 
	#¸ót
 
¸ót64


	)

127 #ifde‡
__USE_LARGEFILE64


128 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

131 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

132 && !
deföed
 
__USE_POSIX
))

141 
	#F_ULOCK
 0

	)

142 
	#F_LOCK
 1

	)

143 
	#F_TLOCK
 2

	)

144 
	#F_TEST
 3

	)

146 #i‚de‡
__USE_FILE_OFFSET64


147 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

149 #ifde‡
__REDIRECT


150 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

152 
	#lockf
 
lockf64


	)

155 #ifde‡
__USE_LARGEFILE64


156 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

160 #ifde‡
__USE_XOPEN2K


163 #i‚de‡
__USE_FILE_OFFSET64


164 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

165 
__advi£
Ë
__THROW
;

167 #ifde‡
__REDIRECT_NTH


168 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

169 
__off64_t
 
__Àn
, 
__advi£
),

170 
posix_Ádvi£64
);

172 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

175 #ifde‡
__USE_LARGEFILE64


176 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

177 
__advi£
Ë
__THROW
;

185 #i‚de‡
__USE_FILE_OFFSET64


186 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

188 #ifde‡
__REDIRECT


189 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

190 
__off64_t
 
__Àn
),

191 
posix_ÁŒoˇã64
);

193 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

196 #ifde‡
__USE_LARGEFILE64


197 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

203 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
 \

204 && 
deföed
 
__va_¨g_∑ck_Àn


205 
	~<bôs/f˙é2.h
>

208 
__END_DECLS


	@/usr/include/fftw3.h

47 #i‚de‡
FFTW3_H


48 
	#FFTW3_H


	)

50 
	~<°dio.h
>

52 #ifde‡
__˝lu•lus


59 #i‡!
deföed
(
FFTW_NO_Com∂ex
Ë&& deföed(
_Com∂ex_I
Ë&& deföed(
com∂ex
Ë&& deföed(
I
)

60 
	#FFTW_DEFINE_COMPLEX
(
R
, 
C
ËR 
	t_Com∂ex
 
	tC


	)

62 
	tFFTW_DEFINE_COMPLEX
(
	tR
, 
	tC
Ë
R
 C[2]

	)

65 
	#FFTW_CONCAT
(
¥efix
, 
«me
Ë¥efix ## 
	)
name

66 
	#FFTW_MANGLE_DOUBLE
(
«me
Ë
	`FFTW_CONCAT
(
f·w_
,Çame)

	)

67 
	#FFTW_MANGLE_FLOAT
(
«me
Ë
	`FFTW_CONCAT
(
f·wf_
,Çame)

	)

68 
	#FFTW_MANGLE_LONG_DOUBLE
(
«me
Ë
	`FFTW_CONCAT
(
f·wl_
,Çame)

	)

77 #i‡
deföed
(
FFTW_DLL
Ë&& (deföed(
_WIN32
Ë|| deföed(
__WIN32__
))

79 #i‡
deföed
(
COMPILING_FFTW
)

80 
	#FFTW_EXTERN
 
	`__de˛•ec
(
dŒexp‹t
)

	)

82 
	#FFTW_EXTERN
 
	`__de˛•ec
(
dŒimp‹t
)

	)

85 
	#FFTW_EXTERN
 

	)

88 
	ef·w_r2r_köd_do_nŸ_u£_me
 {

89 
FFTW_R2HC
=0, 
FFTW_HC2R
=1, 
FFTW_DHT
=2,

90 
FFTW_REDFT00
=3, 
FFTW_REDFT01
=4, 
FFTW_REDFT10
=5, 
FFTW_REDFT11
=6,

91 
FFTW_RODFT00
=7, 
FFTW_RODFT01
=8, 
FFTW_RODFT10
=9, 
FFTW_RODFT11
=10

94 
	sf·w_iodim_do_nŸ_u£_me
 {

95 
	gn
;

96 
	gis
;

97 
	gos
;

100 
	~<°ddef.h
>

101 
	sf·w_iodim64_do_nŸ_u£_me
 {

102 
±rdiff_t
 
	gn
;

103 
±rdiff_t
 
	gis
;

104 
±rdiff_t
 
	gos
;

116 
	#FFTW_DEFINE_API
(
X
, 
R
, 
C
) \

118 
	`FFTW_DEFINE_COMPLEX
(
R
, 
C
); \

120 
	`X
(
	t∂™_s
Ë*
	tX
(
	t∂™
); \

122 
f·w_iodim_do_nŸ_u£_me
 
	tX
(
	tiodim
); \

123 
f·w_iodim64_do_nŸ_u£_me
 
	tX
(
	tiodim64
); \

125 
f·w_r2r_köd_do_nŸ_u£_me
 
	tX
(
	tr2r_köd
); \

127 
FFTW_EXTERN
 
	`X
(
execuã
)(c⁄° X(
∂™
Ë
p
); \

129 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·
)(
ønk
, c⁄° *
n
, \

130 
C
 *
ö
, C *
out
, 
sign
, 
Êags
); \

132 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·_1d
)(
n
, 
C
 *
ö
, C *
out
, 
sign
, \

133 
Êags
); \

134 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·_2d
)(
n0
, 
n1
, \

135 
C
 *
ö
, C *
out
, 
sign
, 
Êags
); \

136 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·_3d
)(
n0
, 
n1
, 
n2
, \

137 
C
 *
ö
, C *
out
, 
sign
, 
Êags
); \

139 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_m™y_d·
)(
ønk
, c⁄° *
n
, \

140 
howm™y
, \

141 
C
 *
ö
, c⁄° *
öembed
, \

142 
i°ride
, 
idi°
, \

143 
C
 *
out
, c⁄° *
⁄embed
, \

144 
o°ride
, 
odi°
, \

145 
sign
, 
Êags
); \

147 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru_d·
)(
ønk
, c⁄° X(
iodim
Ë*
dims
, \

148 
howm™y_ønk
, \

149 c⁄° 
	`X
(
iodim
Ë*
howm™y_dims
, \

150 
C
 *
ö
, C *
out
, \

151 
sign
, 
Êags
); \

152 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru_•lô_d·
)(
ønk
, c⁄° X(
iodim
Ë*
dims
, \

153 
howm™y_ønk
, \

154 c⁄° 
	`X
(
iodim
Ë*
howm™y_dims
, \

155 
R
 *
ri
, R *
ii
, R *
ro
, R *
io
, \

156 
Êags
); \

158 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru64_d·
)(
ønk
, \

159 c⁄° 
	`X
(
iodim64
Ë*
dims
, \

160 
howm™y_ønk
, \

161 c⁄° 
	`X
(
iodim64
Ë*
howm™y_dims
, \

162 
C
 *
ö
, C *
out
, \

163 
sign
, 
Êags
); \

164 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru64_•lô_d·
)(
ønk
, \

165 c⁄° 
	`X
(
iodim64
Ë*
dims
, \

166 
howm™y_ønk
, \

167 c⁄° 
	`X
(
iodim64
Ë*
howm™y_dims
, \

168 
R
 *
ri
, R *
ii
, R *
ro
, R *
io
, \

169 
Êags
); \

171 
FFTW_EXTERN
 
	`X
(
execuã_d·
)(c⁄° X(
∂™
Ë
p
, 
C
 *
ö
, C *
out
); \

172 
FFTW_EXTERN
 
	`X
(
execuã_•lô_d·
)(c⁄° X(
∂™
Ë
p
, 
R
 *
ri
, R *
ii
, \

173 
R
 *
ro
, R *
io
); \

175 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_m™y_d·_r2c
)(
ønk
, c⁄° *
n
, \

176 
howm™y
, \

177 
R
 *
ö
, c⁄° *
öembed
, \

178 
i°ride
, 
idi°
, \

179 
C
 *
out
, c⁄° *
⁄embed
, \

180 
o°ride
, 
odi°
, \

181 
Êags
); \

183 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·_r2c
)(
ønk
, c⁄° *
n
, \

184 
R
 *
ö
, 
C
 *
out
, 
Êags
); \

186 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·_r2c_1d
)(
n
,
R
 *
ö
,
C
 *
out
,
Êags
); \

187 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·_r2c_2d
)(
n0
, 
n1
, \

188 
R
 *
ö
, 
C
 *
out
, 
Êags
); \

189 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·_r2c_3d
)(
n0
, 
n1
, \

190 
n2
, \

191 
R
 *
ö
, 
C
 *
out
, 
Êags
); \

194 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_m™y_d·_c2r
)(
ønk
, c⁄° *
n
, \

195 
howm™y
, \

196 
C
 *
ö
, c⁄° *
öembed
, \

197 
i°ride
, 
idi°
, \

198 
R
 *
out
, c⁄° *
⁄embed
, \

199 
o°ride
, 
odi°
, \

200 
Êags
); \

202 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·_c2r
)(
ønk
, c⁄° *
n
, \

203 
C
 *
ö
, 
R
 *
out
, 
Êags
); \

205 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·_c2r_1d
)(
n
,
C
 *
ö
,
R
 *
out
,
Êags
); \

206 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·_c2r_2d
)(
n0
, 
n1
, \

207 
C
 *
ö
, 
R
 *
out
, 
Êags
); \

208 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_d·_c2r_3d
)(
n0
, 
n1
, \

209 
n2
, \

210 
C
 *
ö
, 
R
 *
out
, 
Êags
); \

212 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru_d·_r2c
)(
ønk
, c⁄° X(
iodim
Ë*
dims
, \

213 
howm™y_ønk
, \

214 c⁄° 
	`X
(
iodim
Ë*
howm™y_dims
, \

215 
R
 *
ö
, 
C
 *
out
, \

216 
Êags
); \

217 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru_d·_c2r
)(
ønk
, c⁄° X(
iodim
Ë*
dims
, \

218 
howm™y_ønk
, \

219 c⁄° 
	`X
(
iodim
Ë*
howm™y_dims
, \

220 
C
 *
ö
, 
R
 *
out
, \

221 
Êags
); \

223 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru_•lô_d·_r2c
)( \

224 
ønk
, c⁄° 
	`X
(
iodim
Ë*
dims
, \

225 
howm™y_ønk
, \

226 c⁄° 
	`X
(
iodim
Ë*
howm™y_dims
, \

227 
R
 *
ö
, R *
ro
, R *
io
, \

228 
Êags
); \

229 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru_•lô_d·_c2r
)( \

230 
ønk
, c⁄° 
	`X
(
iodim
Ë*
dims
, \

231 
howm™y_ønk
, \

232 c⁄° 
	`X
(
iodim
Ë*
howm™y_dims
, \

233 
R
 *
ri
, R *
ii
, R *
out
, \

234 
Êags
); \

236 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru64_d·_r2c
)(
ønk
, \

237 c⁄° 
	`X
(
iodim64
Ë*
dims
, \

238 
howm™y_ønk
, \

239 c⁄° 
	`X
(
iodim64
Ë*
howm™y_dims
, \

240 
R
 *
ö
, 
C
 *
out
, \

241 
Êags
); \

242 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru64_d·_c2r
)(
ønk
, \

243 c⁄° 
	`X
(
iodim64
Ë*
dims
, \

244 
howm™y_ønk
, \

245 c⁄° 
	`X
(
iodim64
Ë*
howm™y_dims
, \

246 
C
 *
ö
, 
R
 *
out
, \

247 
Êags
); \

249 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru64_•lô_d·_r2c
)( \

250 
ønk
, c⁄° 
	`X
(
iodim64
Ë*
dims
, \

251 
howm™y_ønk
, \

252 c⁄° 
	`X
(
iodim64
Ë*
howm™y_dims
, \

253 
R
 *
ö
, R *
ro
, R *
io
, \

254 
Êags
); \

255 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru64_•lô_d·_c2r
)( \

256 
ønk
, c⁄° 
	`X
(
iodim64
Ë*
dims
, \

257 
howm™y_ønk
, \

258 c⁄° 
	`X
(
iodim64
Ë*
howm™y_dims
, \

259 
R
 *
ri
, R *
ii
, R *
out
, \

260 
Êags
); \

262 
FFTW_EXTERN
 
	`X
(
execuã_d·_r2c
)(c⁄° X(
∂™
Ë
p
, 
R
 *
ö
, 
C
 *
out
); \

263 
FFTW_EXTERN
 
	`X
(
execuã_d·_c2r
)(c⁄° X(
∂™
Ë
p
, 
C
 *
ö
, 
R
 *
out
); \

265 
FFTW_EXTERN
 
	`X
(
execuã_•lô_d·_r2c
)(c⁄° X(
∂™
Ë
p
, \

266 
R
 *
ö
, R *
ro
, R *
io
); \

267 
FFTW_EXTERN
 
	`X
(
execuã_•lô_d·_c2r
)(c⁄° X(
∂™
Ë
p
, \

268 
R
 *
ri
, R *
ii
, R *
out
); \

270 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_m™y_r2r
)(
ønk
, c⁄° *
n
, \

271 
howm™y
, \

272 
R
 *
ö
, c⁄° *
öembed
, \

273 
i°ride
, 
idi°
, \

274 
R
 *
out
, c⁄° *
⁄embed
, \

275 
o°ride
, 
odi°
, \

276 c⁄° 
	`X
(
r2r_köd
Ë*
köd
, 
Êags
); \

278 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_r2r
)(
ønk
, c⁄° *
n
, 
R
 *
ö
, R *
out
, \

279 c⁄° 
	`X
(
r2r_köd
Ë*
köd
, 
Êags
); \

281 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_r2r_1d
)(
n
, 
R
 *
ö
, R *
out
, \

282 
	`X
(
r2r_köd
Ë
köd
, 
Êags
); \

283 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_r2r_2d
)(
n0
, 
n1
, 
R
 *
ö
, R *
out
, \

284 
	`X
(
r2r_köd
Ë
köd0
, X‘2r_ködË
köd1
, \

285 
Êags
); \

286 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_r2r_3d
)(
n0
, 
n1
, 
n2
, \

287 
R
 *
ö
, R *
out
, 
	`X
(
r2r_köd
Ë
köd0
, \

288 
	`X
(
r2r_köd
Ë
köd1
, X‘2r_ködË
köd2
, \

289 
Êags
); \

291 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru_r2r
)(
ønk
, c⁄° X(
iodim
Ë*
dims
, \

292 
howm™y_ønk
, \

293 c⁄° 
	`X
(
iodim
Ë*
howm™y_dims
, \

294 
R
 *
ö
, R *
out
, \

295 c⁄° 
	`X
(
r2r_köd
Ë*
köd
, 
Êags
); \

297 
FFTW_EXTERN
 
	`X
(
∂™
ËX(
∂™_guru64_r2r
)(
ønk
, c⁄° X(
iodim64
Ë*
dims
, \

298 
howm™y_ønk
, \

299 c⁄° 
	`X
(
iodim64
Ë*
howm™y_dims
, \

300 
R
 *
ö
, R *
out
, \

301 c⁄° 
	`X
(
r2r_köd
Ë*
köd
, 
Êags
); \

303 
FFTW_EXTERN
 
	`X
(
execuã_r2r
)(c⁄° X(
∂™
Ë
p
, 
R
 *
ö
, R *
out
); \

305 
FFTW_EXTERN
 
	`X
(
de°roy_∂™
)(X(
∂™
Ë
p
); \

306 
FFTW_EXTERN
 
	`X
(
f‹gë_wisdom
)(); \

307 
FFTW_EXTERN
 
	`X
(
˛ónup
)(); \

309 
FFTW_EXTERN
 
	`X
(
£t_timñimô
)(); \

311 
FFTW_EXTERN
 
	`X
(
∂™_wôh_¡hªads
)(
¡hªads
); \

312 
FFTW_EXTERN
 
	`X
(
öô_thªads
)(); \

313 
FFTW_EXTERN
 
	`X
(
˛ónup_thªads
)(); \

315 
FFTW_EXTERN
 
	`X
(
exp‹t_wisdom_to_fûe
)(
FILE
 *
ouçut_fûe
); \

316 
FFTW_EXTERN
 *
	`X
(
exp‹t_wisdom_to_°rög
)(); \

317 
FFTW_EXTERN
 
	`X
(
exp‹t_wisdom
)((*
wrôe_ch¨
)(
c
, *), \

318 *
d©a
); \

319 
FFTW_EXTERN
 
	`X
(
imp‹t_sy°em_wisdom
)(); \

320 
FFTW_EXTERN
 
	`X
(
imp‹t_wisdom_‰om_fûe
)(
FILE
 *
öput_fûe
); \

321 
FFTW_EXTERN
 
	`X
(
imp‹t_wisdom_‰om_°rög
)(c⁄° *
öput_°rög
); \

322 
FFTW_EXTERN
 
	`X
(
imp‹t_wisdom
)((*
ªad_ch¨
)(*), *
d©a
); \

324 
FFTW_EXTERN
 
	`X
(
Âröt_∂™
)(c⁄° X(
∂™
Ë
p
, 
FILE
 *
ouçut_fûe
); \

325 
FFTW_EXTERN
 
	`X
(
¥öt_∂™
)(c⁄° X(
∂™
Ë
p
); \

327 
FFTW_EXTERN
 *
	`X
(
mÆloc
)(
size_t
 
n
); \

328 
FFTW_EXTERN
 
	`X
(
‰ì
)(*
p
); \

330 
FFTW_EXTERN
 
	`X
(
Ê›s
)(c⁄° X(
∂™
Ë
p
, \

331 *
add
, *
mul
, *
fmas
); \

332 
FFTW_EXTERN
 
	`X
(
e°im©e_co°
)(c⁄° X(
∂™
Ë
p
); \

334 
FFTW_EXTERN
 c⁄° 
	`X
(
vîsi⁄
)[]; \

335 
FFTW_EXTERN
 c⁄° 
	`X
(
cc
)[]; \

336 
FFTW_EXTERN
 c⁄° 
	`X
(
codñë_›tim
)[];

	)

341 
FFTW_DEFINE_API
(
FFTW_MANGLE_DOUBLE
, , 
f·w_com∂ex
)

342 
FFTW_DEFINE_API
(
FFTW_MANGLE_FLOAT
, , 
f·wf_com∂ex
)

343 
FFTW_DEFINE_API
(
FFTW_MANGLE_LONG_DOUBLE
, , 
f·wl_com∂ex
)

345 
	#FFTW_FORWARD
 (-1)

	)

346 
	#FFTW_BACKWARD
 (+1)

	)

348 
	#FFTW_NO_TIMELIMIT
 (-1.0)

	)

351 
	#FFTW_MEASURE
 (0U)

	)

352 
	#FFTW_DESTROY_INPUT
 (1U << 0)

	)

353 
	#FFTW_UNALIGNED
 (1U << 1)

	)

354 
	#FFTW_CONSERVE_MEMORY
 (1U << 2)

	)

355 
	#FFTW_EXHAUSTIVE
 (1U << 3Ë

	)

356 
	#FFTW_PRESERVE_INPUT
 (1U << 4Ë

	)

357 
	#FFTW_PATIENT
 (1U << 5Ë

	)

358 
	#FFTW_ESTIMATE
 (1U << 6)

	)

361 
	#FFTW_ESTIMATE_PATIENT
 (1U << 7)

	)

362 
	#FFTW_BELIEVE_PCOST
 (1U << 8)

	)

363 
	#FFTW_NO_DFT_R2HC
 (1U << 9)

	)

364 
	#FFTW_NO_NONTHREADED
 (1U << 10)

	)

365 
	#FFTW_NO_BUFFERING
 (1U << 11)

	)

366 
	#FFTW_NO_INDIRECT_OP
 (1U << 12)

	)

367 
	#FFTW_ALLOW_LARGE_GENERIC
 (1U << 13Ë

	)

368 
	#FFTW_NO_RANK_SPLITS
 (1U << 14)

	)

369 
	#FFTW_NO_VRANK_SPLITS
 (1U << 15)

	)

370 
	#FFTW_NO_VRECURSE
 (1U << 16)

	)

371 
	#FFTW_NO_SIMD
 (1U << 17)

	)

372 
	#FFTW_NO_SLOW
 (1U << 18)

	)

373 
	#FFTW_NO_FIXED_RADIX_LARGE_N
 (1U << 19)

	)

374 
	#FFTW_ALLOW_PRUNING
 (1U << 20)

	)

375 
	#FFTW_WISDOM_ONLY
 (1U << 21)

	)

377 #ifde‡
__˝lu•lus


	@/usr/include/inttypes.h

23 #i‚de‡
_INTTYPES_H


24 
	#_INTTYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<°döt.h
>

31 #i‚de‡
____gwch¨_t_deföed


32 #ifde‡
__˝lu•lus


33 
	#__gwch¨_t
 
wch¨_t


	)

34 #ñi‡
deföed
 
__WCHAR_TYPE__


35 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

37 
	#__√ed_wch¨_t


	)

38 
	~<°ddef.h
>

39 
wch¨_t
 
	t__gwch¨_t
;

41 
	#____gwch¨_t_deföed
 1

	)

47 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_FORMAT_MACROS


49 #i‡
__WORDSIZE
 == 64

50 
	#__PRI64_PREFIX
 "l"

	)

51 
	#__PRIPTR_PREFIX
 "l"

	)

53 
	#__PRI64_PREFIX
 "Œ"

	)

54 
	#__PRIPTR_PREFIX


	)

60 
	#PRId8
 "d"

	)

61 
	#PRId16
 "d"

	)

62 
	#PRId32
 "d"

	)

63 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

65 
	#PRIdLEAST8
 "d"

	)

66 
	#PRIdLEAST16
 "d"

	)

67 
	#PRIdLEAST32
 "d"

	)

68 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIdFAST8
 "d"

	)

71 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

72 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

73 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

76 
	#PRIi8
 "i"

	)

77 
	#PRIi16
 "i"

	)

78 
	#PRIi32
 "i"

	)

79 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

81 
	#PRIiLEAST8
 "i"

	)

82 
	#PRIiLEAST16
 "i"

	)

83 
	#PRIiLEAST32
 "i"

	)

84 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIiFAST8
 "i"

	)

87 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

88 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

89 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

92 
	#PRIo8
 "o"

	)

93 
	#PRIo16
 "o"

	)

94 
	#PRIo32
 "o"

	)

95 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

97 
	#PRIoLEAST8
 "o"

	)

98 
	#PRIoLEAST16
 "o"

	)

99 
	#PRIoLEAST32
 "o"

	)

100 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIoFAST8
 "o"

	)

103 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

104 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

105 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

108 
	#PRIu8
 "u"

	)

109 
	#PRIu16
 "u"

	)

110 
	#PRIu32
 "u"

	)

111 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

113 
	#PRIuLEAST8
 "u"

	)

114 
	#PRIuLEAST16
 "u"

	)

115 
	#PRIuLEAST32
 "u"

	)

116 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIuFAST8
 "u"

	)

119 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

120 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

121 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

124 
	#PRIx8
 "x"

	)

125 
	#PRIx16
 "x"

	)

126 
	#PRIx32
 "x"

	)

127 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

129 
	#PRIxLEAST8
 "x"

	)

130 
	#PRIxLEAST16
 "x"

	)

131 
	#PRIxLEAST32
 "x"

	)

132 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIxFAST8
 "x"

	)

135 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

136 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

137 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

140 
	#PRIX8
 "X"

	)

141 
	#PRIX16
 "X"

	)

142 
	#PRIX32
 "X"

	)

143 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

145 
	#PRIXLEAST8
 "X"

	)

146 
	#PRIXLEAST16
 "X"

	)

147 
	#PRIXLEAST32
 "X"

	)

148 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

150 
	#PRIXFAST8
 "X"

	)

151 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

152 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

153 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

157 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

158 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

159 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

160 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

161 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

162 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

166 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

167 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

168 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

169 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

170 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

171 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

177 
	#SCNd8
 "hhd"

	)

178 
	#SCNd16
 "hd"

	)

179 
	#SCNd32
 "d"

	)

180 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

182 
	#SCNdLEAST8
 "hhd"

	)

183 
	#SCNdLEAST16
 "hd"

	)

184 
	#SCNdLEAST32
 "d"

	)

185 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNdFAST8
 "hhd"

	)

188 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

189 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

190 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

193 
	#SCNi8
 "hhi"

	)

194 
	#SCNi16
 "hi"

	)

195 
	#SCNi32
 "i"

	)

196 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

198 
	#SCNiLEAST8
 "hhi"

	)

199 
	#SCNiLEAST16
 "hi"

	)

200 
	#SCNiLEAST32
 "i"

	)

201 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNiFAST8
 "hhi"

	)

204 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

205 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

206 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

209 
	#SCNu8
 "hhu"

	)

210 
	#SCNu16
 "hu"

	)

211 
	#SCNu32
 "u"

	)

212 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

214 
	#SCNuLEAST8
 "hhu"

	)

215 
	#SCNuLEAST16
 "hu"

	)

216 
	#SCNuLEAST32
 "u"

	)

217 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNuFAST8
 "hhu"

	)

220 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

221 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

222 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

225 
	#SCNo8
 "hho"

	)

226 
	#SCNo16
 "ho"

	)

227 
	#SCNo32
 "o"

	)

228 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

230 
	#SCNoLEAST8
 "hho"

	)

231 
	#SCNoLEAST16
 "ho"

	)

232 
	#SCNoLEAST32
 "o"

	)

233 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNoFAST8
 "hho"

	)

236 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

237 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

238 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

241 
	#SCNx8
 "hhx"

	)

242 
	#SCNx16
 "hx"

	)

243 
	#SCNx32
 "x"

	)

244 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

246 
	#SCNxLEAST8
 "hhx"

	)

247 
	#SCNxLEAST16
 "hx"

	)

248 
	#SCNxLEAST32
 "x"

	)

249 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

251 
	#SCNxFAST8
 "hhx"

	)

252 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

253 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

254 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

258 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

259 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

260 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

261 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

262 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

265 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

266 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

267 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

268 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

269 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

274 
	g__BEGIN_DECLS


276 #i‡
__WORDSIZE
 == 64

281 
	mquŸ
;

282 
	mªm
;

283 } 
	timaxdiv_t
;

290 
	mquŸ
;

291 
	mªm
;

292 } 
	timaxdiv_t
;

298 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

301 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

302 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

305 
ötmax_t
 
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

306 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

309 
uötmax_t
 
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

310 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

313 
ötmax_t
 
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

314 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

315 
__THROW
;

318 
uötmax_t
 
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

319 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

320 
__THROW
;

322 #ifde‡
__USE_EXTERN_INLINES


324 #i‡
__WORDSIZE
 == 64

326 
	$__°πﬁ_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

327 **
__ª°ri˘
 
__íd±r
,

328 
__ba£
, 
__group
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

331 
__exã∫_ölöe
 
ötmax_t


332 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

333 
ba£
))

335  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

336 
	}
}

338 
	$__°πoul_öã∫Æ
 (
__c⁄°
 *

339 
__ª°ri˘
 
__≈å
,

340 ** 
__ª°ri˘
 
__íd±r
,

341 
__ba£
, 
__group
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

344 
__exã∫_ölöe
 
uötmax_t


345 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

346 
ba£
))

348  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

349 
	}
}

351 
	$__wc°ﬁ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

352 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

353 
__ba£
, 
__group
)

354 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

356 
__exã∫_ölöe
 
ötmax_t


357 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

358 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

360  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

361 
	}
}

363 
	$__wc°oul_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

364 
__ª°ri˘
 
__≈å
,

365 
__gwch¨_t
 **

366 
__ª°ri˘
 
__íd±r
,

367 
__ba£
, 
__group
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

370 
__exã∫_ölöe
 
uötmax_t


371 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

372 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

374  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

375 
	}
}

379 
__exãnsi⁄__


380 
	$__°πﬁl_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

381 **
__ª°ri˘
 
__íd±r
,

382 
__ba£
, 
__group
)

383 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

385 
__exã∫_ölöe
 
ötmax_t


386 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

387 
ba£
))

389  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

390 
	}
}

392 
__exãnsi⁄__


393 
	$__°πouŒ_öã∫Æ
 (
__c⁄°
 *

394 
__ª°ri˘
 
__≈å
,

396 
__ª°ri˘
 
__íd±r
,

397 
__ba£
,

398 
__group
)

399 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

401 
__exã∫_ölöe
 
uötmax_t


402 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

403 
ba£
))

405  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

406 
	}
}

408 
__exãnsi⁄__


409 
	$__wc°ﬁl_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

410 
__ª°ri˘
 
__≈å
,

411 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

412 
__ba£
, 
__group
)

413 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

415 
__exã∫_ölöe
 
ötmax_t


416 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

417 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

419  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

420 
	}
}

423 
__exãnsi⁄__


424 
	$__wc°ouŒ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

425 
__ª°ri˘
 
__≈å
,

426 
__gwch¨_t
 **

427 
__ª°ri˘
 
__íd±r
,

428 
__ba£
,

429 
__group
)

430 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

432 
__exã∫_ölöe
 
uötmax_t


433 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

434 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

436  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

437 
	}
}

442 
	g__END_DECLS


	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/unistd.h

1 #i‚de‡
_LINUX_UNISTD_H_


2 
	#_LINUX_UNISTD_H_


	)

7 
	~<asm/uni°d.h
>

	@/usr/include/malloc.h

21 #i‚de‡
_MALLOC_H


22 
	#_MALLOC_H
 1

	)

24 
	~<„©uªs.h
>

25 
	~<°ddef.h
>

26 
	~<°dio.h
>

27 
	#__mÆloc_±r_t
 *

	)

30 
	#__mÆloc_size_t
 
size_t


	)

31 
	#__mÆloc_±rdiff_t
 
±rdiff_t


	)

33 #ifde‡
__GNUC__


35 
	#__MALLOC_P
(
¨gs
Ë¨g†
__THROW


	)

38 
	#__MALLOC_PMT
(
¨gs
Ë
	)
args

42 
	#__MALLOC_P
(
¨gs
Ë
	)
args

43 
	#__MALLOC_PMT
(
¨gs
Ë
	)
args

48 
__BEGIN_DECLS


51 *
mÆloc
 
__MALLOC_P
 ((
size_t
 
__size
)Ë
__©åibuã_mÆloc__
 
__wur
;

54 *
ˇŒoc
 
__MALLOC_P
 ((
size_t
 
__nmemb
, size_à
__size
))

55 
__©åibuã_mÆloc__
 
__wur
;

62 *
ªÆloc
 
__MALLOC_P
 ((*
__±r
, 
size_t
 
__size
))

63 
__©åibuã_w¨n_unu£d_ªsu…__
;

66 
‰ì
 
__MALLOC_P
 ((*
__±r
));

69 
c‰ì
 
__MALLOC_P
 ((*
__±r
));

72 *
memÆign
 
__MALLOC_P
 ((
size_t
 
__Æignmít
, size_à
__size
))

73 
__©åibuã_mÆloc__
 
__wur
;

76 *
vÆloc
 
__MALLOC_P
 ((
size_t
 
__size
))

77 
__©åibuã_mÆloc__
 
__wur
;

81 * 
pvÆloc
 
__MALLOC_P
 ((
size_t
 
__size
))

82 
__©åibuã_mÆloc__
 
__wur
;

86 *(*
__m‹ec‹e
Ë
__MALLOC_PMT
 ((
±rdiff_t
 
__size
));

89 *
__deÁu…_m‹ec‹e
 
__MALLOC_P
 ((
±rdiff_t
 
__size
))

90 
__©åibuã_mÆloc__
;

94 
	smÆlöfo
 {

95 
	m¨ía
;

96 
	m‹dblks
;

97 
	msmblks
;

98 
	mhblks
;

99 
	mhblkhd
;

100 
	musmblks
;

101 
	mfsmblks
;

102 
	mu‹dblks
;

103 
	mf‹dblks
;

104 
	mkìpco°
;

108 
mÆlöfo
 mÆlöfÿ
__MALLOC_P
 (());

111 #i‚de‡
M_MXFAST


112 
	#M_MXFAST
 1

	)

114 #i‚de‡
M_NLBLKS


115 
	#M_NLBLKS
 2

	)

117 #i‚de‡
M_GRAIN


118 
	#M_GRAIN
 3

	)

120 #i‚de‡
M_KEEP


121 
	#M_KEEP
 4

	)

125 
	#M_TRIM_THRESHOLD
 -1

	)

126 
	#M_TOP_PAD
 -2

	)

127 
	#M_MMAP_THRESHOLD
 -3

	)

128 
	#M_MMAP_MAX
 -4

	)

129 
	#M_CHECK_ACTION
 -5

	)

130 
	#M_PERTURB
 -6

	)

131 
	#M_ARENA_TEST
 -7

	)

132 
	#M_ARENA_MAX
 -8

	)

135 
mÆl›t
 
__MALLOC_P
 ((
__∑øm
, 
__vÆ
));

139 
mÆloc_åim
 
__MALLOC_P
 ((
size_t
 
__∑d
));

143 
size_t
 
mÆloc_ußbÀ_size
 
__MALLOC_P
 ((*
__±r
));

146 
mÆloc_°©s
 
__MALLOC_P
 (());

149 
mÆloc_öfo
 (
__›ti⁄s
, 
FILE
 *
__Â
);

152 *
mÆloc_gë_°©e
 
__MALLOC_P
 (());

156 
mÆloc_£t_°©e
 
__MALLOC_P
 ((*
__±r
));

161 (*
__mÆloc_öôülize_hook
Ë
	`__MALLOC_PMT
 (());

163 (*
__‰ì_hook
Ë
	`__MALLOC_PMT
 ((*
__±r
,

164 
__c⁄°
 
__mÆloc_±r_t
));

165 *(*
__mÆloc_hook
Ë
	`__MALLOC_PMT
 ((
size_t
 
__size
,

166 
__c⁄°
 
__mÆloc_±r_t
));

167 *(*
__ªÆloc_hook
Ë
	`__MALLOC_PMT
 ((*
__±r
, 
size_t
 
__size
,

168 
__c⁄°
 
__mÆloc_±r_t
));

169 *(*
__memÆign_hook
Ë
	`__MALLOC_PMT
 ((
size_t
 
__Æignmít
,

170 
size_t
 
__size
,

171 
__c⁄°
 
__mÆloc_±r_t
));

172 (*
__a·î_m‹ec‹e_hook
Ë
	`__MALLOC_PMT
 (());

175 
__mÆloc_check_öô
 
	`__MALLOC_P
 (());

178 
__END_DECLS


	@/usr/include/math.h

25 #i‚def 
_MATH_H


26 
	#_MATH_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/huge_vÆ.h
>

35 #ifde‡
__USE_ISOC99


36 
	~<bôs/huge_vÆf.h
>

37 
	~<bôs/huge_vÆl.h
>

40 
	~<bôs/öf.h
>

43 
	~<bôs/«n.h
>

47 
	~<bôs/m©hdef.h
>

54 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

56 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

57 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

58 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

59 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

61 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

62 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

63 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

64 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

65 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

67 
	#_MdoubÀ_
 

	)

68 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

69 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

70 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

71 
	~<bôs/m©hˇŒs.h
>

72 #unde‡
_MdoubÀ_


73 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


74 #unde‡
_MdoubÀ_END_NAMESPACE


75 #unde‡
__MATH_PRECNAME


77 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


83 #i‚de‡
_MÊﬂt_


84 
	#_MÊﬂt_
 

	)

86 
	#_MdoubÀ_
 
_MÊﬂt_


	)

87 #ifde‡
__STDC__


88 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

90 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
f
 
	)
r

92 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

93 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

94 
	~<bôs/m©hˇŒs.h
>

95 #unde‡
_MdoubÀ_


96 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


97 #unde‡
_MdoubÀ_END_NAMESPACE


98 #unde‡
__MATH_PRECNAME


100 #i‡(
__STDC__
 - 0 || 
__GNUC__
 - 0) \

101 && (!
deföed
 
__NO_LONG_DOUBLE_MATH
 \

102 || 
deföed
 
__LDBL_COMPAT
 \

103 || !
deföed
 
_LIBC
)

104 #ifde‡
__LDBL_COMPAT


106 #ifde‡
__USE_ISOC99


107 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

108 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

109 #ifde‡
__REDIRECT_NTH


110 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

111 
__∆dbl_√xâow¨df
)

112 
	`__©åibuã__
 ((
__c⁄°__
));

113 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

114 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

115 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

116 (
__x
, 
__y
),

117 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

122 #i‡
deföed
 
__LDBL_COMPAT
 || deföed 
__NO_LONG_DOUBLE_MATH


124 #unde‡
__MATHDECL_1


125 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

126 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

127 
¨gs
, 
Æüs
)

	)

128 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

129 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

134 #i‚de‡
_Ml⁄g_doubÀ_


135 
	#_Ml⁄g_doubÀ_
 

	)

137 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

138 #ifde‡
__STDC__


139 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

141 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
l
 
	)
r

143 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

144 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

145 
	~<bôs/m©hˇŒs.h
>

146 #unde‡
_MdoubÀ_


147 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


148 #unde‡
_MdoubÀ_END_NAMESPACE


149 #unde‡
__MATH_PRECNAME


154 #unde‡
__MATHDECL_1


155 #unde‡
__MATHDECL


156 #unde‡
__MATHCALL


159 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


161 
signgam
;

166 #ifde‡
__USE_ISOC99


204 
FP_NAN
,

205 
	#FP_NAN
 
FP_NAN


	)

206 
FP_INFINITE
,

207 
	#FP_INFINITE
 
FP_INFINITE


	)

208 
FP_ZERO
,

209 
	#FP_ZERO
 
FP_ZERO


	)

210 
FP_SUBNORMAL
,

211 
	#FP_SUBNORMAL
 
FP_SUBNORMAL


	)

212 
FP_NORMAL


213 
	#FP_NORMAL
 
FP_NORMAL


	)

217 #ifde‡
__NO_LONG_DOUBLE_MATH


218 
	#Â˛assify
(
x
) \

219 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

221 
	#Â˛assify
(
x
) \

222 ( (
x
) ==  () \

223 ? 
	`__Â˛assifyf
 (
x
) \

224 :  (
x
) ==  () \

225 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

229 #ifde‡
__NO_LONG_DOUBLE_MATH


230 
	#signbô
(
x
) \

231 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

233 
	#signbô
(
x
) \

234 ( (
x
) ==  () \

235 ? 
	`__signbôf
 (
x
) \

236 :  (
x
) ==  () \

237 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

241 #ifde‡
__NO_LONG_DOUBLE_MATH


242 
	#isföôe
(
x
) \

243 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

245 
	#isföôe
(
x
) \

246 ( (
x
) ==  () \

247 ? 
	`__föôef
 (
x
) \

248 :  (
x
) ==  () \

249 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

253 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

257 #ifde‡
__NO_LONG_DOUBLE_MATH


258 
	#i¢™
(
x
) \

259 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

261 
	#i¢™
(
x
) \

262 ( (
x
) ==  () \

263 ? 
	`__i¢™f
 (
x
) \

264 :  (
x
) ==  () \

265 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

269 #ifde‡
__NO_LONG_DOUBLE_MATH


270 
	#isöf
(
x
) \

271 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

273 
	#isöf
(
x
) \

274 ( (
x
) ==  () \

275 ? 
	`__isöff
 (
x
) \

276 :  (
x
) ==  () \

277 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

281 
	#MATH_ERRNO
 1

	)

282 
	#MATH_ERREXCEPT
 2

	)

287 #i‚de‡
__FAST_MATH__


288 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

293 #ifdef 
__USE_MISC


297 
_IEEE_
 = -1,

298 
_SVID_
,

299 
_XOPEN_
,

300 
_POSIX_
,

301 
_ISOC_


302 } 
	t_LIB_VERSION_TYPE
;

307 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

311 #ifde‡
__USE_SVID


317 #ifde‡
__˝lu•lus


318 
__ex˚±i⁄


320 
ex˚±i⁄


323 
ty≥
;

324 *
«me
;

325 
¨g1
;

326 
¨g2
;

327 
ªtvÆ
;

328 
	}
};

330 #ifde‡
__˝lu•lus


331 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

333 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

336 
	#X_TLOSS
 1.41484755040568800000e+16

	)

339 
	#DOMAIN
 1

	)

340 
	#SING
 2

	)

341 
	#OVERFLOW
 3

	)

342 
	#UNDERFLOW
 4

	)

343 
	#TLOSS
 5

	)

344 
	#PLOSS
 6

	)

347 
	#HUGE
 3.40282347e+38F

	)

351 #ifde‡
__USE_XOPEN


353 
	#MAXFLOAT
 3.40282347e+38F

	)

360 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


361 
	#M_E
 2.7182818284590452354

	)

362 
	#M_LOG2E
 1.4426950408889634074

	)

363 
	#M_LOG10E
 0.43429448190325182765

	)

364 
	#M_LN2
 0.69314718055994530942

	)

365 
	#M_LN10
 2.30258509299404568402

	)

366 
	#M_PI
 3.14159265358979323846

	)

367 
	#M_PI_2
 1.57079632679489661923

	)

368 
	#M_PI_4
 0.78539816339744830962

	)

369 
	#M_1_PI
 0.31830988618379067154

	)

370 
	#M_2_PI
 0.63661977236758134308

	)

371 
	#M_2_SQRTPI
 1.12837916709551257390

	)

372 
	#M_SQRT2
 1.41421356237309504880

	)

373 
	#M_SQRT1_2
 0.70710678118654752440

	)

379 #ifde‡
__USE_GNU


380 
	#M_El
 2.7182818284590452353602874713526625L

	)

381 
	#M_LOG2El
 1.4426950408889634073599246810018921L

	)

382 
	#M_LOG10El
 0.4342944819032518276511289189166051L

	)

383 
	#M_LN2l
 0.6931471805599453094172321214581766L

	)

384 
	#M_LN10l
 2.3025850929940456840179914546843642L

	)

385 
	#M_PIl
 3.1415926535897932384626433832795029L

	)

386 
	#M_PI_2l
 1.5707963267948966192313216916397514L

	)

387 
	#M_PI_4l
 0.7853981633974483096156608458198757L

	)

388 
	#M_1_PIl
 0.3183098861837906715377675267450287L

	)

389 
	#M_2_PIl
 0.6366197723675813430755350534900574L

	)

390 
	#M_2_SQRTPIl
 1.1283791670955125738961589031215452L

	)

391 
	#M_SQRT2l
 1.4142135623730950488016887242096981L

	)

392 
	#M_SQRT1_2l
 0.7071067811865475244008443621048490L

	)

399 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


400 
	#__NO_MATH_INLINES
 1

	)

403 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

410 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

411 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

412 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

413 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

414 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

415 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

419 #ifde‡
__USE_EXTERN_INLINES


420 
	~<bôs/m©hölöe.h
>

423 #ifde‡
__USE_ISOC99


427 #i‚de‡
isgª©î


428 
	#isgª©î
(
x
, 
y
) \

429 (
__exãnsi⁄__
 \

430 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

431 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

435 #i‚de‡
isgª©îequÆ


436 
	#isgª©îequÆ
(
x
, 
y
) \

437 (
__exãnsi⁄__
 \

438 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

439 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

443 #i‚de‡
i¶ess


444 
	#i¶ess
(
x
, 
y
) \

445 (
__exãnsi⁄__
 \

446 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

447 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

451 #i‚de‡
i¶es£quÆ


452 
	#i¶es£quÆ
(
x
, 
y
) \

453 (
__exãnsi⁄__
 \

454 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

455 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

459 #i‚de‡
i¶essgª©î


460 
	#i¶essgª©î
(
x
, 
y
) \

461 (
__exãnsi⁄__
 \

462 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

463 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

467 #i‚de‡
isun‹dîed


468 
	#isun‹dîed
(
u
, 
v
) \

469 (
__exãnsi⁄__
 \

470 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

471 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

476 
	g__END_DECLS


	@/usr/include/proc/readproc.h

1 #i‚de‡
PROCPS_PROC_READPROC_H


2 
	#PROCPS_PROC_READPROC_H


	)

13 
	~"¥o˝s.h
"

14 
	~"pwˇche.h
"

16 
	#SIGNAL_STRING


	)

18 
	gEXTERN_C_BEGIN


31 
	#XXXID
 
tid


	)

38 
	s¥oc_t
 {

41 
	mtid
,

42 
	mµid
;

44 
	mp˝u
;

46 
	m°©e
,

47 
	m∑d_1
,

48 
	m∑d_2
,

49 
	m∑d_3
;

52 
	mutime
,

53 
	m°ime
,

55 
	mcutime
,

56 
	mc°ime
,

57 
	m°¨t_time
;

58 #ifde‡
SIGNAL_STRING


61 
	msig«l
[18],

62 
	mblocked
[18],

63 
	msigign‹e
[18],

64 
	msigˇtch
[18],

65 
	m_sig≤d
[18];

69 
	msig«l
,

70 
	mblocked
,

71 
	msigign‹e
,

72 
	msigˇtch
,

73 
	m_sig≤d
;

75 
KLONG


76 
	m°¨t_code
,

77 
	míd_code
,

78 
	m°¨t_°ack
,

79 
	mk°k_e•
,

80 
	mk°k_eù
,

81 
	mwch™
;

83 
	m¥i‹ôy
,

84 
	mni˚
,

85 
	mrss
,

86 
	mÆ¨m
,

88 
	msize
,

89 
	mªsidít
,

90 
	msh¨e
,

91 
	mås
,

92 
	mÃs
,

93 
	mdrs
,

94 
	mdt
;

96 
	mvm_size
,

97 
	mvm_lock
,

98 
	mvm_rss
,

99 
	mvm_d©a
,

100 
	mvm_°ack
,

101 
	mvm_exe
,

102 
	mvm_lib
,

103 
	mπ¥io
,

104 
	msched
,

105 
	mvsize
,

106 
	mrss_æim
,

107 
	mÊags
,

108 
	mmö_Êt
,

109 
	mmaj_Êt
,

110 
	mcmö_Êt
,

111 
	mcmaj_Êt
;

113 **
	mívú⁄
,

114 **
	mcmdlöe
;

117 
	meu£r
[
P_G_SZ
],

118 
	mru£r
[
P_G_SZ
],

119 
	msu£r
[
P_G_SZ
],

120 
	mfu£r
[
P_G_SZ
],

121 
	mrgroup
[
P_G_SZ
],

122 
	megroup
[
P_G_SZ
],

123 
	msgroup
[
P_G_SZ
],

124 
	mfgroup
[
P_G_SZ
],

125 
	mcmd
[16];

126 
¥oc_t


127 *
	mrög
,

128 *
	m√xt
;

130 
	mpgΩ
,

131 
	m£ssi⁄
,

132 
	m∆wp
,

133 
	mtgid
,

134 
	mây
,

135 
	meuid
, 
	megid
,

136 
	mruid
, 
	mrgid
,

137 
	msuid
, 
	msgid
,

138 
	mfuid
, 
	mfgid
,

139 
	mçgid
,

140 
	mexô_sig«l
,

141 
	m¥o˚ss‹
;

142 **
	mcgroup
;

143 } 
	t¥oc_t
;

149 
	~<sys/ty≥s.h
>

150 
	~<dúít.h
>

151 
	~<uni°d.h
>

153 
	#PROCPATHLEN
 64

154 

	)

155 
	sPROCTAB
 {

156 
DIR
* 
	m¥ocfs
;

158 
DIR
* 
	mèskdú
;

160 
pid_t
 
	mèskdú_u£r
;

161 
	mdid_Áke
;

162 (*
	mfödî
)(
PROCTAB
 *
ª°ri˘
 c⁄°, 
¥oc_t
 *restrict const);

163 
	m¥oc_t
*(*
	mªadî
)(
PROCTAB
 *
ª°ri˘
 c⁄°, 
¥oc_t
 *restrict const);

164 (*
	mèskfödî
)(
PROCTAB
 *
ª°ri˘
 c⁄°, c⁄° 
¥oc_t
 *restrict const,Öroc_t *restrict const, *restrict const);

165 
	m¥oc_t
*(*
	mèskªadî
)(
PROCTAB
 *
ª°ri˘
 c⁄°, c⁄° 
¥oc_t
 *restrict const,Öroc_t *restrict const, *restrict const);

166 
pid_t
* 
	mpids
;

167 
uid_t
* 
	muids
;

168 
	mnuid
;

169 
	mi
;

170 
	mÊags
;

171 
	mu
;

172 * 
	mvp
;

173 
	m∑th
[
PROCPATHLEN
];

174 
	m∑thÀn
;

175 } 
	tPROCTAB
;

178 
PROCTAB
* 
›í¥oc
(
Êags
, ... );

180 
	s¥oc_d©a_t
 {

181 
¥oc_t
 **
	mèb
;

182 
¥oc_t
 **
	m¥oc
;

183 
¥oc_t
 **
	mèsk
;

184 
	mn
;

185 
	m≈roc
;

186 
	m¡ask
;

187 } 
	t¥oc_d©a_t
;

189 
¥oc_d©a_t
 *
ªad¥o˘ab2
((*
w™t_¥oc
)(
¥oc_t
 *
buf
), (*
w™t_èsk
)’roc_à*buf), 
PROCTAB
 *
ª°ri˘
 c⁄° 
PT
);

196 
¥oc_t
** 
	`ªad¥o˘ab
(
Êags
, ... );

199 
	`˛o£¥oc
(
PROCTAB
* 
PT
);

202 
¥oc_t
* 
	`ªad¥oc
(
PROCTAB
 *
ª°ri˘
 c⁄° 
PT
,Öroc_à*ª°ri˘ 
p
);

203 
¥oc_t
* 
	`ªadèsk
(
PROCTAB
 *
ª°ri˘
 c⁄° 
PT
, c⁄°Öroc_à*ª°ri˘ c⁄° 
p
,Öroc_à*ª°ri˘ 
t
);

206 
	`ªad_cmdlöe
(*
ª°ri˘
 c⁄° 
d°
, 
sz
, 
pid
);

208 
	`look_up_our_£lf
(
¥oc_t
 *
p
);

212 
	`‰ì¥oc
(
¥oc_t
* 
p
);

215 
¥oc_t
 * 
	`gë_¥oc_°©s
(
pid_t
 
pid
,Öroc_à*
p
);

231 
	#PROC_FILLMEM
 0x0001

232 
	#PROC_FILLCOM
 0x0002

233 
	#PROC_FILLENV
 0x0004

234 
	#PROC_FILLUSR
 0x0008

235 
	#PROC_FILLGRP
 0x0010

236 
	#PROC_FILLSTATUS
 0x0020

237 
	#PROC_FILLSTAT
 0x0040

238 
	#PROC_FILLWCHAN
 0x0080

239 
	#PROC_FILLARG
 0x0100

240 

	)

241 
	#PROC_LOOSE_TASKS
 0x0200

242 

	)

243 
	#PROC_FILLCGROUP
 0x0400

244 

	)

246 
	#PROC_PID
 0x1000

247 
	#PROC_UID
 0x4000

248 

	)

250 
	#PROC_SPARE_1
 0x01000000

	)

251 
	#PROC_SPARE_2
 0x02000000

	)

252 
	#PROC_SPARE_3
 0x04000000

	)

253 
	#PROC_SPARE_4
 0x08000000

	)

255 
EXTERN_C_END


	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	#__√ed_sig£t_t


	)

29 
	~<sig«l.h
>

30 
	~<bôs/±hªadty≥s.h
>

31 
	~<bôs/£tjmp.h
>

32 
	~<bôs/w‹dsize.h
>

38 
	mPTHREAD_CREATE_JOINABLE
,

39 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

40 
	mPTHREAD_CREATE_DETACHED


41 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

48 
	mPTHREAD_MUTEX_TIMED_NP
,

49 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

50 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

51 
	mPTHREAD_MUTEX_ADAPTIVE_NP


52 #ifde‡
__USE_UNIX98


54 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

55 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

56 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

57 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


59 #ifde‡
__USE_GNU


61 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


66 #ifde‡
__USE_XOPEN2K


70 
	mPTHREAD_MUTEX_STALLED
,

71 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

72 
	mPTHREAD_MUTEX_ROBUST
,

73 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


78 #ifde‡
__USE_UNIX98


82 
	mPTHREAD_PRIO_NONE
,

83 
	mPTHREAD_PRIO_INHERIT
,

84 
	mPTHREAD_PRIO_PROTECT


90 #i‡
__WORDSIZE
 == 64

91 
	#PTHREAD_MUTEX_INITIALIZER
 \

92 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

93 #ifde‡
__USE_GNU


94 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

98 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

99 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

102 
	#PTHREAD_MUTEX_INITIALIZER
 \

103 { { 0, 0, 0, 0, 0, { 0 } } }

	)

104 #ifde‡
__USE_GNU


105 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

109 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

110 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

116 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


119 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

120 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

121 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

122 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


126 
	#PTHREAD_RWLOCK_INITIALIZER
 \

127 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

128 #ifde‡
__USE_GNU


129 #i‡
__WORDSIZE
 == 64

130 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

132 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

134 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


135 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

136 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

137 0, 0, 0, 0 } }

	)

139 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

140 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

141 0 } }

	)

151 
	mPTHREAD_INHERIT_SCHED
,

152 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

153 
	mPTHREAD_EXPLICIT_SCHED


154 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

161 
	mPTHREAD_SCOPE_SYSTEM
,

162 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

163 
	mPTHREAD_SCOPE_PROCESS


164 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

171 
	mPTHREAD_PROCESS_PRIVATE
,

172 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

173 
	mPTHREAD_PROCESS_SHARED


174 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

180 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

184 
	s_±hªad_˛ónup_buf„r


186 (*
	m__routöe
) (*);

187 *
	m__¨g
;

188 
	m__ˇn˚…y≥
;

189 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

195 
	mPTHREAD_CANCEL_ENABLE
,

196 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

197 
	mPTHREAD_CANCEL_DISABLE


198 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

202 
	mPTHREAD_CANCEL_DEFERRED
,

203 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

204 
	mPTHREAD_CANCEL_ASYNCHRONOUS


205 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

207 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

211 
	#PTHREAD_ONCE_INIT
 0

	)

214 #ifde‡
__USE_XOPEN2K


218 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

222 
__BEGIN_DECLS


227 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

228 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

229 *(*
__°¨t_routöe
) (*),

230 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

236 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

244 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

246 #ifde‡
__USE_GNU


249 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

257 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

258 
__c⁄°
 
time•ec
 *
__ab°ime
);

265 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

269 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

272 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

280 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

283 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

284 
__THROW
 
	`__n⁄nuŒ
 ((1));

287 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

288 *
__dëach°©e
)

289 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

292 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

293 
__dëach°©e
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

298 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

299 
size_t
 *
__gu¨dsize
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

303 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

304 
size_t
 
__gu¨dsize
)

305 
__THROW
 
	`__n⁄nuŒ
 ((1));

309 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


310 
__©å
,

311 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

315 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

316 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


317 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

320 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


321 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

322 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

325 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

326 
__THROW
 
	`__n⁄nuŒ
 ((1));

329 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


330 
__©å
, *
__ª°ri˘
 
__öhîô
)

331 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

334 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

335 
__öhîô
)

336 
__THROW
 
	`__n⁄nuŒ
 ((1));

340 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

341 *
__ª°ri˘
 
__sc›e
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

345 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

346 
__THROW
 
	`__n⁄nuŒ
 ((1));

349 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


350 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

351 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

357 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

358 *
__°ackaddr
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

362 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


363 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

364 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

369 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

370 
size_t
 
__°acksize
)

371 
__THROW
 
	`__n⁄nuŒ
 ((1));

373 #ifde‡
__USE_XOPEN2K


375 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

376 **
__ª°ri˘
 
__°ackaddr
,

377 
size_t
 *
__ª°ri˘
 
__°acksize
)

378 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

383 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

384 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

387 #ifde‡
__USE_GNU


390 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

391 
size_t
 
__˝u£tsize
,

392 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

397 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

398 
size_t
 
__˝u£tsize
,

399 
˝u_£t_t
 *
__˝u£t
)

400 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

406 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

407 
__THROW
 
	`__n⁄nuŒ
 ((2));

415 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

416 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

417 
__THROW
 
	`__n⁄nuŒ
 ((3));

420 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

421 *
__ª°ri˘
 
__pﬁicy
,

422 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

423 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

426 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

427 
__THROW
;

430 #ifde‡
__USE_UNIX98


432 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

435 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

438 #ifde‡
__USE_GNU


443 
	$±hªad_yõld
 (Ë
__THROW
;

448 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

449 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

450 
__THROW
 
	`__n⁄nuŒ
 ((3));

453 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

454 
˝u_£t_t
 *
__˝u£t
)

455 
__THROW
 
	`__n⁄nuŒ
 ((3));

468 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

469 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

480 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

484 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

487 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

492 
	`±hªad_ã°ˇn˚l
 ();

501 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

502 
__mask_was_ßved
;

503 } 
__ˇn˚l_jmp_buf
[1];

504 *
__∑d
[4];

505 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

508 #i‚de‡
__˛ónup_f˘_©åibuã


509 
	#__˛ónup_f˘_©åibuã


	)

514 
	s__±hªad_˛ónup_‰ame


516 (*
__ˇn˚l_routöe
) (*);

517 *
__ˇn˚l_¨g
;

518 
__do_ô
;

519 
__ˇn˚l_ty≥
;

522 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


523 #ifde‡
__˝lu•lus


525 ˛as†
	c__±hªad_˛ónup_˛ass


527 (*
__ˇn˚l_routöe
) (*);

528 *
__ˇn˚l_¨g
;

529 
__do_ô
;

530 
__ˇn˚l_ty≥
;

532 
public
:

533 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

534 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

535 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

536 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

537 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

538 &
__ˇn˚l_ty≥
); 
	}
}

539 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

549 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

551 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

555 
	#±hªad_˛ónup_p›
(
execuã
) \

556 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

557 } 0)

	)

559 #ifde‡
__USE_GNU


563 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

565 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

566 
__˛‰ame
.
	`__de„r
 ()

	)

571 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

572 
__˛‰ame
.
	`__ª°‹e
 (); \

573 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

574 } 0)

	)

581 
__exã∫_ölöe
 

582 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

584 i‡(
__‰ame
->
__do_ô
)

585 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

586 
	}
}

595 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

597 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

598 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

599 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

600 .
__do_ô
 = 1 };

	)

604 
	#±hªad_˛ónup_p›
(
execuã
) \

605 
__˛‰ame
.
__do_ô
 = (
execuã
); \

606 } 0)

	)

608 #ifde‡
__USE_GNU


612 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

614 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

615 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

616 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

617 .
__do_ô
 = 1 }; \

618 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

619 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

624 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

625 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

626 
__˛‰ame
.
__do_ô
 = (
execuã
); \

627 } 0)

	)

638 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

640 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

641 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

642 *
__ˇn˚l_¨g
 = (
¨g
); \

643 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

644 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

645 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

647 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

648 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

652 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

653 dÿ{

	)

654 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

655 
__˛ónup_f˘_©åibuã
;

659 
	#±hªad_˛ónup_p›
(
execuã
) \

662 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 i‡(
execuã
) \

664 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

665 } 0)

	)

666 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

667 
__˛ónup_f˘_©åibuã
;

669 #ifde‡
__USE_GNU


673 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

675 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

676 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

677 *
__ˇn˚l_¨g
 = (
¨g
); \

678 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

679 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

680 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

682 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

683 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

687 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

688 dÿ{

	)

689 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

690 
__˛ónup_f˘_©åibuã
;

695 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

698 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

699 i‡(
execuã
) \

700 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

701 
	}
} 0)

	)

702 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

703 
__˛ónup_f˘_©åibuã
;

707 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

708 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

709 #i‚de‡
SHARED


710 
	`__©åibuã__
 ((
__wók__
))

716 
__jmp_buf_èg
;

717 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

723 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

724 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1));

728 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

729 
__THROW
 
	`__n⁄nuŒ
 ((1));

732 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

733 
__THROW
 
	`__n⁄nuŒ
 ((1));

736 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

737 
__THROW
 
	`__n⁄nuŒ
 ((1));

739 #ifde‡
__USE_XOPEN2K


741 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

742 
__c⁄°
 
time•ec
 *
__ª°ri˘


743 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

747 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

748 
__THROW
 
	`__n⁄nuŒ
 ((1));

751 #ifde‡
__USE_UNIX98


753 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

754 
__ª°ri˘
 
__muãx
,

755 *
__ª°ri˘
 
__¥io˚ûög
)

756 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

760 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

761 
__¥io˚ûög
,

762 *
__ª°ri˘
 
__ﬁd_˚ûög
)

763 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

767 #ifde‡
__USE_XOPEN2K8


769 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

770 
__THROW
 
	`__n⁄nuŒ
 ((1));

771 #ifde‡
__USE_GNU


772 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

773 
__THROW
 
	`__n⁄nuŒ
 ((1));

782 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

783 
__THROW
 
	`__n⁄nuŒ
 ((1));

786 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

787 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

791 
__ª°ri˘
 
__©å
,

792 *
__ª°ri˘
 
__psh¨ed
)

793 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

796 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

797 
__psh¨ed
)

798 
__THROW
 
	`__n⁄nuŒ
 ((1));

800 #ifde‡
__USE_UNIX98


802 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


803 
__©å
, *
__ª°ri˘
 
__köd
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

809 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1));

813 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

814 
__ª°ri˘
 
__©å
,

815 *
__ª°ri˘
 
__¥Ÿocﬁ
)

816 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

820 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

821 
__¥Ÿocﬁ
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

825 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

826 
__ª°ri˘
 
__©å
,

827 *
__ª°ri˘
 
__¥io˚ûög
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

831 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

832 
__¥io˚ûög
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1));

836 #ifde‡
__USE_XOPEN2K


838 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

839 *
__robu°√ss
)

840 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

841 #ifde‡
__USE_GNU


842 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

843 *
__robu°√ss
)

844 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

848 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

849 
__robu°√ss
)

850 
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_GNU


852 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

853 
__robu°√ss
)

854 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


864 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

865 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


866 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

869 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

870 
__THROW
 
	`__n⁄nuŒ
 ((1));

873 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

874 
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

880 #ifde‡
__USE_XOPEN2K


882 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

883 
__c⁄°
 
time•ec
 *
__ª°ri˘


884 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

888 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

889 
__THROW
 
	`__n⁄nuŒ
 ((1));

892 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

893 
__THROW
 
	`__n⁄nuŒ
 ((1));

895 #ifde‡
__USE_XOPEN2K


897 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

898 
__c⁄°
 
time•ec
 *
__ª°ri˘


899 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

903 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

904 
__THROW
 
	`__n⁄nuŒ
 ((1));

910 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

911 
__THROW
 
	`__n⁄nuŒ
 ((1));

914 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

915 
__THROW
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

919 
__ª°ri˘
 
__©å
,

920 *
__ª°ri˘
 
__psh¨ed
)

921 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

924 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

925 
__psh¨ed
)

926 
__THROW
 
	`__n⁄nuŒ
 ((1));

929 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

930 
__ª°ri˘
 
__©å
,

931 *
__ª°ri˘
 
__¥ef
)

932 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

935 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

936 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

944 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

945 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


946 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

949 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

954 
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

966 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

967 
	`__n⁄nuŒ
 ((1, 2));

976 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

977 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

978 
__c⁄°
 
time•ec
 *
__ª°ri˘


979 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

984 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

985 
__THROW
 
	`__n⁄nuŒ
 ((1));

988 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

989 
__THROW
 
	`__n⁄nuŒ
 ((1));

992 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

993 
__ª°ri˘
 
__©å
,

994 *
__ª°ri˘
 
__psh¨ed
)

995 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

998 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

999 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1001 #ifde‡
__USE_XOPEN2K


1003 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1004 
__ª°ri˘
 
__©å
,

1005 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1009 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1010 
__˛ockid_t
 
__˛ock_id
)

1011 
__THROW
 
	`__n⁄nuŒ
 ((1));

1015 #ifde‡
__USE_XOPEN2K


1020 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1021 
__THROW
 
	`__n⁄nuŒ
 ((1));

1024 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1025 
__THROW
 
	`__n⁄nuŒ
 ((1));

1028 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROW
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1045 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1046 
__©å
, 
__cou¡
)

1047 
__THROW
 
	`__n⁄nuŒ
 ((1));

1050 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1051 
__THROW
 
	`__n⁄nuŒ
 ((1));

1054 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1059 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1060 
__THROW
 
	`__n⁄nuŒ
 ((1));

1063 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1064 
__THROW
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1068 
__ª°ri˘
 
__©å
,

1069 *
__ª°ri˘
 
__psh¨ed
)

1070 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1073 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1074 
__psh¨ed
)

1075 
__THROW
 
	`__n⁄nuŒ
 ((1));

1087 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1088 (*
__de°r_fun˘i⁄
) (*))

1089 
__THROW
 
	`__n⁄nuŒ
 ((1));

1092 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1095 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1098 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1099 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1102 #ifde‡
__USE_XOPEN2K


1104 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1105 
__˛ockid_t
 *
__˛ock_id
)

1106 
__THROW
 
	`__n⁄nuŒ
 ((2));

1121 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1122 (*
__∑ª¡
) (),

1123 (*
__chûd
Ë()Ë
__THROW
;

1126 #ifde‡
__USE_EXTERN_INLINES


1128 
__exã∫_ölöe
 

1129 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1131  
__thªad1
 =
__thªad2
;

1132 
	}
}

1135 
	g__END_DECLS


	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

35 
	~<bôs/sched.h
>

37 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

40 
__BEGIN_DECLS


43 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

44 
__THROW
;

47 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

50 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

51 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

54 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

57 
	$sched_yõld
 (Ë
__THROW
;

60 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

63 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

66 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

69 #ifde‡
__USE_GNU


71 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

72 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

73 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

74 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

75 
˝u£ç
)

	)

76 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

77 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

79 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

80 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

81 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

82 
˝u£ç
)

	)

83 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

84 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

86 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

87 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

88 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

89 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

91 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

92 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

93 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

94 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

95 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

96 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

97 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

98 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

99 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

101 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

104 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

105 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

106 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

110 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

111 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

114 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

115 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

118 
__END_DECLS


	@/usr/include/setjmp.h

23 #i‚def 
_SETJMP_H


24 
	#_SETJMP_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/£tjmp.h
>

31 
	~<bôs/sig£t.h
>

35 
	s__jmp_buf_èg


41 
__jmp_buf
 
	m__jmpbuf
;

42 
	m__mask_was_ßved
;

43 
__sig£t_t
 
	m__ßved_mask
;

47 
__BEGIN_NAMESPACE_STD


49 
__jmp_buf_èg
 
	tjmp_buf
[1];

53 
	$£tjmp
 (
jmp_buf
 
__ív
Ë
__THROW
;

55 
__END_NAMESPACE_STD


60 
	$__sig£tjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__ßvemask
Ë
__THROW
;

62 #i‚def 
__FAVOR_BSD


65 
	$_£tjmp
 (
__jmp_buf_èg
 
__ív
[1]Ë
__THROW
;

69 
	#£tjmp
(
ív
Ë
	`_£tjmp
 (ív)

	)

74 
	#£tjmp
(
ív
Ë
	`£tjmp
 (ív)

	)

78 
__BEGIN_NAMESPACE_STD


82 
	$l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

83 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_NAMESPACE_STD


87 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


91 
	$_l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

92 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

96 #ifdef 
__USE_POSIX


100 
__jmp_buf_èg
 
	tsigjmp_buf
[1];

104 
	#sig£tjmp
(
ív
, 
ßvemask
Ë
	`__sig£tjmp
 (ív, savemask)

	)

110 
	$sigl⁄gjmp
 (
sigjmp_buf
 
__ív
, 
__vÆ
)

111 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

116 #i‡
__USE_FORTIFY_LEVEL
 > 0

117 
	~<bôs/£tjmp2.h
>

120 
__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

73 #ifde‡
__USE_POSIX199309


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

79 
	~<bôs/sigöfo.h
>

84 (*
	t__sigh™dÀr_t
) ();

89 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

90 
__THROW
;

91 #ifde‡
__USE_GNU


92 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

99 
__BEGIN_NAMESPACE_STD


100 #ifde‡
__USE_BSD


101 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

102 
__THROW
;

105 #ifde‡
__REDIRECT_NTH


106 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

107 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

108 
__sysv_sig«l
);

110 
	#sig«l
 
__sysv_sig«l


	)

113 
__END_NAMESPACE_STD


115 #ifde‡
__USE_XOPEN


118 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

119 
__THROW
;

125 #ifde‡
__USE_POSIX


126 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

129 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


133 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

136 
__BEGIN_NAMESPACE_STD


138 
	$øi£
 (
__sig
Ë
__THROW
;

139 
__END_NAMESPACE_STD


141 #ifde‡
__USE_SVID


143 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

144 
__THROW
;

145 
	$gsig«l
 (
__sig
Ë
__THROW
;

148 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


150 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 #ifde‡
__USE_XOPEN2K


155 
	`psigöfo
 (
__c⁄°
 
sigöfo_t
 *
__pöfo
, __c⁄° *
__s
);

168 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

170 #ifde‡
__FAVOR_BSD


173 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

175 #ifde‡
__USE_XOPEN


176 #ifde‡
__GNUC__


177 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

180 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

186 #ifde‡
__USE_BSD


193 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

196 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

202 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

206 #ifde‡
__USE_MISC


207 
	#NSIG
 
_NSIG


	)

210 #ifde‡
__USE_GNU


211 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

215 #ifde‡
__USE_BSD


216 
__sigh™dÀr_t
 
	tsig_t
;

219 #ifde‡
__USE_POSIX


222 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

231 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

234 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

235 
__THROW
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__USE_GNU


239 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

242 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

243 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

247 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

252 
	~<bôs/siga˘i⁄.h
>

255 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

256 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

263 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

266 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

267 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

270 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

277 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

278 
	`__n⁄nuŒ
 ((1, 2));

280 #ifde‡
__USE_POSIX199309


285 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

286 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

293 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

294 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

295 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

296 
	`__n⁄nuŒ
 ((1));

300 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

301 
__THROW
;

306 #ifde‡
__USE_BSD


310 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

311 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

314 
	ssigvec


316 
__sigh™dÀr_t
 
sv_h™dÀr
;

317 
sv_mask
;

319 
sv_Êags
;

320 
	#sv_⁄°ack
 
sv_Êags


	)

324 
	#SV_ONSTACK
 (1 << 0)

	)

325 
	#SV_INTERRUPT
 (1 << 1)

	)

326 
	#SV_RESETHAND
 (1 << 2)

	)

334 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

335 
sigvec
 *
__ovec
Ë
__THROW
;

339 
	~<bôs/sigc⁄ãxt.h
>

342 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

347 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


348 
	#__√ed_size_t


	)

349 
	~<°ddef.h
>

354 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

356 
	~<bôs/sig°ack.h
>

357 #ifde‡
__USE_XOPEN


359 
	~<sys/uc⁄ãxt.h
>

365 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

366 
__THROW
 
__©åibuã_dïªˇãd__
;

370 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

371 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

375 #ifde‡
__USE_XOPEN_EXTENDED


379 
	$sighﬁd
 (
__sig
Ë
__THROW
;

382 
	$sigªl£
 (
__sig
Ë
__THROW
;

385 
	$sigign‹e
 (
__sig
Ë
__THROW
;

388 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

391 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


394 
	~<bôs/±hªadty≥s.h
>

395 
	~<bôs/sigthªad.h
>

402 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

404 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

408 
__END_DECLS


	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #ifde‡
__USE_XOPEN


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

89 
__BEGIN_NAMESPACE_STD


90 #i‚de‡
__USE_FILE_OFFSET64


91 
_G_Âos_t
 
	tÂos_t
;

93 
_G_Âos64_t
 
	tÂos_t
;

95 
__END_NAMESPACE_STD


96 #ifde‡
__USE_LARGEFILE64


97 
_G_Âos64_t
 
	tÂos64_t
;

101 
	#_IOFBF
 0

	)

102 
	#_IOLBF
 1

	)

103 
	#_IONBF
 2

	)

107 #i‚de‡
BUFSIZ


108 
	#BUFSIZ
 
_IO_BUFSIZ


	)

114 #i‚de‡
EOF


115 
	#EOF
 (-1)

	)

121 
	#SEEK_SET
 0

	)

122 
	#SEEK_CUR
 1

	)

123 
	#SEEK_END
 2

	)

126 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


128 
	#P_tmpdú
 "/tmp"

	)

141 
	~<bôs/°dio_lim.h
>

145 
_IO_FILE
 *
°dö
;

146 
_IO_FILE
 *
°dout
;

147 
_IO_FILE
 *
°dîr
;

149 
	#°dö
 
°dö


	)

150 
	#°dout
 
°dout


	)

151 
	#°dîr
 
°dîr


	)

153 
__BEGIN_NAMESPACE_STD


155 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

157 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

158 
__END_NAMESPACE_STD


160 #ifde‡
__USE_ATFILE


162 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

163 
__c⁄°
 *
__√w
Ë
__THROW
;

166 
__BEGIN_NAMESPACE_STD


171 #i‚de‡
__USE_FILE_OFFSET64


172 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

174 #ifde‡
__REDIRECT


175 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

177 
	#tmpfûe
 
tmpfûe64


	)

181 #ifde‡
__USE_LARGEFILE64


182 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

186 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

187 
__END_NAMESPACE_STD


189 #ifde‡
__USE_MISC


192 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

196 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


204 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

205 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

209 
__BEGIN_NAMESPACE_STD


214 
	`f˛o£
 (
FILE
 *
__°ªam
);

219 
	`fÊush
 (
FILE
 *
__°ªam
);

220 
__END_NAMESPACE_STD


222 #ifde‡
__USE_MISC


229 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

232 #ifde‡
__USE_GNU


239 
	`f˛o£Æl
 ();

243 
__BEGIN_NAMESPACE_STD


244 #i‚de‡
__USE_FILE_OFFSET64


249 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

250 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

255 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

256 
__c⁄°
 *
__ª°ri˘
 
__modes
,

257 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

259 #ifde‡
__REDIRECT


260 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

261 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

262 
__wur
;

263 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

264 
__c⁄°
 *
__ª°ri˘
 
__modes
,

265 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

266 
__wur
;

268 
	#f›í
 
f›í64


	)

269 
	#‰e›í
 
‰e›í64


	)

272 
__END_NAMESPACE_STD


273 #ifde‡
__USE_LARGEFILE64


274 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

275 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

276 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

277 
__c⁄°
 *
__ª°ri˘
 
__modes
,

278 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

281 #ifdef 
__USE_POSIX


283 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

286 #ifdef 
__USE_GNU


289 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

290 
__c⁄°
 *
__ª°ri˘
 
__modes
,

291 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

294 #ifde‡
__USE_XOPEN2K8


296 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

297 
__THROW
 
__wur
;

302 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

306 
__BEGIN_NAMESPACE_STD


309 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

313 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

314 
__modes
, 
size_t
 
__n
Ë
__THROW
;

315 
__END_NAMESPACE_STD


317 #ifdef 
__USE_BSD


320 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

321 
size_t
 
__size
Ë
__THROW
;

324 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

328 
__BEGIN_NAMESPACE_STD


333 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

334 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

339 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

341 
	$•rötf
 (*
__ª°ri˘
 
__s
,

342 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

348 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

349 
_G_va_li°
 
__¨g
);

354 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

356 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

357 
_G_va_li°
 
__¨g
Ë
__THROW
;

358 
__END_NAMESPACE_STD


360 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


361 
__BEGIN_NAMESPACE_C99


363 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

364 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

365 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

367 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

368 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

369 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

370 
__END_NAMESPACE_C99


373 #ifde‡
__USE_GNU


376 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

377 
_G_va_li°
 
__¨g
)

378 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

379 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

380 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

381 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

382 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

383 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

384 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

387 #ifde‡
__USE_XOPEN2K8


394 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

395 
_G_va_li°
 
__¨g
)

396 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

397 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

398 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

402 
__BEGIN_NAMESPACE_STD


407 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

408 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

413 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

415 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

416 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

418 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

419 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

420 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

421 #ifde‡
__REDIRECT


425 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

427 
__isoc99_fsˇnf
Ë
__wur
;

428 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

429 
__isoc99_sˇnf
Ë
__wur
;

430 
	`__REDIRECT
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

431 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

432 
__isoc99_ssˇnf
Ë
__THROW
;

434 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

435 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

436 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

438 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

439 
	#fsˇnf
 
__isoc99_fsˇnf


	)

440 
	#sˇnf
 
__isoc99_sˇnf


	)

441 
	#ssˇnf
 
__isoc99_ssˇnf


	)

445 
__END_NAMESPACE_STD


447 #ifdef 
__USE_ISOC99


448 
__BEGIN_NAMESPACE_C99


453 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

454 
_G_va_li°
 
__¨g
)

455 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

461 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

462 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

465 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

466 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

467 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

469 #i‡!
deföed
 
__USE_GNU
 \

470 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

471 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

472 #ifde‡
__REDIRECT


476 
	`__REDIRECT
 (
vfsˇnf
,

477 (
FILE
 *
__ª°ri˘
 
__s
,

478 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

479 
__isoc99_vfsˇnf
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

481 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

482 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

483 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

484 
	`__REDIRECT
 (
vssˇnf
,

485 (
__c⁄°
 *
__ª°ri˘
 
__s
,

486 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

487 
__isoc99_vssˇnf
)

488 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

490 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

491 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

492 
_G_va_li°
 
__¨g
Ë
__wur
;

493 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

494 
_G_va_li°
 
__¨g
Ë
__wur
;

495 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

496 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

497 
_G_va_li°
 
__¨g
Ë
__THROW
;

498 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

499 
	#vsˇnf
 
__isoc99_vsˇnf


	)

500 
	#vssˇnf
 
__isoc99_vssˇnf


	)

504 
__END_NAMESPACE_C99


508 
__BEGIN_NAMESPACE_STD


513 
	`fgëc
 (
FILE
 *
__°ªam
);

514 
	`gëc
 (
FILE
 *
__°ªam
);

520 
	`gëch¨
 ();

521 
__END_NAMESPACE_STD


525 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

527 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


532 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

533 
	`gëch¨_u∆ocked
 ();

536 #ifde‡
__USE_MISC


543 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

547 
__BEGIN_NAMESPACE_STD


555 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

556 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

562 
	`putch¨
 (
__c
);

563 
__END_NAMESPACE_STD


567 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

569 #ifde‡
__USE_MISC


576 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

579 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


584 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

585 
	`putch¨_u∆ocked
 (
__c
);

589 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

590 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

592 
	`gëw
 (
FILE
 *
__°ªam
);

595 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

599 
__BEGIN_NAMESPACE_STD


604 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

605 
__wur
;

612 *
	$gës
 (*
__s
Ë
__wur
;

613 
__END_NAMESPACE_STD


615 #ifde‡
__USE_GNU


622 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

623 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

627 #ifdef 
__USE_XOPEN2K8


638 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

639 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

640 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

641 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

642 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

643 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

651 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

652 
size_t
 *
__ª°ri˘
 
__n
,

653 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

657 
__BEGIN_NAMESPACE_STD


662 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

668 
	`puts
 (
__c⁄°
 *
__s
);

675 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

682 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

683 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

688 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

689 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

690 
__END_NAMESPACE_STD


692 #ifde‡
__USE_GNU


699 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

700 
FILE
 *
__ª°ri˘
 
__°ªam
);

703 #ifde‡
__USE_MISC


710 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

711 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

712 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

713 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

717 
__BEGIN_NAMESPACE_STD


722 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

727 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

732 
	`ªwöd
 (
FILE
 *
__°ªam
);

733 
__END_NAMESPACE_STD


740 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


741 #i‚de‡
__USE_FILE_OFFSET64


746 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

751 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

753 #ifde‡
__REDIRECT


754 
	`__REDIRECT
 (
f£eko
,

755 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

756 
f£eko64
);

757 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

759 
	#f£eko
 
f£eko64


	)

760 
	#·ñlo
 
·ñlo64


	)

765 
__BEGIN_NAMESPACE_STD


766 #i‚de‡
__USE_FILE_OFFSET64


771 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

776 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

778 #ifde‡
__REDIRECT


779 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

780 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

781 
	`__REDIRECT
 (
f£ços
,

782 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

784 
	#fgëpos
 
fgëpos64


	)

785 
	#f£ços
 
f£ços64


	)

788 
__END_NAMESPACE_STD


790 #ifde‡
__USE_LARGEFILE64


791 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

792 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

793 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

794 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

797 
__BEGIN_NAMESPACE_STD


799 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

801 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

803 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

804 
__END_NAMESPACE_STD


806 #ifde‡
__USE_MISC


808 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

809 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

810 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

814 
__BEGIN_NAMESPACE_STD


819 
	`≥º‹
 (
__c⁄°
 *
__s
);

820 
__END_NAMESPACE_STD


826 
	~<bôs/sys_îæi°.h
>

829 #ifdef 
__USE_POSIX


831 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 #ifde‡
__USE_MISC


836 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

840 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

841 
deföed
 
__USE_MISC
)

846 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

852 
	`p˛o£
 (
FILE
 *
__°ªam
);

856 #ifdef 
__USE_POSIX


858 *
	$˘îmid
 (*
__s
Ë
__THROW
;

862 #ifde‡
__USE_XOPEN


864 *
	`cu£rid
 (*
__s
);

868 #ifdef 
__USE_GNU


869 
ob°ack
;

872 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

873 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

874 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

875 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

876 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

877 
_G_va_li°
 
__¨gs
)

878 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

882 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


886 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

890 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

893 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

896 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


900 
	#__√ed_gë›t


	)

901 
	~<gë›t.h
>

906 #ifde‡
__USE_EXTERN_INLINES


907 
	~<bôs/°dio.h
>

909 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


910 
	~<bôs/°dio2.h
>

912 #ifde‡
__LDBL_COMPAT


913 
	~<bôs/°dio-ldbl.h
>

916 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


502 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

505 #ifde‡
__USE_XOPEN2K


507 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

508 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

511 
__BEGIN_NAMESPACE_STD


513 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

517 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

519 #ifde‡
__USE_GNU


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #ifde‡
__USE_GNU


551 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

553 
__END_NAMESPACE_STD


555 #ifde‡
__USE_ISOC99


556 
__BEGIN_NAMESPACE_C99


559 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

560 
__END_NAMESPACE_C99


564 
__BEGIN_NAMESPACE_STD


566 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

567 
__END_NAMESPACE_STD


571 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


584 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
;

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


604 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

614 #i‚de‡
__USE_FILE_OFFSET64


615 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

617 #ifde‡
__REDIRECT


618 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

619 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 
	#mk°emp
 
mk°emp64


	)

624 #ifde‡
__USE_LARGEFILE64


625 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

629 #ifde‡
__USE_MISC


636 #i‚de‡
__USE_FILE_OFFSET64


637 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

639 #ifde‡
__REDIRECT


640 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

641 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 
	#mk°emps
 
mk°emps64


	)

646 #ifde‡
__USE_LARGEFILE64


647 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

648 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

652 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


658 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

661 #ifde‡
__USE_GNU


668 #i‚de‡
__USE_FILE_OFFSET64


669 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

671 #ifde‡
__REDIRECT


672 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

673 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 
	#mko°emp
 
mko°emp64


	)

678 #ifde‡
__USE_LARGEFILE64


679 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

688 #i‚de‡
__USE_FILE_OFFSET64


689 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

690 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #ifde‡
__REDIRECT


693 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

694 
__Êags
), 
mko°emps64
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 
	#mko°emps
 
mko°emps64


	)

700 #ifde‡
__USE_LARGEFILE64


701 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

702 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

707 
__BEGIN_NAMESPACE_STD


712 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

713 
__END_NAMESPACE_STD


716 #ifdef 
__USE_GNU


719 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

720 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

723 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


729 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

730 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

735 #i‚de‡
__COMPAR_FN_T


736 
	#__COMPAR_FN_T


	)

737 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

739 #ifdef 
__USE_GNU


740 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

743 #ifde‡
__USE_GNU


744 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

747 
__BEGIN_NAMESPACE_STD


750 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

751 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

752 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

756 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

757 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

758 #ifde‡
__USE_GNU


759 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

760 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

761 
	`__n⁄nuŒ
 ((1, 4));

766 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

767 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

768 
__END_NAMESPACE_STD


770 #ifde‡
__USE_ISOC99


771 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

772 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
__BEGIN_NAMESPACE_STD


780 
div_t
 
	$div
 (
__numî
, 
__díom
)

781 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

782 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

783 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

784 
__END_NAMESPACE_STD


786 #ifde‡
__USE_ISOC99


787 
__BEGIN_NAMESPACE_C99


788 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

789 
__díom
)

790 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

791 
__END_NAMESPACE_C99


795 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


802 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

803 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

808 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

815 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

818 #ifde‡
__USE_MISC


820 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

821 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

822 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

823 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

824 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

825 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

826 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

827 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

832 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

833 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

834 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

835 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

836 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

837 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

839 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

840 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

841 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

842 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

843 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

844 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

845 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

846 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

851 
__BEGIN_NAMESPACE_STD


854 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

857 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

858 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

861 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

865 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

866 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

868 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

869 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

870 
__THROW
;

871 
__END_NAMESPACE_STD


874 #ifde‡
__USE_SVID


879 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

883 #ifde‡
__USE_XOPEN_EXTENDED


890 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

891 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

892 **
__ª°ri˘
 
__vÆuï
)

893 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

897 #ifde‡
__USE_XOPEN


899 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

905 #ifde‡
__USE_XOPEN2K


907 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

910 #ifde‡
__USE_XOPEN


915 
	$gø¡±
 (
__fd
Ë
__THROW
;

919 
	$u∆ock±
 (
__fd
Ë
__THROW
;

924 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

927 #ifde‡
__USE_GNU


931 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

932 
__THROW
 
	`__n⁄nuŒ
 ((2));

935 
	`gë±
 ();

938 #ifde‡
__USE_BSD


942 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

943 
__THROW
 
	`__n⁄nuŒ
 ((1));

948 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


949 
	~<bôs/°dlib.h
>

951 #ifde‡
__LDBL_COMPAT


952 
	~<bôs/°dlib-ldbl.h
>

956 #unde‡
__√ed_mÆloc_™d_ˇŒoc


958 
__END_DECLS


	@/usr/include/string.h

23 #i‚def 
_STRING_H


24 
	#_STRING_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

37 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

41 
__BEGIN_NAMESPACE_STD


43 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

44 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

45 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

49 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 
__END_NAMESPACE_STD


55 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


56 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

57 
__c
, 
size_t
 
__n
)

58 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

62 
__BEGIN_NAMESPACE_STD


64 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

67 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

68 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

71 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


74 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

76 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

79 #ifde‡
__OPTIMIZE__


80 
__exã∫_Æways_ölöe
 *

81 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


83  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

86 
__exã∫_Æways_ölöe
 
__c⁄°
 *

87 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


89  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

92 
	}
}

94 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

95 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

97 
__END_NAMESPACE_STD


99 #ifde‡
__USE_GNU


102 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


103 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

105 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

108 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

109 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

113 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


114 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

116 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

119 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

120 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

125 
__BEGIN_NAMESPACE_STD


127 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

128 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

130 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

131 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

132 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

135 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

136 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

138 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

139 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

142 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

143 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

145 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

149 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

150 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

152 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

153 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

154 
__THROW
 
	`__n⁄nuŒ
 ((2));

155 
__END_NAMESPACE_STD


157 #ifde‡
__USE_XOPEN2K8


161 
	~<xloˇÀ.h
>

164 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

165 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

167 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

168 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

171 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


173 *
	$°rdup
 (
__c⁄°
 *
__s
)

174 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

180 #i‡
deföed
 
__USE_XOPEN2K8


181 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

182 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

185 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


187 
	#°rdu∑
(
s
) \

188 (
__exãnsi⁄__
 \

190 
__c⁄°
 *
__ﬁd
 = (
s
); \

191 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

192 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

193 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

194 
	}
}))

	)

197 
	#°∫du∑
(
s
, 
n
) \

198 (
__exãnsi⁄__
 \

200 
__c⁄°
 *
__ﬁd
 = (
s
); \

201 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

202 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

203 
__√w
[
__Àn
] = '\0'; \

204 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

205 }))

	)

208 
	g__BEGIN_NAMESPACE_STD


210 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


213 *
°rchr
 (*
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

215 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 #ifde‡
__OPTIMIZE__


219 
__exã∫_Æways_ölöe
 *

220 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


222  
__buûtö_°rchr
 (
__s
, 
__c
);

225 
__exã∫_Æways_ölöe
 
__c⁄°
 *

226 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


228  
__buûtö_°rchr
 (
__s
, 
__c
);

233 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

234 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


240 *
	`°ºchr
 (*
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

242 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 #ifde‡
__OPTIMIZE__


246 
__exã∫_Æways_ölöe
 *

247 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


249  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

252 
__exã∫_Æways_ölöe
 
__c⁄°
 *

253 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


255  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

258 
	}
}

260 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

261 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

263 
__END_NAMESPACE_STD


265 #ifde‡
__USE_GNU


268 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


269 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

271 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

275 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

279 
__BEGIN_NAMESPACE_STD


282 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

283 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

286 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

287 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


292 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

294 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 #ifde‡
__OPTIMIZE__


298 
__exã∫_Æways_ölöe
 *

299 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


301  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

304 
__exã∫_Æways_ölöe
 
__c⁄°
 *

305 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


307  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

310 
	}
}

312 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

313 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

316 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


319 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

321 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

322 
__c⁄°
 *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

325 #ifde‡
__OPTIMIZE__


326 
__exã∫_Æways_ölöe
 *

327 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


329  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

332 
__exã∫_Æways_ölöe
 
__c⁄°
 *

333 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


335  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

338 
	}
}

340 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

341 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

346 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

347 
__THROW
 
	`__n⁄nuŒ
 ((2));

348 
__END_NAMESPACE_STD


352 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

353 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

354 **
__ª°ri˘
 
__ßve_±r
)

355 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

356 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


357 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

358 **
__ª°ri˘
 
__ßve_±r
)

359 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

362 #ifde‡
__USE_GNU


364 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


365 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

367 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

368 
__c⁄°
 *
__√edÀ
)

369 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

371 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

372 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

376 #ifde‡
__USE_GNU


380 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

381 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

382 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

386 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

387 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

389 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

390 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

395 
__BEGIN_NAMESPACE_STD


397 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

398 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

399 
__END_NAMESPACE_STD


401 #ifdef 
__USE_XOPEN2K8


404 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

405 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

409 
__BEGIN_NAMESPACE_STD


411 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

412 
__END_NAMESPACE_STD


413 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


421 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


424 #ifde‡
__REDIRECT_NTH


425 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

426 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

427 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

429 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

430 
__THROW
 
	`__n⁄nuŒ
 ((2));

431 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

436 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

437 
__THROW
 
	`__n⁄nuŒ
 ((2));

441 #ifde‡
__USE_XOPEN2K8


443 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

449 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

451 #ifde‡
__USE_BSD


453 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

454 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

457 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

460 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

461 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

464 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


467 *
	`ödex
 (*
__s
, 
__c
)

468 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

472 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


473 
__exã∫_Æways_ölöe
 *

474 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


476  
	`__buûtö_ödex
 (
__s
, 
__c
);

479 
__exã∫_Æways_ölöe
 
__c⁄°
 *

480 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


482  
	`__buûtö_ödex
 (
__s
, 
__c
);

485 
	}
}

487 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

488 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

492 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


495 *
	`rödex
 (*
__s
, 
__c
)

496 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

500 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


501 
__exã∫_Æways_ölöe
 *

502 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


504  
	`__buûtö_rödex
 (
__s
, 
__c
);

507 
__exã∫_Æways_ölöe
 
__c⁄°
 *

508 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


510  
	`__buûtö_rödex
 (
__s
, 
__c
);

513 
	}
}

515 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

516 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

521 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

525 #ifdef 
__USE_GNU


526 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifde‡
__GNUC__


528 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

529 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/strings.h

19 #i‚def 
_STRINGS_H


20 
	#_STRINGS_H
 1

	)

25 #i‡!
deföed
 
_STRING_H
 || !deföed 
__USE_BSD


27 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

32 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

33 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

36 
__BEGIN_DECLS


39 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

40 
__THROW
 
__©åibuã_puª__
;

43 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
Ë
__THROW
;

46 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
;

50 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((const));

53 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


56 *
	`ödex
 (*
__s
, 
__c
)

57 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

58 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

59 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

61 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


62 
__exã∫_Æways_ölöe
 *

63 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


65  
	`__buûtö_ödex
 (
__s
, 
__c
);

68 
__exã∫_Æways_ölöe
 
__c⁄°
 *

69 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


71  
	`__buûtö_ödex
 (
__s
, 
__c
);

74 
	}
}

76 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

77 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


84 *
	`rödex
 (*
__s
, 
__c
)

85 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

86 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

87 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

89 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


90 
__exã∫_Æways_ölöe
 *

91 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


93  
	`__buûtö_rödex
 (
__s
, 
__c
);

96 
__exã∫_Æways_ölöe
 
__c⁄°
 *

97 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


99  
	`__buûtö_rödex
 (
__s
, 
__c
);

102 
	}
}

104 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

105 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

110 
__THROW
 
__©åibuã_puª__
;

113 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

114 
__THROW
 
__©åibuã_puª__
;

116 #ifdef 
__USE_XOPEN2K8


120 
	~<xloˇÀ.h
>

124 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

125 
__loˇÀ_t
 
__loc
)

126 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

128 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

129 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

130 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

133 
__END_DECLS


	@/usr/include/sys/mman.h

20 #i‚def 
_SYS_MMAN_H


21 
	#_SYS_MMAN_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<bôs/ty≥s.h
>

25 
	#__√ed_size_t


	)

26 
	~<°ddef.h
>

28 #i‚de‡
__off_t_deföed


29 #i‚de‡
__USE_FILE_OFFSET64


30 
__off_t
 
	toff_t
;

32 
__off64_t
 
	toff_t
;

34 
	#__off_t_deföed


	)

37 #i‚de‡
__mode_t_deföed


38 
__mode_t
 
	tmode_t
;

39 
	#__mode_t_deföed


	)

42 
	~<bôs/mm™.h
>

45 
	#MAP_FAILED
 ((*Ë-1)

	)

47 
	g__BEGIN_DECLS


57 #i‚de‡
__USE_FILE_OFFSET64


58 *
	$mm≠
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

59 
__Êags
, 
__fd
, 
__off_t
 
__off£t
Ë
__THROW
;

61 #ifde‡
__REDIRECT_NTH


62 * 
	`__REDIRECT_NTH
 (
mm≠
,

63 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

64 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
),

65 
mm≠64
);

67 
	#mm≠
 
mm≠64


	)

70 #ifde‡
__USE_LARGEFILE64


71 *
	$mm≠64
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

72 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
Ë
__THROW
;

77 
	$munm≠
 (*
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

82 
	$m¥Ÿe˘
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
Ë
__THROW
;

90 
	`msync
 (*
__addr
, 
size_t
 
__Àn
, 
__Êags
);

92 #ifde‡
__USE_BSD


95 
	$madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

97 #ifde‡
__USE_XOPEN2K


99 
	$posix_madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

104 
	$mlock
 (
__c⁄°
 *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

107 
	$mu∆ock
 (
__c⁄°
 *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

112 
	$mlockÆl
 (
__Êags
Ë
__THROW
;

116 
	$mu∆ockÆl
 (Ë
__THROW
;

118 #ifde‡
__USE_MISC


124 
	$möc‹e
 (*
__°¨t
, 
size_t
 
__Àn
, *
__vec
)

125 
__THROW
;

128 #ifde‡
__USE_GNU


134 *
	$mªm≠
 (*
__addr
, 
size_t
 
__ﬁd_Àn
, size_à
__√w_Àn
,

135 
__Êags
, ...Ë
__THROW
;

139 
	$ªm≠_fûe_∑ges
 (*
__°¨t
, 
size_t
 
__size
, 
__¥Ÿ
,

140 
size_t
 
__pgoff
, 
__Êags
Ë
__THROW
;

145 
	`shm_›í
 (
__c⁄°
 *
__«me
, 
__oÊag
, 
mode_t
 
__mode
);

148 
	`shm_u∆ök
 (
__c⁄°
 *
__«me
);

150 
__END_DECLS


	@/usr/include/sys/param.h

19 #i‚de‡
_SYS_PARAM_H


20 
	#_SYS_PARAM_H
 1

	)

22 #i‚de‡
ARG_MAX


23 
	#__undef_ARG_MAX


	)

26 
	~<limôs.h
>

27 
	~<löux/limôs.h
>

28 
	~<löux/∑øm.h
>

31 #i‚de‡
__undef_ARG_MAX


32 #unde‡
ARG_MAX


33 #unde‡
__undef_ARG_MAX


38 
	#NBBY
 
CHAR_BIT


	)

39 #i‚def 
NGROUPS


40 
	#NGROUPS
 
NGROUPS_MAX


	)

42 
	#MAXSYMLINKS
 20

	)

43 
	#CANBSIZ
 
MAX_CANON


	)

44 
	#MAXPATHLEN
 
PATH_MAX


	)

48 
	#NOFILE
 256

	)

49 
	#NCARGS
 131072

	)

52 
	~<sys/ty≥s.h
>

55 
	#£tbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] |1<<((i)%NBBY))

	)

56 
	#˛rbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] &~(1<<((i)%NBBY)))

	)

57 
	#is£t
(
a
,
i
Ë(◊)[(i)/
NBBY
] & (1<<((i)%NBBY)))

	)

58 
	#is˛r
(
a
,
i
Ë((◊)[(i)/
NBBY
] & (1<<((i)%NBBY))Ë=0)

	)

61 #i‚de‡
howm™y


62 
	#howm™y
(
x
, 
y
Ë(((xË+ ((yË- 1)Ë/ (y))

	)

64 #ifde‡
__GNUC__


65 
	#roundup
(
x
, 
y
Ë(
	`__buûtö_c⁄°™t_p
 (yË&& 
	`powîof2
 (y) \

66 ? (((
x
Ë+ (
y
) - 1) & ~((y) - 1)) \

67 : ((((
x
Ë+ ((
y
Ë- 1)Ë/ (y)Ë* (y)))

	)

69 
	#roundup
(
x
, 
y
Ë((((xË+ ((yË- 1)Ë/ (y)Ë* (y))

	)

71 
	#powîof2
(
x
Ë((((xË- 1Ë& (x)Ë=0)

	)

74 
	#MIN
(
a
,
b
Ë((◊)<(b))?◊):(b))

	)

75 
	#MAX
(
a
,
b
Ë((◊)>(b))?◊):(b))

	)

79 
	#DEV_BSIZE
 512

	)

	@/usr/include/sys/stat.h

24 #i‚def 
_SYS_STAT_H


25 
	#_SYS_STAT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	~<bôs/ty≥s.h
>

31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_MISC
 \

32 || 
deföed
 
	g__USE_ATFILE


33 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_time_t


	)

36 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ATFILE


37 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


45 #i‚de‡
__dev_t_deföed


46 
__dev_t
 
	tdev_t
;

47 
	#__dev_t_deföed


	)

50 #i‚de‡
__gid_t_deföed


51 
__gid_t
 
	tgid_t
;

52 
	#__gid_t_deföed


	)

55 #i‚de‡
__öo_t_deföed


56 #i‚de‡
__USE_FILE_OFFSET64


57 
__öo_t
 
	töo_t
;

59 
__öo64_t
 
	töo_t
;

61 
	#__öo_t_deföed


	)

64 #i‚de‡
__mode_t_deföed


65 
__mode_t
 
	tmode_t
;

66 
	#__mode_t_deföed


	)

69 #i‚de‡
__∆ök_t_deföed


70 
__∆ök_t
 
	t∆ök_t
;

71 
	#__∆ök_t_deföed


	)

74 #i‚de‡
__off_t_deföed


75 #i‚de‡
__USE_FILE_OFFSET64


76 
__off_t
 
	toff_t
;

78 
__off64_t
 
	toff_t
;

80 
	#__off_t_deföed


	)

83 #i‚de‡
__uid_t_deföed


84 
__uid_t
 
	tuid_t
;

85 
	#__uid_t_deföed


	)

89 #ifde‡
__USE_UNIX98


90 #i‚de‡
__blk˙t_t_deföed


91 #i‚de‡
__USE_FILE_OFFSET64


92 
__blk˙t_t
 
	tblk˙t_t
;

94 
__blk˙t64_t
 
	tblk˙t_t
;

96 
	#__blk˙t_t_deföed


	)

99 #i‚de‡
__blksize_t_deföed


100 
__blksize_t
 
	tblksize_t
;

101 
	#__blksize_t_deföed


	)

105 
	g__BEGIN_DECLS


107 
	~<bôs/°©.h
>

109 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


110 
	#S_IFMT
 
__S_IFMT


	)

111 
	#S_IFDIR
 
__S_IFDIR


	)

112 
	#S_IFCHR
 
__S_IFCHR


	)

113 
	#S_IFBLK
 
__S_IFBLK


	)

114 
	#S_IFREG
 
__S_IFREG


	)

115 #ifde‡
__S_IFIFO


116 
	#S_IFIFO
 
__S_IFIFO


	)

118 #ifde‡
__S_IFLNK


119 
	#S_IFLNK
 
__S_IFLNK


	)

121 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

122 && 
deföed
 
	g__S_IFSOCK


123 
	#S_IFSOCK
 
__S_IFSOCK


	)

129 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

131 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

132 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

133 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

134 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

135 #ifde‡
__S_IFIFO


136 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

138 #ifde‡
__S_IFLNK


139 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

142 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


143 
	#S_ISLNK
(
mode
Ë0

	)

146 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K
) \

147 && 
deföed
 
	g__S_IFSOCK


148 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

155 #ifdef 
__USE_POSIX199309


156 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

157 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

158 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

164 
	#S_ISUID
 
__S_ISUID


	)

165 
	#S_ISGID
 
__S_ISGID


	)

167 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


169 
	#S_ISVTX
 
__S_ISVTX


	)

172 
	#S_IRUSR
 
__S_IREAD


	)

173 
	#S_IWUSR
 
__S_IWRITE


	)

174 
	#S_IXUSR
 
__S_IEXEC


	)

176 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

178 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


179 
	#S_IREAD
 
S_IRUSR


	)

180 
	#S_IWRITE
 
S_IWUSR


	)

181 
	#S_IEXEC
 
S_IXUSR


	)

184 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

185 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

186 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

188 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

190 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

191 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

192 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

194 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

197 #ifdef 
__USE_BSD


199 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

200 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

201 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

203 
	#S_BLKSIZE
 512

	)

207 #i‚de‡
__USE_FILE_OFFSET64


209 
	$°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

210 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

214 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

216 #ifde‡
__REDIRECT_NTH


217 
	`__REDIRECT_NTH
 (
°©
, (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

218 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

219 
	`__n⁄nuŒ
 ((1, 2));

220 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

221 
	`__n⁄nuŒ
 ((2));

223 
	#°©
 
°©64


	)

224 
	#f°©
 
f°©64


	)

227 #ifde‡
__USE_LARGEFILE64


228 
	$°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

229 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

230 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

233 #ifde‡
__USE_ATFILE


237 #i‚de‡
__USE_FILE_OFFSET64


238 
	$f°©©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

239 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

240 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

242 #ifde‡
__REDIRECT_NTH


243 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

244 
°©
 *
__ª°ri˘
 
__buf
,

245 
__Êag
),

246 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

248 
	#f°©©
 
f°©©64


	)

252 #ifde‡
__USE_LARGEFILE64


253 
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

254 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

255 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

259 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


260 #i‚de‡
__USE_FILE_OFFSET64


263 
	$l°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

264 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

266 #ifde‡
__REDIRECT_NTH


267 
	`__REDIRECT_NTH
 (
l°©
,

268 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

269 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

270 
	`__n⁄nuŒ
 ((1, 2));

272 
	#l°©
 
l°©64


	)

275 #ifde‡
__USE_LARGEFILE64


276 
	$l°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

277 
°©64
 *
__ª°ri˘
 
__buf
)

278 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

284 
	$chmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

285 
__THROW
 
	`__n⁄nuŒ
 ((1));

287 #ifde‡
__USE_BSD


291 
	$lchmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


297 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

300 #ifde‡
__USE_ATFILE


303 
	$fchmod©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
,

304 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

312 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

314 #ifdef 
__USE_GNU


317 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

321 
	$mkdú
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

322 
__THROW
 
	`__n⁄nuŒ
 ((1));

324 #ifde‡
__USE_ATFILE


328 
	$mkdú©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

329 
__THROW
 
	`__n⁄nuŒ
 ((2));

335 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


336 
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

337 
__THROW
 
	`__n⁄nuŒ
 ((1));

339 #ifde‡
__USE_ATFILE


343 
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

344 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
	$mkfifo
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

351 
__THROW
 
	`__n⁄nuŒ
 ((1));

353 #ifde‡
__USE_ATFILE


357 
	$mkfifﬂt
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

361 #ifde‡
__USE_ATFILE


364 
	$utimíßt
 (
__fd
, 
__c⁄°
 *
__∑th
,

365 
__c⁄°
 
time•ec
 
__times
[2],

366 
__Êags
)

367 
__THROW
 
	`__n⁄nuŒ
 ((2));

370 #ifde‡
__USE_XOPEN2K8


372 
	$futimís
 (
__fd
, 
__c⁄°
 
time•ec
 
__times
[2]Ë
__THROW
;

390 #i‚de‡
_STAT_VER


391 
	#_STAT_VER
 0

	)

393 #i‚de‡
_MKNOD_VER


394 
	#_MKNOD_VER
 0

	)

398 #i‚de‡
__USE_FILE_OFFSET64


399 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

400 
__THROW
 
	`__n⁄nuŒ
 ((3));

401 
	$__x°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

402 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

403 
	$__lx°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

404 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

405 
	$__fx°©©
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

406 
°©
 *
__°©_buf
, 
__Êag
)

407 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

409 #ifde‡
__REDIRECT_NTH


410 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

411 
°©
 *
__°©_buf
), 
__fx°©64
)

412 
	`__n⁄nuŒ
 ((3));

413 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

414 
°©
 *
__°©_buf
), 
__x°©64
)

415 
	`__n⁄nuŒ
 ((2, 3));

416 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

417 
°©
 *
__°©_buf
), 
__lx°©64
)

418 
	`__n⁄nuŒ
 ((2, 3));

419 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

420 
__c⁄°
 *
__fûíame
,

421 
°©
 *
__°©_buf
, 
__Êag
),

422 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

425 
	#__fx°©
 
__fx°©64


	)

426 
	#__x°©
 
__x°©64


	)

427 
	#__lx°©
 
__lx°©64


	)

431 #ifde‡
__USE_LARGEFILE64


432 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

433 
__THROW
 
	`__n⁄nuŒ
 ((3));

434 
	$__x°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

435 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

436 
	$__lx°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

437 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

438 
	$__fx°©©64
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

439 
°©64
 *
__°©_buf
, 
__Êag
)

440 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

442 
	$__xmknod
 (
__vî
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

443 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

445 
	$__xmknod©
 (
__vî
, 
__fd
, 
__c⁄°
 *
__∑th
,

446 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

447 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

449 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES_IN_LIBC


452 
__exã∫_ölöe
 

453 
	`__NTH
 (
	$°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

455  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

456 
	}
}

458 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


459 
__exã∫_ölöe
 

460 
__NTH
 (
	$l°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

462  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

463 
	}
}

466 
__exã∫_ölöe
 

467 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

469  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

470 
	}
}

472 #ifde‡
__USE_ATFILE


473 
__exã∫_ölöe
 

474 
__NTH
 (
	$f°©©
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©
 *
__°©buf
,

475 
__Êag
))

477  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

478 
	}
}

481 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


482 
__exã∫_ölöe
 

483 
__NTH
 (
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

485  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

486 
	}
}

489 #ifde‡
__USE_ATFILE


490 
__exã∫_ölöe
 

491 
__NTH
 (
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

492 
__dev_t
 
__dev
))

494  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

495 
	}
}

498 #i‡
deföed
 
__USE_LARGEFILE64
 \

499 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

500 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

501 
__exã∫_ölöe
 

502 
__NTH
 (
	$°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

504  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

505 
	}
}

507 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


508 
__exã∫_ölöe
 

509 
__NTH
 (
	$l°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

511  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

512 
	}
}

515 
__exã∫_ölöe
 

516 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

518  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

519 
	}
}

521 #ifde‡
__USE_ATFILE


522 
__exã∫_ölöe
 

523 
__NTH
 (
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©64
 *
__°©buf
,

524 
__Êag
))

526  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

527 
	}
}

534 
	g__END_DECLS


	@/usr/include/sys/time.h

20 #i‚de‡
_SYS_TIME_H


21 
	#_SYS_TIME_H
 1

	)

23 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

26 
	#__√ed_time_t


	)

27 
	~<time.h
>

28 
	#__√ed_timevÆ


	)

29 
	~<bôs/time.h
>

31 
	~<sys/£À˘.h
>

33 #i‚de‡
__su£c⁄ds_t_deföed


34 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

35 
	#__su£c⁄ds_t_deföed


	)

39 
	g__BEGIN_DECLS


41 #ifde‡
__USE_GNU


43 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

44 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

45 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

46 }

	)

47 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

48 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

49 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

50 }

	)

54 #ifde‡
__USE_BSD


57 
	stimez⁄e


59 
	mtz_möuãswe°
;

60 
	mtz_d°time
;

63 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

65 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

73 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

74 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__USE_BSD


79 
	$£âimeofday
 (
__c⁄°
 
timevÆ
 *
__tv
,

80 
__c⁄°
 
timez⁄e
 *
__tz
)

81 
__THROW
 
	`__n⁄nuŒ
 ((1));

87 
	$adjtime
 (
__c⁄°
 
timevÆ
 *
__dñè
,

88 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

93 
	e__ôimî_which


96 
ITIMER_REAL
 = 0,

97 
	#ITIMER_REAL
 
ITIMER_REAL


	)

99 
ITIMER_VIRTUAL
 = 1,

100 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

103 
ITIMER_PROF
 = 2

104 
	#ITIMER_PROF
 
ITIMER_PROF


	)

109 
	sôimîvÆ


112 
timevÆ
 
ô_öãrvÆ
;

114 
timevÆ
 
ô_vÆue
;

117 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


120 
__ôimî_which
 
	t__ôimî_which_t
;

122 
	t__ôimî_which_t
;

127 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

128 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

133 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

134 
__c⁄°
 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

135 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

140 
	$utimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

141 
__THROW
 
	`__n⁄nuŒ
 ((1));

143 #ifde‡
__USE_BSD


145 
	$lutimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

146 
__THROW
 
	`__n⁄nuŒ
 ((1));

149 
	$futimes
 (
__fd
, 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

152 #ifde‡
__USE_GNU


156 
	$futimeßt
 (
__fd
, 
__c⁄°
 *
__fûe
,

157 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

161 #ifde‡
__USE_BSD


164 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

165 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

166 
	#timîcmp
(
a
, 
b
, 
CMP
) \

167 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

168 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

169 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

170 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

172 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

173 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

174 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

176 ++(
ªsu…
)->
tv_£c
; \

177 (
ªsu…
)->
tv_u£c
 -= 1000000; \

179 
	}
} 0)

	)

180 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

182 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

183 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

184 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

185 --(
ªsu…
)->
tv_£c
; \

186 (
ªsu…
)->
tv_u£c
 += 1000000; \

188 } 0)

	)

191 
	g__END_DECLS


	@/usr/include/sys/times.h

23 #i‚def 
_SYS_TIMES_H


24 
	#_SYS_TIMES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	#__√ed_˛ock_t


	)

29 
	~<time.h
>

32 
__BEGIN_DECLS


35 
	stms


37 
˛ock_t
 
	mtms_utime
;

38 
˛ock_t
 
	mtms_°ime
;

40 
˛ock_t
 
	mtms_cutime
;

41 
˛ock_t
 
	mtms_c°ime
;

49 
˛ock_t
 
	$times
 (
tms
 *
__buf„r
Ë
__THROW
;

51 
__END_DECLS


	@/usr/include/sys/types.h

24 #i‚def 
_SYS_TYPES_H


25 
	#_SYS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifdef 
__USE_BSD


34 #i‚de‡
__u_ch¨_deföed


35 
__u_ch¨
 
	tu_ch¨
;

36 
__u_sh‹t
 
	tu_sh‹t
;

37 
__u_öt
 
	tu_öt
;

38 
__u_l⁄g
 
	tu_l⁄g
;

39 
__quad_t
 
	tquad_t
;

40 
__u_quad_t
 
	tu_quad_t
;

41 
__fsid_t
 
	tfsid_t
;

42 
	#__u_ch¨_deföed


	)

46 
__loff_t
 
	tloff_t
;

48 #i‚de‡
__öo_t_deföed


49 #i‚de‡
__USE_FILE_OFFSET64


50 
__öo_t
 
	töo_t
;

52 
__öo64_t
 
	töo_t
;

54 
	#__öo_t_deföed


	)

56 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


57 
__öo64_t
 
	töo64_t
;

58 
	#__öo64_t_deföed


	)

61 #i‚de‡
__dev_t_deföed


62 
__dev_t
 
	tdev_t
;

63 
	#__dev_t_deföed


	)

66 #i‚de‡
__gid_t_deföed


67 
__gid_t
 
	tgid_t
;

68 
	#__gid_t_deföed


	)

71 #i‚de‡
__mode_t_deföed


72 
__mode_t
 
	tmode_t
;

73 
	#__mode_t_deföed


	)

76 #i‚de‡
__∆ök_t_deföed


77 
__∆ök_t
 
	t∆ök_t
;

78 
	#__∆ök_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

86 #i‚de‡
__off_t_deföed


87 #i‚de‡
__USE_FILE_OFFSET64


88 
__off_t
 
	toff_t
;

90 
__off64_t
 
	toff_t
;

92 
	#__off_t_deföed


	)

94 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


95 
__off64_t
 
	toff64_t
;

96 
	#__off64_t_deföed


	)

99 #i‚de‡
__pid_t_deföed


100 
__pid_t
 
	tpid_t
;

101 
	#__pid_t_deföed


	)

104 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #ifde‡
__USE_XOPEN


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/sys/wait.h

24 #i‚def 
_SYS_WAIT_H


25 
	#_SYS_WAIT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<sig«l.h
>

32 
	~<sys/ªsour˚.h
>

35 #i‡!
deföed
 
_STDLIB_H
 || !deföed 
__USE_XOPEN


38 
	~<bôs/waôÊags.h
>

40 #ifdef 
__USE_BSD


45 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


46 
	#__WAIT_INT
(
°©us
) \

47 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

48 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

50 
	#__WAIT_INT
(
°©us
Ë(*(
__c⁄°
 *Ë&(°©us))

	)

58 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


59 
	#__WAIT_STATUS
 *

	)

60 
	#__WAIT_STATUS_DEFN
 *

	)

65 
waô
 *
	m__u±r
;

66 *
	m__ùå
;

67 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

68 
	#__WAIT_STATUS_DEFN
 *

	)

73 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

74 
	#__WAIT_STATUS
 *

	)

75 
	#__WAIT_STATUS_DEFN
 *

	)

80 
	~<bôs/waô°©us.h
>

82 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

83 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

84 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

88 #ifde‡
__WIFCONTINUED


89 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

93 #ifdef 
__USE_BSD


94 
	#WCOREFLAG
 
__WCOREFLAG


	)

95 
	#WCOREDUMP
(
°©us
Ë
	`__WCOREDUMP
 (
	`__WAIT_INT
 (°©us))

	)

96 
	#W_EXITCODE
(
ªt
, 
sig
Ë
	`__W_EXITCODE
 (ªt, sig)

	)

97 
	#W_STOPCODE
(
sig
Ë
	`__W_STOPCODE
 (sig)

	)

101 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


104 
	mP_ALL
,

105 
	mP_PID
,

106 
	mP_PGID


107 } 
	tidty≥_t
;

116 
__pid_t
 
waô
 (
__WAIT_STATUS
 
__°©_loc
);

118 #ifdef 
__USE_BSD


120 
	#WAIT_ANY
 (-1Ë

	)

121 
	#WAIT_MYPGRP
 0

	)

139 
__pid_t
 
waôpid
 (__pid_à
__pid
, *
__°©_loc
, 
__›ti⁄s
);

141 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


142 
	#__√ed_sigöfo_t


	)

143 
	~<bôs/sigöfo.h
>

155 
waôid
 (
idty≥_t
 
__idty≥
, 
__id_t
 
__id
, 
sigöfo_t
 *
__öf›
,

156 
__›ti⁄s
);

159 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


162 
	grußge
;

169 
__pid_t
 
	$waô3
 (
__WAIT_STATUS
 
__°©_loc
, 
__›ti⁄s
,

170 
rußge
 * 
__ußge
Ë
__THROW
;

173 #ifde‡
__USE_BSD


175 
__pid_t
 
	$waô4
 (
__pid_t
 
__pid
, 
__WAIT_STATUS
 
__°©_loc
, 
__›ti⁄s
,

176 
rußge
 *
__ußge
Ë
__THROW
;

180 
__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #ifde‡
__USE_UNIX98


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

317 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


319 
	#L_SET
 
SEEK_SET


	)

320 
	#L_INCR
 
SEEK_CUR


	)

321 
	#L_XTND
 
SEEK_END


	)

330 #i‚de‡
__USE_FILE_OFFSET64


331 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

333 #ifde‡
__REDIRECT_NTH


334 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

335 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

336 
l£ek64
);

338 
	#l£ek
 
l£ek64


	)

341 #ifde‡
__USE_LARGEFILE64


342 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

343 
__THROW
;

350 
	`˛o£
 (
__fd
);

357 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

363 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

365 #ifde‡
__USE_UNIX98


366 #i‚de‡
__USE_FILE_OFFSET64


373 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

374 
__off_t
 
__off£t
Ë
__wur
;

381 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

382 
__off_t
 
__off£t
Ë
__wur
;

384 #ifde‡
__REDIRECT


385 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

386 
__off64_t
 
__off£t
),

387 
¥ód64
Ë
__wur
;

388 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

389 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

390 
pwrôe64
Ë
__wur
;

392 
	#¥ód
 
¥ód64


	)

393 
	#pwrôe
 
pwrôe64


	)

397 #ifde‡
__USE_LARGEFILE64


401 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

402 
__off64_t
 
__off£t
Ë
__wur
;

405 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

406 
__off64_t
 
__off£t
Ë
__wur
;

414 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

416 #ifde‡
__USE_GNU


419 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

429 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

441 
	`¶ìp
 (
__£c⁄ds
);

443 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


448 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

449 
__THROW
;

456 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

465 
	`∑u£
 ();

469 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

470 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

472 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


474 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

479 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

480 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

484 #ifde‡
__USE_ATFILE


487 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

488 
__gid_t
 
__group
, 
__Êag
)

489 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

493 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

495 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


497 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

507 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

509 #ifdef 
__USE_GNU


513 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

516 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


520 *
	$gëwd
 (*
__buf
)

521 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

526 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

529 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

531 #ifde‡
__USE_GNU


534 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

538 **
__ívú⁄
;

539 #ifde‡
__USE_GNU


540 **
ívú⁄
;

546 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

547 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

549 #ifde‡
__USE_XOPEN2K8


552 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

553 
__THROW
;

558 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

559 
__THROW
 
	`__n⁄nuŒ
 ((1));

563 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

564 
__THROW
 
	`__n⁄nuŒ
 ((1));

568 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1));

573 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

574 
__THROW
 
	`__n⁄nuŒ
 ((1));

579 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

580 
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #ifde‡
__USE_GNU


585 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

586 *
__c⁄°
 
__ívp
[])

587 
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


593 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

598 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

604 
	~<bôs/c⁄‚ame.h
>

607 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

608 
__THROW
 
	`__n⁄nuŒ
 ((1));

611 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

614 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

616 #ifdef 
__USE_POSIX2


618 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

623 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

626 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

630 #i‚de‡
__FAVOR_BSD


631 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

633 #ifde‡
__REDIRECT_NTH


634 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

636 
	#gëpgΩ
 
__gëpgid


	)

641 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

642 #ifde‡
__USE_XOPEN_EXTENDED


643 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

650 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

652 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


663 #i‚de‡
__FAVOR_BSD


667 
	$£çgΩ
 (Ë
__THROW
;

672 #ifde‡
__REDIRECT_NTH


673 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

675 
	#£çgΩ
 
£çgid


	)

684 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

686 #ifde‡
__USE_XOPEN_EXTENDED


688 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

692 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

695 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

698 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

701 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

706 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

708 #ifdef 
__USE_GNU


710 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

717 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

719 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


727 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

734 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

736 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


739 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

742 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


744 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

747 #ifde‡
__USE_GNU


750 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

751 
__THROW
;

755 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

756 
__THROW
;

760 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

761 
__THROW
;

765 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

766 
__THROW
;

773 
__pid_t
 
	$f‹k
 (Ë
__THROW
;

775 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


780 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

786 *
	$ây«me
 (
__fd
Ë
__THROW
;

790 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

791 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

795 
	$ißây
 (
__fd
Ë
__THROW
;

797 #i‡
deföed
 
__USE_BSD
 \

798 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

801 
	$ây¶Ÿ
 (Ë
__THROW
;

806 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

807 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

809 #ifde‡
__USE_ATFILE


812 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

813 
__c⁄°
 *
__to
, 
__Êags
)

814 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

817 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


819 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

820 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

825 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

826 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

827 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

830 #ifde‡
__USE_ATFILE


832 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

833 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

836 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

837 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

838 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

842 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

844 #ifde‡
__USE_ATFILE


846 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

847 
__THROW
 
	`__n⁄nuŒ
 ((2));

851 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

855 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

858 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

865 *
	`gëlogö
 ();

866 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


873 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

876 #ifdef 
__USE_BSD


878 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

882 #ifdef 
__USE_POSIX2


886 
	#__√ed_gë›t


	)

887 
	~<gë›t.h
>

891 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


895 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

899 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

902 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

903 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

907 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

913 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

914 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

915 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

916 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

922 
	$vh™gup
 (Ë
__THROW
;

925 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

933 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

934 
size_t
 
__off£t
, 
__sˇÀ
)

935 
__THROW
 
	`__n⁄nuŒ
 ((1));

941 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

945 *
	$gëu£rshñl
 (Ë
__THROW
;

946 
	$ídu£rshñl
 (Ë
__THROW
;

947 
	$£tu£rshñl
 (Ë
__THROW
;

953 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

957 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

960 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

964 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

968 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


973 
	`fsync
 (
__fd
);

977 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


980 
	`gëho°id
 ();

983 
	$sync
 (Ë
__THROW
;

988 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

993 
	$gëdèbÀsize
 (Ë
__THROW
;

997 #i‚de‡
__USE_FILE_OFFSET64


998 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

999 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1001 #ifde‡
__REDIRECT_NTH


1002 
	`__REDIRECT_NTH
 (
åunˇã
,

1003 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1004 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1006 
	#åunˇã
 
åunˇã64


	)

1009 #ifde‡
__USE_LARGEFILE64


1010 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1011 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1016 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1019 #i‚de‡
__USE_FILE_OFFSET64


1020 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1022 #ifde‡
__REDIRECT_NTH


1023 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1024 
·runˇã64
Ë
__wur
;

1026 
	#·runˇã
 
·runˇã64


	)

1029 #ifde‡
__USE_LARGEFILE64


1030 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1036 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1040 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1046 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1050 #ifde‡
__USE_MISC


1061 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1066 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1078 
	#F_ULOCK
 0

	)

1079 
	#F_LOCK
 1

	)

1080 
	#F_TLOCK
 2

	)

1081 
	#F_TEST
 3

	)

1083 #i‚de‡
__USE_FILE_OFFSET64


1084 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1086 #ifde‡
__REDIRECT


1087 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1088 
lockf64
Ë
__wur
;

1090 
	#lockf
 
lockf64


	)

1093 #ifde‡
__USE_LARGEFILE64


1094 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1099 #ifde‡
__USE_GNU


1104 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1105 (
__exãnsi⁄__
 \

1106 ({ 
__ªsu…
; \

1107 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1108 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1109 
__ªsu…
; 
	}
}))

	)

1112 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1115 
fd©async
 (
__fûdes
);

1121 #ifdef 
__USE_XOPEN


1123 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1124 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1128 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1135 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1136 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1142 #ifde‡
__USE_XOPEN


1144 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1149 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1150 
	~<bôs/uni°d.h
>

1153 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/asm/unistd.h

1 #ifde‡
__i386__


2 
	~"uni°d_32.h
"

4 
	~"uni°d_64.h
"

	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS
,

502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

504 
	m_SC_V7_ILP32_OFF32
,

505 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

506 
	m_SC_V7_ILP32_OFFBIG
,

507 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

508 
	m_SC_V7_LP64_OFF64
,

509 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

510 
	m_SC_V7_LPBIG_OFFBIG
,

511 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

513 
	m_SC_SS_REPL_MAX
,

514 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

516 
	m_SC_TRACE_EVENT_NAME_MAX
,

517 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

518 
	m_SC_TRACE_NAME_MAX
,

519 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

520 
	m_SC_TRACE_SYS_MAX
,

521 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

522 
	m_SC_TRACE_USER_EVENT_MAX
,

523 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

525 
	m_SC_XOPEN_STREAMS
,

526 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

528 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

529 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

530 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


531 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

537 
	m_CS_PATH
,

538 
	#_CS_PATH
 
_CS_PATH


	)

540 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

541 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

544 
	m_CS_GNU_LIBC_VERSION
,

545 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

546 
	m_CS_GNU_LIBPTHREAD_VERSION
,

547 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

549 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

550 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

553 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

554 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

557 
	m_CS_LFS_CFLAGS
 = 1000,

558 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

559 
	m_CS_LFS_LDFLAGS
,

560 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

561 
	m_CS_LFS_LIBS
,

562 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

563 
	m_CS_LFS_LINTFLAGS
,

564 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

565 
	m_CS_LFS64_CFLAGS
,

566 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

567 
	m_CS_LFS64_LDFLAGS
,

568 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

569 
	m_CS_LFS64_LIBS
,

570 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

571 
	m_CS_LFS64_LINTFLAGS
,

572 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

575 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

577 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

579 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

580 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

581 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

588 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

589 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

593 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

594 
	m_CS_XBS5_LP64_OFF64_LIBS
,

595 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

596 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

597 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

604 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

605 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

613 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

621 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

622 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

629 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

630 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

637 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

638 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

646 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

654 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

655 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

662 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

663 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

670 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


671 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


23 
	~<bôs/w‹dsize.h
>

43 #i‡
__WORDSIZE
 == 64

57 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

58 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

59 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

62 
	#_POSIX_V7_LP64_OFF64
 1

	)

63 
	#_POSIX_V6_LP64_OFF64
 1

	)

64 
	#_XBS5_LP64_OFF64
 1

	)

70 
	#_POSIX_V7_ILP32_OFF32
 1

	)

71 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

72 
	#_POSIX_V6_ILP32_OFF32
 1

	)

73 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

74 
	#_XBS5_ILP32_OFF32
 1

	)

75 
	#_XBS5_ILP32_OFFBIG
 1

	)

92 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

93 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

94 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

95 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

96 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

97 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
__ASSEMBLER__


43 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

45 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


47 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

52 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


56 
	#EDOM
 33

	)

57 
	#EILSEQ
 84

	)

58 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

20 #i‚def 
_FCNTL_H


24 
	~<sys/ty≥s.h
>

25 
	~<bôs/w‹dsize.h
>

26 #ifde‡
__USE_GNU


27 
	~<bôs/uio.h
>

33 
	#O_ACCMODE
 0003

	)

34 
	#O_RDONLY
 00

	)

35 
	#O_WRONLY
 01

	)

36 
	#O_RDWR
 02

	)

37 
	#O_CREAT
 0100

	)

38 
	#O_EXCL
 0200

	)

39 
	#O_NOCTTY
 0400

	)

40 
	#O_TRUNC
 01000

	)

41 
	#O_APPEND
 02000

	)

42 
	#O_NONBLOCK
 04000

	)

43 
	#O_NDELAY
 
O_NONBLOCK


	)

44 
	#O_SYNC
 010000

	)

45 
	#O_FSYNC
 
O_SYNC


	)

46 
	#O_ASYNC
 020000

	)

48 #ifde‡
__USE_GNU


49 
	#O_DIRECT
 040000

	)

50 
	#O_DIRECTORY
 0200000

	)

51 
	#O_NOFOLLOW
 0400000

	)

52 
	#O_NOATIME
 01000000

	)

53 
	#O_CLOEXEC
 02000000

	)

59 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


60 
	#O_DSYNC
 
O_SYNC


	)

61 
	#O_RSYNC
 
O_SYNC


	)

64 #ifde‡
__USE_LARGEFILE64


65 #i‡
__WORDSIZE
 == 64

66 
	#O_LARGEFILE
 0

	)

68 
	#O_LARGEFILE
 0100000

	)

73 
	#F_DUPFD
 0

	)

74 
	#F_GETFD
 1

	)

75 
	#F_SETFD
 2

	)

76 
	#F_GETFL
 3

	)

77 
	#F_SETFL
 4

	)

78 #i‡
__WORDSIZE
 == 64

79 
	#F_GETLK
 5

	)

80 
	#F_SETLK
 6

	)

81 
	#F_SETLKW
 7

	)

83 
	#F_GETLK64
 5

	)

84 
	#F_SETLK64
 6

	)

85 
	#F_SETLKW64
 7

	)

87 #i‚de‡
__USE_FILE_OFFSET64


88 
	#F_GETLK
 5

	)

89 
	#F_SETLK
 6

	)

90 
	#F_SETLKW
 7

	)

92 
	#F_GETLK
 
F_GETLK64


	)

93 
	#F_SETLK
 
F_SETLK64


	)

94 
	#F_SETLKW
 
F_SETLKW64


	)

96 
	#F_GETLK64
 12

	)

97 
	#F_SETLK64
 13

	)

98 
	#F_SETLKW64
 14

	)

101 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


102 
	#F_SETOWN
 8

	)

103 
	#F_GETOWN
 9

	)

106 #ifde‡
__USE_GNU


107 
	#F_SETSIG
 10

	)

108 
	#F_GETSIG
 11

	)

109 
	#F_SETOWN_EX
 15

	)

110 
	#F_GETOWN_EX
 16

	)

113 #ifde‡
__USE_GNU


114 
	#F_SETLEASE
 1024

	)

115 
	#F_GETLEASE
 1025

	)

116 
	#F_NOTIFY
 1026

	)

117 
	#F_DUPFD_CLOEXEC
 1030

	)

122 
	#FD_CLOEXEC
 1

	)

125 
	#F_RDLCK
 0

	)

126 
	#F_WRLCK
 1

	)

127 
	#F_UNLCK
 2

	)

130 
	#F_EXLCK
 4

	)

131 
	#F_SHLCK
 8

	)

133 #ifde‡
__USE_BSD


135 
	#LOCK_SH
 1

	)

136 
	#LOCK_EX
 2

	)

137 
	#LOCK_NB
 4

	)

139 
	#LOCK_UN
 8

	)

142 #ifde‡
__USE_GNU


143 
	#LOCK_MAND
 32

	)

144 
	#LOCK_READ
 64

	)

145 
	#LOCK_WRITE
 128

	)

146 
	#LOCK_RW
 192

	)

149 #ifde‡
__USE_GNU


151 
	#DN_ACCESS
 0x00000001

	)

152 
	#DN_MODIFY
 0x00000002

	)

153 
	#DN_CREATE
 0x00000004

	)

154 
	#DN_DELETE
 0x00000008

	)

155 
	#DN_RENAME
 0x00000010

	)

156 
	#DN_ATTRIB
 0x00000020

	)

157 
	#DN_MULTISHOT
 0x80000000

	)

160 
	sÊock


162 
	ml_ty≥
;

163 
	ml_whí˚
;

164 #i‚de‡
__USE_FILE_OFFSET64


165 
__off_t
 
	ml_°¨t
;

166 
__off_t
 
	ml_Àn
;

168 
__off64_t
 
	ml_°¨t
;

169 
__off64_t
 
	ml_Àn
;

171 
__pid_t
 
	ml_pid
;

174 #ifde‡
__USE_LARGEFILE64


175 
	sÊock64


177 
	ml_ty≥
;

178 
	ml_whí˚
;

179 
__off64_t
 
	ml_°¨t
;

180 
__off64_t
 
	ml_Àn
;

181 
__pid_t
 
	ml_pid
;

185 #ifde‡
__USE_GNU


187 
	e__pid_ty≥


189 
	mF_OWNER_TID
 = 0,

190 
	mF_OWNER_PID
,

191 
	mF_OWNER_GID


195 
	sf_ow√r_ex


197 
__pid_ty≥
 
	mty≥
;

198 
__pid_t
 
	mpid
;

204 #ifdef 
__USE_BSD


205 
	#FAPPEND
 
O_APPEND


	)

206 
	#FFSYNC
 
O_FSYNC


	)

207 
	#FASYNC
 
O_ASYNC


	)

208 
	#FNONBLOCK
 
O_NONBLOCK


	)

209 
	#FNDELAY
 
O_NDELAY


	)

213 #ifde‡
__USE_XOPEN2K


214 
	#POSIX_FADV_NORMAL
 0

	)

215 
	#POSIX_FADV_RANDOM
 1

	)

216 
	#POSIX_FADV_SEQUENTIAL
 2

	)

217 
	#POSIX_FADV_WILLNEED
 3

	)

218 
	#POSIX_FADV_DONTNEED
 4

	)

219 
	#POSIX_FADV_NOREUSE
 5

	)

223 #ifde‡
__USE_GNU


225 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

228 
	#SYNC_FILE_RANGE_WRITE
 2

	)

231 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

236 
	#SPLICE_F_MOVE
 1

	)

237 
	#SPLICE_F_NONBLOCK
 2

	)

240 
	#SPLICE_F_MORE
 4

	)

241 
	#SPLICE_F_GIFT
 8

	)

245 #ifde‡
__USE_ATFILE


246 
	#AT_FDCWD
 -100

	)

249 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

250 
	#AT_REMOVEDIR
 0x200

	)

252 
	#AT_SYMLINK_FOLLOW
 0x400

	)

253 
	#AT_EACCESS
 0x200

	)

257 
	g__BEGIN_DECLS


259 #ifde‡
__USE_GNU


262 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

263 
__THROW
;

267 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__‰om
, __off64_à
__to
,

268 
__Êags
);

272 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

273 
size_t
 
__cou¡
, 
__Êags
);

276 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

277 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

278 
__Êags
);

281 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

282 
__Êags
);

285 #i‚de‡
__USE_FILE_OFFSET64


286 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

288 #ifde‡
__REDIRECT


289 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

290 
__off64_t
 
__Àn
),

291 
ÁŒoˇã64
);

293 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

296 #ifde‡
__USE_LARGEFILE64


297 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

298 
__off64_t
 
__Àn
);

302 
__END_DECLS


	@/usr/include/bits/fcntl2.h

20 #i‚def 
_FCNTL_H


26 #i‚de‡
__USE_FILE_OFFSET64


27 
	$__›í_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

28 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

29 
›í
Ë
	`__n⁄nuŒ
 ((1));

31 
	`__REDIRECT
 (
__›í_2
, (
__c⁄°
 *
__∑th
, 
__oÊag
),

32 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

33 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

34 
›í64
Ë
	`__n⁄nuŒ
 ((1));

36 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

38 
	`__îr‹de˛
 (
__›í_missög_mode
,

41 
__exã∫_Æways_ölöe
 

42 
	$›í
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

44 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

45 
	`__›í_too_m™y_¨gs
 ();

47 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

49 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

51 
	`__›í_missög_mode
 ();

52  
	`__›í_2
 (
__∑th
, 
__oÊag
);

54  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

57 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

58  
	`__›í_2
 (
__∑th
, 
__oÊag
);

60  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

61 
	}
}

64 #ifde‡
__USE_LARGEFILE64


65 
	$__›í64_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

66 
	`__REDIRECT
 (
__›í64_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
,

67 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

68 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

70 
	`__îr‹de˛
 (
__›í64_missög_mode
,

73 
__exã∫_Æways_ölöe
 

74 
	$›í64
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

76 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

77 
	`__›í64_too_m™y_¨gs
 ();

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

81 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

83 
	`__›í64_missög_mode
 ();

84  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

86  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

89 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

90  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

92  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

93 
	}
}

97 #ifde‡
__USE_ATFILE


98 #i‚de‡
__USE_FILE_OFFSET64


99 
	$__›í©_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

100 
	`__n⁄nuŒ
 ((2));

101 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

102 
__oÊag
, ...), 
›í©
)

103 
	`__n⁄nuŒ
 ((2));

105 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, 
__c⁄°
 *
__∑th
,

106 
__oÊag
), 
__›í©64_2
)

107 
	`__n⁄nuŒ
 ((2));

108 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

109 
__oÊag
, ...), 
›í©64
)

110 
	`__n⁄nuŒ
 ((2));

112 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

114 
	`__îr‹de˛
 (
__›í©_missög_mode
,

117 
__exã∫_Æways_ölöe
 

118 
	$›í©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

120 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

121 
	`__›í©_too_m™y_¨gs
 ();

123 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

125 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

127 
	`__›í©_missög_mode
 ();

128  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

130  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

133 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

134  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

136  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

137 
	}
}

140 #ifde‡
__USE_LARGEFILE64


141 
	$__›í©64_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

142 
	`__n⁄nuŒ
 ((2));

143 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

144 
__oÊag
, ...), 
›í©64
)

145 
	`__n⁄nuŒ
 ((2));

146 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

148 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

151 
__exã∫_Æways_ölöe
 

152 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

154 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

155 
	`__›í©64_too_m™y_¨gs
 ();

157 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

159 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

161 
	`__›í©64_missög_mode
 ();

162  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

164  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

167 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

168  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

170  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

171 
	}
}

	@/usr/include/bits/huge_val.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VAL
 (
__exãnsi⁄__
 0x1.0
p2047
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VAL
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__DI__
))); 
__d
; }) \

37 { 
__l
: 0x7ff0000000000000ULL }).
__d
)

	)

41 
	~<ídün.h
>

43 uni⁄ { 
	m__c
[8]; 
	m__d
; } 
	t__huge_vÆ_t
;

45 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


46 
	#__HUGE_VAL_byãs
 { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 }

	)

48 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


49 
	#__HUGE_VAL_byãs
 { 0, 0, 0, 0, 0, 0, 0xf0, 0x7‡}

	)

52 
__huge_vÆ_t
 
	g__huge_vÆ
 = { 
__HUGE_VAL_byãs
 };

53 
	#HUGE_VAL
 (
__huge_vÆ
.
__d
)

	)

	@/usr/include/bits/huge_valf.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VALF
 (
__exãnsi⁄__
 0x1.0
p255f
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VALF
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__SI__
))); 
__d
; }) \

37 { 
__l
: 0x7f800000UL }).
__d
)

	)

41 uni⁄ { 
	m__c
[4]; 
	m__f
; } 
	t__huge_vÆf_t
;

43 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


44 
	#__HUGE_VALF_byãs
 { 0x7f, 0x80, 0, 0 }

	)

46 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


47 
	#__HUGE_VALF_byãs
 { 0, 0, 0x80, 0x7‡}

	)

50 
__huge_vÆf_t
 
	g__huge_vÆf
 = { 
__HUGE_VALF_byãs
 };

51 
	#HUGE_VALF
 (
__huge_vÆf
.
__f
)

	)

	@/usr/include/bits/huge_vall.h

21 #i‚de‡
_MATH_H


25 #i‡
__GNUC_PREREQ
(3,3)

26 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
())

	)

28 
	#HUGE_VALL
 ((Ë
HUGE_VAL
)

	)

	@/usr/include/bits/inf.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#INFINITY
 (
	`__buûtö_öff
())

	)

29 
	#INFINITY
 
HUGE_VALF


	)

	@/usr/include/bits/mathcalls.h

46 #i‚de‡
_MATH_H


53 
_MdoubÀ_BEGIN_NAMESPACE


55 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

57 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

59 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

61 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

64 
__MATHCALL
 (
cos
,, (
_MdoubÀ_
 
__x
));

66 
__MATHCALL
 (
sö
,, (
_MdoubÀ_
 
__x
));

68 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

73 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

75 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

77 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

78 
	g_MdoubÀ_END_NAMESPACE


80 #ifde‡
__USE_GNU


82 
__MATHDECL
 (,
söcos
,,

83 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

86 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


87 
__BEGIN_NAMESPACE_C99


89 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

91 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

93 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

94 
	g__END_NAMESPACE_C99


99 
_MdoubÀ_BEGIN_NAMESPACE


101 
__MATHCALL
 (
exp
,, (
_MdoubÀ_
 
__x
));

104 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

107 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

110 
__MATHCALL
 (
log
,, (
_MdoubÀ_
 
__x
));

113 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

116 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
));

117 
	g_MdoubÀ_END_NAMESPACE


119 #ifde‡
__USE_GNU


121 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

123 
__MATHCALL
 (
pow10
,, (
_MdoubÀ_
 
__x
));

126 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


127 
__BEGIN_NAMESPACE_C99


129 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

132 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

135 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

136 
	g__END_NAMESPACE_C99


139 #ifde‡
__USE_ISOC99


140 
__BEGIN_NAMESPACE_C99


142 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

145 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

146 
	g__END_NAMESPACE_C99


152 
_MdoubÀ_BEGIN_NAMESPACE


154 
__MATHCALL
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

157 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

158 
	g_MdoubÀ_END_NAMESPACE


160 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


161 
__BEGIN_NAMESPACE_C99


163 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

164 
	g__END_NAMESPACE_C99


167 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


168 
__BEGIN_NAMESPACE_C99


170 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

171 
	g__END_NAMESPACE_C99


177 
_MdoubÀ_BEGIN_NAMESPACE


179 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

182 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

185 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

188 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

193 
__MATHDECL_1
 (,
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

196 
__MATHDECL_1
 (,
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

197 
	g_MdoubÀ_END_NAMESPACE


199 #ifde‡
__USE_MISC


202 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

205 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

208 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

212 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

215 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


216 
__BEGIN_NAMESPACE_C99


218 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

219 
	g__END_NAMESPACE_C99


222 #ifde‡
__USE_ISOC99


223 
__BEGIN_NAMESPACE_C99


225 
__MATHCALLX
 (
«n
,, (
__c⁄°
 *
__ègb
), (
__c⁄°__
));

226 
	g__END_NAMESPACE_C99


231 
__MATHDECL_1
 (,
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

233 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

238 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

239 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

240 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

241 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

242 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

243 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

247 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


248 
__BEGIN_NAMESPACE_C99


250 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

251 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

252 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

253 
	g__END_NAMESPACE_C99


256 #ifde‡
__USE_ISOC99


257 
__BEGIN_NAMESPACE_C99


259 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

260 
	g__END_NAMESPACE_C99


263 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


265 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

268 #ifde‡
__USE_MISC


272 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

276 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


277 
__BEGIN_NAMESPACE_C99


280 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

283 
__MATHCALLX
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

284 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT


285 
__MATHCALLX
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
), (
__c⁄°__
));

289 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

291 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


293 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

297 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

300 #ifde‡
__USE_ISOC99


302 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

306 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

310 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

314 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

319 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

326 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

327 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

331 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

332 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

336 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

339 
__MATHCALL
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

342 
__MATHCALL
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

346 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

347 
__©åibuã__
 ((
__c⁄°__
));

350 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

351 
__©åibuã__
 ((
__c⁄°__
));

355 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

358 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


359 
	g__END_NAMESPACE_C99


362 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


364 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathdef.h

19 #i‡!
deföed
 
_MATH_H
 && !deföed 
_COMPLEX_H


23 #i‡
deföed
 
__USE_ISOC99
 && deföed 
_MATH_H
 && !deföed 
_MATH_H_MATHDEF


24 
	#_MATH_H_MATHDEF
 1

	)

26 
	~<bôs/w‹dsize.h
>

28 #i‡
__WORDSIZE
 =64 || (
deföed
 
__FLT_EVAL_METHOD__
 && __FLT_EVAL_METHOD__ == 0)

31 
	tÊﬂt_t
;

32 
	tdoubÀ_t
;

38 
	tÊﬂt_t
;

40 
	tdoubÀ_t
;

45 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

46 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

	@/usr/include/bits/mathinline.h

21 #i‚de‡
_MATH_H


25 
	~<bôs/w‹dsize.h
>

27 #i‚de‡
__exã∫_ölöe


28 
	#__MATH_INLINE
 
__ölöe


	)

30 
	#__MATH_INLINE
 
__exã∫_ölöe


	)

34 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__
 && __GNUC__ >= 2

37 
__MATH_INLINE
 

38 
__NTH
 (
	$__signbôf
 (
__x
))

40 #i‡
__WORDSIZE
 == 32

41 
__exãnsi⁄__
 uni⁄ { 
__f
; 
__i
; } 
__u
 = { __f: 
__x
 };

42  
__u
.
__i
 < 0;

44 
__m
;

45 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

46  
__m
 & 0x8;

48 
	}
}

49 
__MATH_INLINE
 

50 
__NTH
 (
	$__signbô
 (
__x
))

52 #i‡
__WORDSIZE
 == 32

53 
__exãnsi⁄__
 uni⁄ { 
__d
; 
__i
[2]; } 
__u
 = { __d: 
__x
 };

54  
__u
.
__i
[1] < 0;

56 
__m
;

57 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

58  
__m
 & 0x80;

60 
	}
}

61 
__MATH_INLINE
 

62 
__NTH
 (
	$__signbôl
 (
__x
))

64 
__exãnsi⁄__
 uni⁄ { 
__l
; 
__i
[3]; } 
__u
 = { __l: 
__x
 };

65  (
__u
.
__i
[2] & 0x8000) != 0;

66 
	}
}

	@/usr/include/bits/mman.h

20 #i‚de‡
_SYS_MMAN_H


33 
	#PROT_READ
 0x1

	)

34 
	#PROT_WRITE
 0x2

	)

35 
	#PROT_EXEC
 0x4

	)

36 
	#PROT_NONE
 0x0

	)

37 
	#PROT_GROWSDOWN
 0x01000000

	)

39 
	#PROT_GROWSUP
 0x02000000

	)

43 
	#MAP_SHARED
 0x01

	)

44 
	#MAP_PRIVATE
 0x02

	)

45 #ifde‡
__USE_MISC


46 
	#MAP_TYPE
 0x0‡

	)

50 
	#MAP_FIXED
 0x10

	)

51 #ifde‡
__USE_MISC


52 
	#MAP_FILE
 0

	)

53 
	#MAP_ANONYMOUS
 0x20

	)

54 
	#MAP_ANON
 
MAP_ANONYMOUS


	)

55 
	#MAP_32BIT
 0x40

	)

59 #ifde‡
__USE_MISC


60 
	#MAP_GROWSDOWN
 0x00100

	)

61 
	#MAP_DENYWRITE
 0x00800

	)

62 
	#MAP_EXECUTABLE
 0x01000

	)

63 
	#MAP_LOCKED
 0x02000

	)

64 
	#MAP_NORESERVE
 0x04000

	)

65 
	#MAP_POPULATE
 0x08000

	)

66 
	#MAP_NONBLOCK
 0x10000

	)

67 
	#MAP_STACK
 0x20000

	)

71 
	#MS_ASYNC
 1

	)

72 
	#MS_SYNC
 4

	)

73 
	#MS_INVALIDATE
 2

	)

76 
	#MCL_CURRENT
 1

	)

77 
	#MCL_FUTURE
 2

	)

81 #ifde‡
__USE_GNU


82 
	#MREMAP_MAYMOVE
 1

	)

83 
	#MREMAP_FIXED
 2

	)

87 #ifde‡
__USE_BSD


88 
	#MADV_NORMAL
 0

	)

89 
	#MADV_RANDOM
 1

	)

90 
	#MADV_SEQUENTIAL
 2

	)

91 
	#MADV_WILLNEED
 3

	)

92 
	#MADV_DONTNEED
 4

	)

93 
	#MADV_REMOVE
 9

	)

94 
	#MADV_DONTFORK
 10

	)

95 
	#MADV_DOFORK
 11

	)

96 
	#MADV_MERGEABLE
 12

	)

97 
	#MADV_UNMERGEABLE
 13

	)

98 
	#MADV_HWPOISON
 100

	)

102 #ifde‡
__USE_XOPEN2K


103 
	#POSIX_MADV_NORMAL
 0

	)

104 
	#POSIX_MADV_RANDOM
 1

	)

105 
	#POSIX_MADV_SEQUENTIAL
 2

	)

106 
	#POSIX_MADV_WILLNEED
 3

	)

107 
	#POSIX_MADV_DONTNEED
 4

	)

	@/usr/include/bits/nan.h

20 #i‚de‡
_MATH_H


27 #i‡
__GNUC_PREREQ
(3,3)

29 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

31 #ñi‡
deföed
 
__GNUC__


33 
	#NAN
 \

34 (
__exãnsi⁄__
 \

35 ((uni⁄ { 
__l
 
	`__©åibuã__
 ((
	`__mode__
 (
__SI__
))); 
__d
; }) \

36 { 
__l
: 0x7fc00000UL }).
__d
)

	)

40 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#__«n_byãs
 { 0x7f, 0xc0, 0, 0 }

	)

45 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


46 
	#__«n_byãs
 { 0, 0, 0xc0, 0x7‡}

	)

49 uni⁄ { 
	m__c
[4]; 
	m__d
; } 
__«n_uni⁄


50 
	g__©åibuã_u£d__
 = { 
__«n_byãs
 };

51 
	#NAN
 (
__«n_uni⁄
.
__d
)

	)

	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

90 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


93 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

97 
	#_POSIX_PATH_MAX
 256

	)

100 
	#_POSIX_PIPE_BUF
 512

	)

104 
	#_POSIX_RE_DUP_MAX
 255

	)

107 
	#_POSIX_RTSIG_MAX
 8

	)

110 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

113 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

116 
	#_POSIX_SIGQUEUE_MAX
 32

	)

119 
	#_POSIX_SSIZE_MAX
 32767

	)

122 
	#_POSIX_STREAM_MAX
 8

	)

125 
	#_POSIX_SYMLINK_MAX
 255

	)

129 
	#_POSIX_SYMLOOP_MAX
 8

	)

132 
	#_POSIX_TIMER_MAX
 32

	)

135 
	#_POSIX_TTY_NAME_MAX
 9

	)

138 
	#_POSIX_TZNAME_MAX
 6

	)

140 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


142 
	#_POSIX_QLIMIT
 1

	)

146 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

149 
	#_POSIX_UIO_MAXIOV
 16

	)

153 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

157 
	~<bôs/loˇl_lim.h
>

160 #i‚def 
SSIZE_MAX


161 
	#SSIZE_MAX
 
LONG_MAX


	)

168 #i‚def 
NGROUPS_MAX


169 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_BITS_POSIX_OPT_H


21 
	#_BITS_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

36 
	#_POSIX_FSYNC
 200809L

	)

39 
	#_POSIX_MAPPED_FILES
 200809L

	)

42 
	#_POSIX_MEMLOCK
 200809L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200809L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

86 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

90 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

92 #ifde‡
__USE_XOPEN2K8


94 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

97 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

101 
	#_POSIX_SEMAPHORES
 200809L

	)

104 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

107 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

108 
	#_POSIX_ASYNC_IO
 1

	)

110 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

112 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

115 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

118 
	#_LFS_LARGEFILE
 1

	)

119 
	#_LFS64_LARGEFILE
 1

	)

120 
	#_LFS64_STDIO
 1

	)

123 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

126 
	#_POSIX_CPUTIME
 0

	)

129 
	#_POSIX_THREAD_CPUTIME
 0

	)

132 
	#_POSIX_REGEXP
 1

	)

135 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

138 
	#_POSIX_SHELL
 1

	)

141 
	#_POSIX_TIMEOUTS
 200809L

	)

144 
	#_POSIX_SPIN_LOCKS
 200809L

	)

147 
	#_POSIX_SPAWN
 200809L

	)

150 
	#_POSIX_TIMERS
 200809L

	)

153 
	#_POSIX_BARRIERS
 200809L

	)

156 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

159 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

162 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

165 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

168 
	#_POSIX_ADVISORY_INFO
 200809L

	)

171 
	#_POSIX_IPV6
 200809L

	)

174 
	#_POSIX_RAW_SOCKETS
 200809L

	)

177 
	#_POSIX2_CHAR_TERM
 200809L

	)

180 
	#_POSIX_SPORADIC_SERVER
 -1

	)

181 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

184 
	#_POSIX_TRACE
 -1

	)

185 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

186 
	#_POSIX_TRACE_INHERIT
 -1

	)

187 
	#_POSIX_TRACE_LOG
 -1

	)

190 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

37 #ifde‡
__USE_MISC


39 
	#CSIGNAL
 0x000000f‡

	)

40 
	#CLONE_VM
 0x00000100

	)

41 
	#CLONE_FS
 0x00000200

	)

42 
	#CLONE_FILES
 0x00000400

	)

43 
	#CLONE_SIGHAND
 0x00000800

	)

44 
	#CLONE_PTRACE
 0x00002000

	)

45 
	#CLONE_VFORK
 0x00004000

	)

47 
	#CLONE_PARENT
 0x00008000

	)

49 
	#CLONE_THREAD
 0x00010000

	)

50 
	#CLONE_NEWNS
 0x00020000

	)

51 
	#CLONE_SYSVSEM
 0x00040000

	)

52 
	#CLONE_SETTLS
 0x00080000

	)

53 
	#CLONE_PARENT_SETTID
 0x00100000

	)

55 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

57 
	#CLONE_DETACHED
 0x00400000

	)

58 
	#CLONE_UNTRACED
 0x00800000

	)

60 
	#CLONE_CHILD_SETTID
 0x01000000

	)

62 
	#CLONE_NEWUTS
 0x04000000

	)

63 
	#CLONE_NEWIPC
 0x08000000

	)

64 
	#CLONE_NEWUSER
 0x10000000

	)

65 
	#CLONE_NEWPID
 0x20000000

	)

66 
	#CLONE_NEWNET
 0x40000000

	)

67 
	#CLONE_IO
 0x80000000

	)

71 
	ssched_∑øm


73 
	m__sched_¥i‹ôy
;

76 
	g__BEGIN_DECLS


78 #ifde‡
__USE_MISC


80 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

81 
__Êags
, *
__¨g
, ...Ë
__THROW
;

84 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

87 
	$sched_gë˝u
 (Ë
__THROW
;

90 
__END_DECLS


94 #i‡!
deföed
 
__deföed_sched∑øm
 \

95 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

96 
	#__deföed_sched∑øm
 1

	)

98 
	s__sched_∑øm


100 
__sched_¥i‹ôy
;

102 #unde‡
__√ed_sched∑øm


106 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


107 
	#__˝u_£t_t_deföed


	)

109 
	#__CPU_SETSIZE
 1024

	)

110 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

113 
	t__˝u_mask
;

116 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

117 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

122 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

123 } 
	t˝u_£t_t
;

126 #i‡
	`__GNUC_PREREQ
 (2, 91)

127 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

128 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

130 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

132 
size_t
 
__i
; \

133 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

134 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

135 
__i
 = 0; __ò< 
__imax
; ++__i) \

136 
__bôs
[
__i
] = 0; \

137 
	}
} 0)

	)

139 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

140 (
__exãnsi⁄__
 \

141 ({ 
size_t
 
__˝u
 = (
˝u
); \

142 
__˝u
 < 8 * (
£tsize
) \

143 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

144 |
	`__CPUMASK
 (
__˝u
)) \

145 : 0; }))

	)

146 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

147 (
__exãnsi⁄__
 \

148 ({ 
size_t
 
__˝u
 = (
˝u
); \

149 
__˝u
 < 8 * (
£tsize
) \

150 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

151 &~
	`__CPUMASK
 (
__˝u
)) \

152 : 0; }))

	)

153 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

154 (
__exãnsi⁄__
 \

155 ({ 
size_t
 
__˝u
 = (
˝u
); \

156 
__˝u
 < 8 * (
£tsize
) \

157 ? ((((
__c⁄°
 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

158 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

159 : 0; }))

	)

161 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

162 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

164 #i‡
__GNUC_PREREQ
 (2, 91)

165 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

166 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

168 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

169 (
__exãnsi⁄__
 \

170 ({ 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

171 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

172 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

173 
size_t
 
__i
; \

174 
__i
 = 0; __ò< 
__imax
; ++__i) \

175 i‡(
__bôs
[
__i
] != __bits[__i]) \

177 
__i
 =
__imax
; }))

	)

180 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

181 (
__exãnsi⁄__
 \

182 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

183 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

184 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

185 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

186 
size_t
 
__i
; \

187 
__i
 = 0; __ò< 
__imax
; ++__i) \

188 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

189 
__de°
; }))

	)

191 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

192 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

193 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

194 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

196 
__BEGIN_DECLS


198 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

199 
__THROW
;

200 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

201 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

203 
__END_DECLS


	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/bits/setjmp2.h

20 #i‚de‡
_SETJMP_H


25 #ifde‡
__REDIRECT_NTH


26 
__REDIRECT_NTH
 (
l⁄gjmp
,

27 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

28 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

29 
__REDIRECT_NTH
 (
_l⁄gjmp
,

30 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

31 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

32 
__REDIRECT_NTH
 (
sigl⁄gjmp
,

33 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

34 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

36 
__l⁄gjmp_chk
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

37 
__THROW
 
__©åibuã__
 ((
__n‹ëu∫__
));

38 
	#l⁄gjmp
 
__l⁄gjmp_chk


	)

39 
	#_l⁄gjmp
 
__l⁄gjmp_chk


	)

40 
	#sigl⁄gjmp
 
__l⁄gjmp_chk


	)

	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

60 
	#SA_RESTART
 0x10000000

	)

61 
	#SA_NODEFER
 0x40000000

	)

63 
	#SA_RESETHAND
 0x80000000

	)

65 #ifde‡
__USE_MISC


66 
	#SA_INTERRUPT
 0x20000000

	)

69 
	#SA_NOMASK
 
SA_NODEFER


	)

70 
	#SA_ONESHOT
 
SA_RESETHAND


	)

71 
	#SA_STACK
 
SA_ONSTACK


	)

75 
	#SIG_BLOCK
 0

	)

76 
	#SIG_UNBLOCK
 1

	)

77 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‚de‡
_BITS_SIGCONTEXT_H


20 
	#_BITS_SIGCONTEXT_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


26 
	~<bôs/w‹dsize.h
>

28 
	s_Âªg


30 
	msignifiˇnd
[4];

31 
	mexp⁄ít
;

34 
	s_Âxªg


36 
	msignifiˇnd
[4];

37 
	mexp⁄ít
;

38 
	m∑ddög
[3];

41 
	s_xmmªg


43 
__uöt32_t
 
	mñemít
[4];

48 #i‡
__WORDSIZE
 == 32

50 
	s_Â°©e


53 
__uöt32_t
 
	mcw
;

54 
__uöt32_t
 
	msw
;

55 
__uöt32_t
 
	mèg
;

56 
__uöt32_t
 
	mùoff
;

57 
__uöt32_t
 
	mcs£l
;

58 
__uöt32_t
 
	md©aoff
;

59 
__uöt32_t
 
	md©a£l
;

60 
_Âªg
 
	m_°
[8];

61 
	m°©us
;

62 
	mmagic
;

65 
__uöt32_t
 
	m_fx§_ív
[6];

66 
__uöt32_t
 
	mmxc§
;

67 
__uöt32_t
 
	mª£rved
;

68 
_Âxªg
 
	m_fx§_°
[8];

69 
_xmmªg
 
	m_xmm
[8];

70 
__uöt32_t
 
	m∑ddög
[56];

73 #i‚de‡
sigc⁄ãxt_°ru˘


78 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

81 
	ssigc⁄ãxt


83 
	mgs
, 
	m__gsh
;

84 
	mfs
, 
	m__fsh
;

85 
	mes
, 
	m__esh
;

86 
	mds
, 
	m__dsh
;

87 
	medi
;

88 
	mesi
;

89 
	mebp
;

90 
	me•
;

91 
	mebx
;

92 
	medx
;

93 
	mecx
;

94 
	móx
;

95 
	må≠no
;

96 
	mîr
;

97 
	meù
;

98 
	mcs
, 
	m__csh
;

99 
	meÊags
;

100 
	me•_©_sig«l
;

101 
	mss
, 
	m__ssh
;

102 
_Â°©e
 * 
	mÂ°©e
;

103 
	mﬁdmask
;

104 
	m¸2
;

109 
	s_Â°©e


112 
__uöt16_t
 
	mcwd
;

113 
__uöt16_t
 
	mswd
;

114 
__uöt16_t
 
	m·w
;

115 
__uöt16_t
 
	mf›
;

116 
__uöt64_t
 
	mrù
;

117 
__uöt64_t
 
	mrdp
;

118 
__uöt32_t
 
	mmxc§
;

119 
__uöt32_t
 
	mmx¸_mask
;

120 
_Âxªg
 
	m_°
[8];

121 
_xmmªg
 
	m_xmm
[16];

122 
__uöt32_t
 
	m∑ddög
[24];

125 
	ssigc⁄ãxt


127 
	mr8
;

128 
	mr9
;

129 
	mr10
;

130 
	mr11
;

131 
	mr12
;

132 
	mr13
;

133 
	mr14
;

134 
	mr15
;

135 
	mrdi
;

136 
	mrsi
;

137 
	mrbp
;

138 
	mrbx
;

139 
	mrdx
;

140 
	møx
;

141 
	mrcx
;

142 
	mr•
;

143 
	mrù
;

144 
	meÊags
;

145 
	mcs
;

146 
	mgs
;

147 
	mfs
;

148 
	m__∑d0
;

149 
	mîr
;

150 
	må≠no
;

151 
	mﬁdmask
;

152 
	m¸2
;

153 
_Â°©e
 * 
	mÂ°©e
;

154 
	m__ª£rved1
 [8];

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

38 #ifde‡
__USE_GNU


40 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

41 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/bits/stat.h

19 #i‚de‡
_SYS_STAT_H


24 
	#_STAT_VER_KERNEL
 0

	)

26 #i‡
__WORDSIZE
 == 32

27 
	#_STAT_VER_SVR4
 2

	)

28 
	#_STAT_VER_LINUX
 3

	)

31 
	#_MKNOD_VER_LINUX
 1

	)

32 
	#_MKNOD_VER_SVR4
 2

	)

33 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

35 
	#_STAT_VER_LINUX
 1

	)

38 
	#_MKNOD_VER_LINUX
 0

	)

41 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

43 
	s°©


45 
__dev_t
 
	m°_dev
;

46 #i‡
__WORDSIZE
 == 32

47 
	m__∑d1
;

49 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


50 
__öo_t
 
	m°_öo
;

52 
__öo_t
 
	m__°_öo
;

54 #i‡
__WORDSIZE
 == 32

55 
__mode_t
 
	m°_mode
;

56 
__∆ök_t
 
	m°_∆ök
;

58 
__∆ök_t
 
	m°_∆ök
;

59 
__mode_t
 
	m°_mode
;

61 
__uid_t
 
	m°_uid
;

62 
__gid_t
 
	m°_gid
;

63 #i‡
__WORDSIZE
 == 64

64 
	m__∑d0
;

66 
__dev_t
 
	m°_rdev
;

67 #i‡
__WORDSIZE
 == 32

68 
	m__∑d2
;

70 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


71 
__off_t
 
	m°_size
;

73 
__off64_t
 
	m°_size
;

75 
__blksize_t
 
	m°_blksize
;

76 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


77 
__blk˙t_t
 
	m°_blocks
;

79 
__blk˙t64_t
 
	m°_blocks
;

81 #ifde‡
__USE_MISC


88 
time•ec
 
	m°_©im
;

89 
time•ec
 
	m°_mtim
;

90 
time•ec
 
	m°_˘im
;

91 
	#°_©ime
 
°_©im
.
tv_£c


	)

92 
	#°_mtime
 
°_mtim
.
tv_£c


	)

93 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

95 
__time_t
 
	m°_©ime
;

96 
	m°_©imí£c
;

97 
__time_t
 
	m°_mtime
;

98 
	m°_mtimí£c
;

99 
__time_t
 
	m°_˘ime
;

100 
	m°_˘imí£c
;

102 #i‡
__WORDSIZE
 == 64

103 
	m__unu£d
[3];

105 #i‚de‡
__USE_FILE_OFFSET64


106 
	m__unu£d4
;

107 
	m__unu£d5
;

109 
__öo64_t
 
	m°_öo
;

114 #ifde‡
__USE_LARGEFILE64


116 
	s°©64


118 
__dev_t
 
	m°_dev
;

119 #i‡
__WORDSIZE
 == 64

120 
__öo64_t
 
	m°_öo
;

121 
__∆ök_t
 
	m°_∆ök
;

122 
__mode_t
 
	m°_mode
;

124 
	m__∑d1
;

125 
__öo_t
 
	m__°_öo
;

126 
__mode_t
 
	m°_mode
;

127 
__∆ök_t
 
	m°_∆ök
;

129 
__uid_t
 
	m°_uid
;

130 
__gid_t
 
	m°_gid
;

131 #i‡
__WORDSIZE
 == 64

132 
	m__∑d0
;

133 
__dev_t
 
	m°_rdev
;

134 
__off_t
 
	m°_size
;

136 
__dev_t
 
	m°_rdev
;

137 
	m__∑d2
;

138 
__off64_t
 
	m°_size
;

140 
__blksize_t
 
	m°_blksize
;

141 
__blk˙t64_t
 
	m°_blocks
;

142 #ifde‡
__USE_MISC


149 
time•ec
 
	m°_©im
;

150 
time•ec
 
	m°_mtim
;

151 
time•ec
 
	m°_˘im
;

152 
	#°_©ime
 
°_©im
.
tv_£c


	)

153 
	#°_mtime
 
°_mtim
.
tv_£c


	)

154 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

156 
__time_t
 
	m°_©ime
;

157 
	m°_©imí£c
;

158 
__time_t
 
	m°_mtime
;

159 
	m°_mtimí£c
;

160 
__time_t
 
	m°_˘ime
;

161 
	m°_˘imí£c
;

163 #i‡
__WORDSIZE
 == 64

164 
	m__unu£d
[3];

166 
__öo64_t
 
	m°_öo
;

172 
	#_STATBUF_ST_BLKSIZE


	)

173 
	#_STATBUF_ST_RDEV


	)

175 
	#_STATBUF_ST_NSEC


	)

179 
	#__S_IFMT
 0170000

	)

182 
	#__S_IFDIR
 0040000

	)

183 
	#__S_IFCHR
 0020000

	)

184 
	#__S_IFBLK
 0060000

	)

185 
	#__S_IFREG
 0100000

	)

186 
	#__S_IFIFO
 0010000

	)

187 
	#__S_IFLNK
 0120000

	)

188 
	#__S_IFSOCK
 0140000

	)

192 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

193 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

194 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

198 
	#__S_ISUID
 04000

	)

199 
	#__S_ISGID
 02000

	)

200 
	#__S_ISVTX
 01000

	)

201 
	#__S_IREAD
 0400

	)

202 
	#__S_IWRITE
 0200

	)

203 
	#__S_IEXEC
 0100

	)

205 #ifde‡
__USE_ATFILE


206 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

207 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


31 
	#L_cu£rid
 9

	)

36 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


37 #unde‡
FOPEN_MAX


38 
	#FOPEN_MAX
 16

	)

41 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


42 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

57 
size_t
 
__Àn
))

59  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

60 
	}
}

62 #ifde‡
__USE_GNU


63 
__exã∫_Æways_ölöe
 *

64 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

65 
size_t
 
__Àn
))

67  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

68 
	}
}

77 
__exã∫_Æways_ölöe
 *

78 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

81 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

83 
	`__w¨n_mem£t_zîo_Àn
 ();

84  
__de°
;

86  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

87 
	}
}

89 #ifde‡
__USE_BSD


90 
__exã∫_Æways_ölöe
 

91 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__ª°ri˘
 
__§c
, *__ª°ri˘ 
__de°
,

92 
size_t
 
__Àn
))

94 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

95 
	}
}

97 
__exã∫_Æways_ölöe
 

98 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

100 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

101 
	}
}

104 
__exã∫_Æways_ölöe
 *

105 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

107  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

108 
	}
}

110 #ifde‡
__USE_GNU


111 
__exã∫_Æways_ölöe
 *

112 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

114  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

115 
	}
}

119 
__exã∫_Æways_ölöe
 *

120 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

121 
size_t
 
__Àn
))

123  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

124 
	}
}

127 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

128 
size_t
 
__de°Àn
Ë
__THROW
;

129 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

130 
__c⁄°
 *
__§c
,

131 
size_t
 
__n
), 
°≤˝y
);

133 
__exã∫_Æways_ölöe
 *

134 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

136 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

137 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

138  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

139  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

140 
	}
}

143 
__exã∫_Æways_ölöe
 *

144 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

146  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

147 
	}
}

150 
__exã∫_Æways_ölöe
 *

151 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

152 
size_t
 
__Àn
))

154  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

155 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

55 
	#TIMER_ABSTIME
 1

	)

61 #ifde‡
__√ed_timevÆ


62 #unde‡
__√ed_timevÆ


63 #i‚de‡
_STRUCT_TIMEVAL


64 
	#_STRUCT_TIMEVAL
 1

	)

65 
	~<bôs/ty≥s.h
>

69 
	stimevÆ


71 
__time_t
 
	mtv_£c
;

72 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

28 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

30 
size_t
 
__buÊí
), 
__ªad_chk
)

31 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

34 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


35 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

40  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

42 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

43  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

45  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

46 
	}
}

48 #ifde‡
__USE_UNIX98


49 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

50 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

51 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

52 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

53 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

54 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

55 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

56 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

57 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

58 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

59 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

60 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

61 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

62 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

64 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

65 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

66 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

67 
__¥ód64_chk
)

68 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

71 #i‚de‡
__USE_FILE_OFFSET64


72 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


73 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

75 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

77 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

78  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

80 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

81  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

82 
	`__bos0
 (
__buf
));

84  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

85 
	}
}

87 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


88 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

90 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

92 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

93  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

95 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

96  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

97 
	`__bos0
 (
__buf
));

100  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

101 
	}
}

104 #ifde‡
__USE_LARGEFILE64


105 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


106 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

108 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

110 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

111  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

113 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

114  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

115 
	`__bos0
 (
__buf
));

118  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

119 
	}
}

123 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


124 
ssize_t
 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

125 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

126 
size_t
 
__buÊí
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

128 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

129 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

130 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

131 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

132 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

133 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

134 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

135 
size_t
 
__buÊí
), 
__ªadlök_chk
)

136 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

139 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


140 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

141 
size_t
 
__Àn
))

143 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

145 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

146  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

148 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

149  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

151  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

152 
	}
}

155 #ifde‡
__USE_ATFILE


156 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

157 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

158 
size_t
 
__buÊí
)

159 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

160 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

161 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

162 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

163 
ªadlök©
)

164 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

165 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

166 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

168 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

169 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

173 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


174 
	`__NTH
 (
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

177 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

179 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

180  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

182 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

183  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

184 
	`__bos
 (
__buf
));

186  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

187 
	}
}

190 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

191 
__THROW
 
__wur
;

192 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

193 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

194 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

195 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

196 
__gëcwd_chk
)

197 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

200 
__exã∫_Æways_ölöe
 
__wur
 *

201 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

203 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

205 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

206  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

208 i‡(
__size
 > 
	`__bos
 (
__buf
))

209  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

211  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

212 
	}
}

214 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


215 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

217 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

218 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

221 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

222 
	`__NTH
 (
	$gëwd
 (*
__buf
))

224 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

225  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

226  
	`__gëwd_w¨n
 (
__buf
);

227 
	}
}

230 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

231 
size_t
 
__buÊí
Ë
__THROW
;

232 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

233 
size_t
 
__Àn
), 
c⁄f°r
);

234 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

235 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

236 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

237 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

240 
__exã∫_Æways_ölöe
 
size_t


241 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

243 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

245 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

246  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

248 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

249  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

251  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

252 
	}
}

255 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

256 
__THROW
 
__wur
;

257 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

258 
gëgroups
Ë
__wur
;

259 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

260 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

261 
__gëgroups_chk
)

262 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

265 
__exã∫_Æways_ölöe
 

266 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

268 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

270 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

271  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

273 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

274  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

276  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

277 
	}
}

280 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

281 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

282 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

283 
size_t
 
__buÊí
), 
ây«me_r
)

284 
	`__n⁄nuŒ
 ((2));

285 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

286 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

287 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

288 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

291 
__exã∫_Æways_ölöe
 

292 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

294 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

296 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

297  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

299 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

300  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

302  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

303 
	}
}

306 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


307 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

308 
	`__n⁄nuŒ
 ((1));

309 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

310 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

311 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

312 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

313 
__gëlogö_r_chk
)

314 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

317 
__exã∫_Æways_ölöe
 

318 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

320 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

322 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

323  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

325 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

326  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

328  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

329 
	}
}

333 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


334 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

335 
__THROW
 
	`__n⁄nuŒ
 ((1));

336 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

337 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

338 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

339 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

340 
__gëho°«me_chk
)

341 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

344 
__exã∫_Æways_ölöe
 

345 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

347 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

349 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

350  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

352 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

353  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

355  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

356 
	}
}

360 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

361 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

363 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

364 
size_t
 
__buÊí
),

365 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

366 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

367 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

368 
__gëdomaö«me_chk
)

369 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

373 
__exã∫_Æways_ölöe
 

374 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

376 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

378 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

379  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

381 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

382  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

384  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

385 
	}
}

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

24 #ifde‡
__WCHAR_MAX__


25 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

27 
	#__WCHAR_MAX
 (2147483647)

	)

32 #ifde‡
__WCHAR_UNSIGNED__


33 
	#__WCHAR_MIN
 
L
'\0'

	)

37 #ñi‡
L
'\0' - 1 > 0

38 
	#__WCHAR_MIN
 
L
'\0'

	)

40 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/dirent.h

23 #i‚def 
_DIRENT_H


24 
	#_DIRENT_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifde‡
__USE_XOPEN


33 #i‚de‡
__öo_t_deföed


34 #i‚de‡
__USE_FILE_OFFSET64


35 
__öo_t
 
	töo_t
;

37 
__öo64_t
 
	töo_t
;

39 
	#__öo_t_deföed


	)

41 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


42 
__öo64_t
 
	töo64_t
;

43 
	#__öo64_t_deföed


	)

62 
	~<bôs/dúít.h
>

64 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
Ë&& !deföed 
d_fûío


65 
	#d_öo
 
d_fûío


	)

82 #ifde‡
_DIRENT_HAVE_D_NAMLEN


83 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

84 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

86 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

87 #ifde‡
_DIRENT_HAVE_D_RECLEN


88 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

90 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

91 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

96 #ifde‡
__USE_BSD


100 
	mDT_UNKNOWN
 = 0,

101 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

102 
	mDT_FIFO
 = 1,

103 
	#DT_FIFO
 
DT_FIFO


	)

104 
	mDT_CHR
 = 2,

105 
	#DT_CHR
 
DT_CHR


	)

106 
	mDT_DIR
 = 4,

107 
	#DT_DIR
 
DT_DIR


	)

108 
	mDT_BLK
 = 6,

109 
	#DT_BLK
 
DT_BLK


	)

110 
	mDT_REG
 = 8,

111 
	#DT_REG
 
DT_REG


	)

112 
	mDT_LNK
 = 10,

113 
	#DT_LNK
 
DT_LNK


	)

114 
	mDT_SOCK
 = 12,

115 
	#DT_SOCK
 
DT_SOCK


	)

116 
	mDT_WHT
 = 14

117 
	#DT_WHT
 
DT_WHT


	)

121 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

122 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

128 
__dú°ªam
 
	tDIR
;

135 
DIR
 *
	$›ídú
 (
__c⁄°
 *
__«me
Ë
	`__n⁄nuŒ
 ((1));

137 #ifde‡
__USE_XOPEN2K8


142 
DIR
 *
	`fd›ídú
 (
__fd
);

150 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

162 #i‚de‡
__USE_FILE_OFFSET64


163 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

165 #ifde‡
__REDIRECT


166 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

167 
	`__n⁄nuŒ
 ((1));

169 
	#ªaddú
 
ªaddú64


	)

173 #ifde‡
__USE_LARGEFILE64


174 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

177 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


183 #i‚de‡
__USE_FILE_OFFSET64


184 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

185 
dúít
 *
__ª°ri˘
 
__íåy
,

186 
dúít
 **
__ª°ri˘
 
__ªsu…
)

187 
	`__n⁄nuŒ
 ((1, 2, 3));

189 #ifde‡
__REDIRECT


190 
	`__REDIRECT
 (
ªaddú_r
,

191 (
DIR
 *
__ª°ri˘
 
__dúp
,

192 
dúít
 *
__ª°ri˘
 
__íåy
,

193 
dúít
 **
__ª°ri˘
 
__ªsu…
),

194 
ªaddú64_r
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

196 
	#ªaddú_r
 
ªaddú64_r


	)

200 #ifde‡
__USE_LARGEFILE64


201 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

202 
dúít64
 *
__ª°ri˘
 
__íåy
,

203 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

204 
	`__n⁄nuŒ
 ((1, 2, 3));

209 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


212 
	~<bôs/ty≥s.h
>

215 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

218 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__XOPEN2K8


224 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

226 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


227 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

230 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


231 #i‚de‡
MAXNAMLEN


233 
	~<bôs/posix1_lim.h
>

236 #ifde‡
NAME_MAX


237 
	#MAXNAMLEN
 
NAME_MAX


	)

239 
	#MAXNAMLEN
 255

	)

244 
	#__√ed_size_t


	)

245 
	~<°ddef.h
>

251 #i‚de‡
__USE_FILE_OFFSET64


252 
	`sˇndú
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

253 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

254 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

255 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

256 
__c⁄°
 
dúít
 **))

257 
	`__n⁄nuŒ
 ((1, 2));

259 #ifde‡
__REDIRECT


260 
	`__REDIRECT
 (
sˇndú
,

261 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

262 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

263 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

264 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

265 
__c⁄°
 
dúít
 **)),

266 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

268 
	#sˇndú
 
sˇndú64


	)

272 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


275 
	`sˇndú64
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

276 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

277 (*
__£À˘‹
Ë(
__c⁄°
 
dúít64
 *),

278 (*
__cmp
Ë(
__c⁄°
 
dúít64
 **,

279 
__c⁄°
 
dúít64
 **))

280 
	`__n⁄nuŒ
 ((1, 2));

284 #i‚de‡
__USE_FILE_OFFSET64


285 
	$Æphas‹t
 (
__c⁄°
 
dúít
 **
__e1
,

286 
__c⁄°
 
dúít
 **
__e2
)

287 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 #ifde‡
__REDIRECT


290 
	`__REDIRECT_NTH
 (
Æphas‹t
,

291 (
__c⁄°
 
dúít
 **
__e1
,

292 
__c⁄°
 
dúít
 **
__e2
),

293 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

295 
	#Æphas‹t
 
Æphas‹t64


	)

299 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


300 
	$Æphas‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

301 
__c⁄°
 
dúít64
 **
__e2
)

302 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

307 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


312 #i‚de‡
__USE_FILE_OFFSET64


313 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

314 
size_t
 
__nbyãs
,

315 
__off_t
 *
__ª°ri˘
 
__ba£p
)

316 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

318 #ifde‡
__REDIRECT


319 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

320 (
__fd
, *
__ª°ri˘
 
__buf
,

321 
size_t
 
__nbyãs
,

322 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

323 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

325 
	#gëdúíåõs
 
gëdúíåõs64


	)

329 #ifde‡
__USE_LARGEFILE64


330 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

331 
size_t
 
__nbyãs
,

332 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

333 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

337 #ifde‡
__USE_GNU


339 #i‚de‡
__USE_FILE_OFFSET64


340 
	$vîsi⁄s‹t
 (
__c⁄°
 
dúít
 **
__e1
,

341 
__c⁄°
 
dúít
 **
__e2
)

342 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

344 #ifde‡
__REDIRECT


345 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

346 (
__c⁄°
 
dúít
 **
__e1
,

347 
__c⁄°
 
dúít
 **
__e2
),

348 
vîsi⁄s‹t64
)

349 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

351 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

355 #ifde‡
__USE_LARGEFILE64


356 
	$vîsi⁄s‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

357 
__c⁄°
 
dúít64
 **
__e2
)

358 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

362 
__END_DECLS


	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

95 #unde‡
__USE_ISOC99


96 #unde‡
__USE_ISOC95


97 #unde‡
__USE_POSIX


98 #unde‡
__USE_POSIX2


99 #unde‡
__USE_POSIX199309


100 #unde‡
__USE_POSIX199506


101 #unde‡
__USE_XOPEN


102 #unde‡
__USE_XOPEN_EXTENDED


103 #unde‡
__USE_UNIX98


104 #unde‡
__USE_XOPEN2K


105 #unde‡
__USE_XOPEN2K8


106 #unde‡
__USE_LARGEFILE


107 #unde‡
__USE_LARGEFILE64


108 #unde‡
__USE_FILE_OFFSET64


109 #unde‡
__USE_BSD


110 #unde‡
__USE_SVID


111 #unde‡
__USE_MISC


112 #unde‡
__USE_ATFILE


113 #unde‡
__USE_GNU


114 #unde‡
__USE_REENTRANT


115 #unde‡
__USE_FORTIFY_LEVEL


116 #unde‡
__FAVOR_BSD


117 #unde‡
__KERNEL_STRICT_NAMES


121 #i‚de‡
_LOOSE_KERNEL_NAMES


122 
	#__KERNEL_STRICT_NAMES


	)

126 
	#__USE_ANSI
 1

	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

144 #i‡
deföed
 
_BSD_SOURCE
 && \

145 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

146 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_XOPEN_SOURCE_EXTENDED
 || \

147 
deföed
 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

148 
	#__FAVOR_BSD
 1

	)

152 #ifde‡
_GNU_SOURCE


153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_POSIX_SOURCE


156 
	#_POSIX_SOURCE
 1

	)

157 #unde‡
_POSIX_C_SOURCE


158 
	#_POSIX_C_SOURCE
 200809L

	)

159 #unde‡
_XOPEN_SOURCE


160 
	#_XOPEN_SOURCE
 700

	)

161 #unde‡
_XOPEN_SOURCE_EXTENDED


162 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

163 #unde‡
_LARGEFILE64_SOURCE


164 
	#_LARGEFILE64_SOURCE
 1

	)

165 #unde‡
_BSD_SOURCE


166 
	#_BSD_SOURCE
 1

	)

167 #unde‡
_SVID_SOURCE


168 
	#_SVID_SOURCE
 1

	)

169 #unde‡
_ATFILE_SOURCE


170 
	#_ATFILE_SOURCE
 1

	)

175 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

176 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

177 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_XOPEN_SOURCE_EXTENDED
 && \

178 !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

179 
	#_BSD_SOURCE
 1

	)

180 
	#_SVID_SOURCE
 1

	)

187 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

188 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

189 
	#__USE_ISOC99
 1

	)

193 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

194 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

195 
	#__USE_ISOC95
 1

	)

200 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

201 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

202 
	#_POSIX_SOURCE
 1

	)

203 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

204 
	#_POSIX_C_SOURCE
 2

	)

205 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

206 
	#_POSIX_C_SOURCE
 199506L

	)

207 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

208 
	#_POSIX_C_SOURCE
 200112L

	)

210 
	#_POSIX_C_SOURCE
 200809L

	)

212 
	#__USE_POSIX_IMPLICITLY
 1

	)

215 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


216 
	#__USE_POSIX
 1

	)

219 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


220 
	#__USE_POSIX2
 1

	)

223 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

224 
	#__USE_POSIX199309
 1

	)

227 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

228 
	#__USE_POSIX199506
 1

	)

231 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

232 
	#__USE_XOPEN2K
 1

	)

233 #unde‡
__USE_ISOC99


234 
	#__USE_ISOC99
 1

	)

237 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

238 
	#__USE_XOPEN2K8
 1

	)

239 #unde‡
_ATFILE_SOURCE


240 
	#_ATFILE_SOURCE
 1

	)

243 #ifdef 
_XOPEN_SOURCE


244 
	#__USE_XOPEN
 1

	)

245 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

246 
	#__USE_XOPEN_EXTENDED
 1

	)

247 
	#__USE_UNIX98
 1

	)

248 #unde‡
_LARGEFILE_SOURCE


249 
	#_LARGEFILE_SOURCE
 1

	)

250 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

251 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

252 
	#__USE_XOPEN2K8
 1

	)

254 
	#__USE_XOPEN2K
 1

	)

255 #unde‡
__USE_ISOC99


256 
	#__USE_ISOC99
 1

	)

259 #ifde‡
_XOPEN_SOURCE_EXTENDED


260 
	#__USE_XOPEN_EXTENDED
 1

	)

265 #ifde‡
_LARGEFILE_SOURCE


266 
	#__USE_LARGEFILE
 1

	)

269 #ifde‡
_LARGEFILE64_SOURCE


270 
	#__USE_LARGEFILE64
 1

	)

273 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

274 
	#__USE_FILE_OFFSET64
 1

	)

277 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


278 
	#__USE_MISC
 1

	)

281 #ifdef 
_BSD_SOURCE


282 
	#__USE_BSD
 1

	)

285 #ifdef 
_SVID_SOURCE


286 
	#__USE_SVID
 1

	)

289 #ifdef 
_ATFILE_SOURCE


290 
	#__USE_ATFILE
 1

	)

293 #ifdef 
_GNU_SOURCE


294 
	#__USE_GNU
 1

	)

297 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


298 
	#__USE_REENTRANT
 1

	)

301 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

302 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

303 #i‡
_FORTIFY_SOURCE
 > 1

304 
	#__USE_FORTIFY_LEVEL
 2

	)

306 
	#__USE_FORTIFY_LEVEL
 1

	)

309 
	#__USE_FORTIFY_LEVEL
 0

	)

313 
	~<bôs/¥edefs.h
>

316 
	#__STDC_ISO_10646__
 200009L

	)

324 #unde‡
__GNU_LIBRARY__


325 
	#__GNU_LIBRARY__
 6

	)

329 
	#__GLIBC__
 2

	)

330 
	#__GLIBC_MINOR__
 11

	)

332 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

333 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

336 #i‡
deföed
 
__GNUC__
 \

337 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

338 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

339 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

340 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

344 #i‚de‡
__ASSEMBLER__


345 #i‚de‡
_SYS_CDEFS_H


346 
	~<sys/cdefs.h
>

351 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


352 
	#__USE_LARGEFILE
 1

	)

353 
	#__USE_LARGEFILE64
 1

	)

359 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

360 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

361 && 
deföed
 
	g__exã∫_ölöe


362 
	#__USE_EXTERN_INLINES
 1

	)

367 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

368 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

369 && 
deföed
 
	g__exã∫_ölöe


370 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

378 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
Ë
__THROW
;

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

151 
	#_IO_SKIPWS
 01

	)

152 
	#_IO_LEFT
 02

	)

153 
	#_IO_RIGHT
 04

	)

154 
	#_IO_INTERNAL
 010

	)

155 
	#_IO_DEC
 020

	)

156 
	#_IO_OCT
 040

	)

157 
	#_IO_HEX
 0100

	)

158 
	#_IO_SHOWBASE
 0200

	)

159 
	#_IO_SHOWPOINT
 0400

	)

160 
	#_IO_UPPERCASE
 01000

	)

161 
	#_IO_SHOWPOS
 02000

	)

162 
	#_IO_SCIENTIFIC
 04000

	)

163 
	#_IO_FIXED
 010000

	)

164 
	#_IO_UNITBUF
 020000

	)

165 
	#_IO_STDIO
 040000

	)

166 
	#_IO_DONT_CLOSE
 0100000

	)

167 
	#_IO_BOOLALPHA
 0200000

	)

170 
_IO_jump_t
; 
	g_IO_FILE
;

173 #ifde‡
_IO_MTSAFE_IO


174 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

175 
	~<bôs/°dio-lock.h
>

180 
	t_IO_lock_t
;

186 
	s_IO_m¨kî
 {

187 
_IO_m¨kî
 *
	m_√xt
;

188 
_IO_FILE
 *
	m_sbuf
;

192 
	m_pos
;

194 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

195 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

196 
	mpublic
:

197 
°ªamm¨kî
(
°ªambuf
 *
sb
);

198 ~
°ªamm¨kî
();

199 
ßvög
(Ë{  
	m_•os
 == -2; }

200 
dñè
(
°ªamm¨kî
&);

201 
dñè
();

206 
	e__codecvt_ªsu…


208 
	m__codecvt_ok
,

209 
	m__codecvt_∑πül
,

210 
	m__codecvt_îr‹
,

211 
	m__codecvt_noc⁄v


214 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


217 
	s_IO_codecvt


219 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

220 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

221 
	m__mb°©e_t
 *,

222 c⁄° 
	mwch¨_t
 *,

223 c⁄° 
	mwch¨_t
 *,

224 c⁄° 
	mwch¨_t
 **, *,

226 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

227 
	m__mb°©e_t
 *, *,

229 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

230 
	m__mb°©e_t
 *,

232 c⁄° **, 
	mwch¨_t
 *,

233 
	mwch¨_t
 *, wchar_t **);

234 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

235 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

236 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

237 c⁄° *, c⁄° *, 
	m_IO_size_t
);

238 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

240 
_IO_ic⁄v_t
 
	m__cd_ö
;

241 
_IO_ic⁄v_t
 
	m__cd_out
;

245 
	s_IO_wide_d©a


247 
wch¨_t
 *
	m_IO_ªad_±r
;

248 
wch¨_t
 *
	m_IO_ªad_íd
;

249 
wch¨_t
 *
	m_IO_ªad_ba£
;

250 
wch¨_t
 *
	m_IO_wrôe_ba£
;

251 
wch¨_t
 *
	m_IO_wrôe_±r
;

252 
wch¨_t
 *
	m_IO_wrôe_íd
;

253 
wch¨_t
 *
	m_IO_buf_ba£
;

254 
wch¨_t
 *
	m_IO_buf_íd
;

256 
wch¨_t
 *
	m_IO_ßve_ba£
;

257 
wch¨_t
 *
	m_IO_backup_ba£
;

259 
wch¨_t
 *
	m_IO_ßve_íd
;

261 
__mb°©e_t
 
	m_IO_°©e
;

262 
__mb°©e_t
 
	m_IO_œ°_°©e
;

263 
_IO_codecvt
 
	m_codecvt
;

265 
wch¨_t
 
	m_sh‹tbuf
[1];

267 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

271 
	s_IO_FILE
 {

272 
	m_Êags
;

273 
	#_IO_fûe_Êags
 
_Êags


	)

277 * 
	m_IO_ªad_±r
;

278 * 
	m_IO_ªad_íd
;

279 * 
	m_IO_ªad_ba£
;

280 * 
	m_IO_wrôe_ba£
;

281 * 
	m_IO_wrôe_±r
;

282 * 
	m_IO_wrôe_íd
;

283 * 
	m_IO_buf_ba£
;

284 * 
	m_IO_buf_íd
;

286 *
	m_IO_ßve_ba£
;

287 *
	m_IO_backup_ba£
;

288 *
	m_IO_ßve_íd
;

290 
_IO_m¨kî
 *
	m_m¨kîs
;

292 
_IO_FILE
 *
	m_chaö
;

294 
	m_fûío
;

296 
	m_blksize
;

298 
	m_Êags2
;

300 
_IO_off_t
 
	m_ﬁd_off£t
;

302 
	#__HAVE_COLUMN


	)

304 
	m_cur_cﬁumn
;

305 sig√d 
	m_vèbÀ_off£t
;

306 
	m_sh‹tbuf
[1];

310 
_IO_lock_t
 *
	m_lock
;

311 #ifde‡
_IO_USE_OLD_IO_FILE


314 
	s_IO_FILE_com∂ëe


316 
_IO_FILE
 
	m_fûe
;

318 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

319 
_IO_off64_t
 
	m_off£t
;

320 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


322 
_IO_codecvt
 *
	m_codecvt
;

323 
_IO_wide_d©a
 *
	m_wide_d©a
;

324 
_IO_FILE
 *
	m_‰ìªs_li°
;

325 *
	m_‰ìªs_buf
;

326 
size_t
 
	m_‰ìªs_size
;

328 *
	m__∑d1
;

329 *
	m__∑d2
;

330 *
	m__∑d3
;

331 *
	m__∑d4
;

332 
size_t
 
	m__∑d5
;

334 
	m_mode
;

336 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

340 #i‚de‡
__˝lu•lus


341 
_IO_FILE
 
	t_IO_FILE
;

344 
	g_IO_FILE_∂us
;

346 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

347 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

349 #i‚de‡
_LIBC


350 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

351 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

352 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

354 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

355 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

356 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

364 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

372 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

373 
	tsize_t
 
	t__n
);

381 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

384 
	t__io_˛o£_‚
 (*
	t__cookõ
);

387 #ifde‡
_GNU_SOURCE


389 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

390 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

391 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

392 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

397 
__io_ªad_‚
 *
	mªad
;

398 
__io_wrôe_‚
 *
	mwrôe
;

399 
__io_£ek_‚
 *
	m£ek
;

400 
__io_˛o£_‚
 *
	m˛o£
;

401 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

402 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

404 
	g_IO_cookõ_fûe
;

407 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

408 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

412 #ifde‡
__˝lu•lus


416 
__undîÊow
 (
_IO_FILE
 *);

417 
__uÊow
 (
_IO_FILE
 *);

418 
__ovîÊow
 (
_IO_FILE
 *, );

419 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


420 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

421 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

422 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

425 #i‡ 
__GNUC__
 >= 3

426 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

431 
	#_IO_gëc_u∆ocked
(
_Â
) \

432 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

433 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

434 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

435 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

436 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

437 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

438 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

439 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

440 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

441 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

443 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


444 
	#_IO_gëwc_u∆ocked
(
_Â
) \

445 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

446 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

447 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

448 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

449 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

450 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

451 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

452 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

453 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

454 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

457 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

458 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

460 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

461 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

462 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

463 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

468 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

469 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

471 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

472 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

473 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 #ifde‡
_IO_MTSAFE_IO


476 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

477 
	#_IO_Êockfûe
(
_Â
) \

478 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

479 
	#_IO_fu∆ockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

482 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

483 
	#_IO_Êockfûe
(
_Â
Ë

	)

484 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

485 
	#_IO_·rylockfûe
(
_Â
Ë

	)

486 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

487 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

490 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

491 
_IO_va_li°
, *
__ª°ri˘
);

492 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

493 
_IO_va_li°
);

494 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

495 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

497 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

498 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

500 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

502 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


503 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

504 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

505 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

506 #i‡
__GNUC__
 >= 2

509 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


510 
	~<shlib-com∑t.h
>

511 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

512 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

513 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

514 c⁄° 
_IO_°dö_u£d
;

515 
wók_exã∫
 (
_IO_°dö_u£d
);

518 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


519 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

523 
	#_IO_fwide
(
__Â
, 
__mode
) \

524 ({ 
__ªsu…
 = (
__mode
); \

525 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

527 i‡((
__Â
)->
_mode
 == 0) \

529 (
__Â
)->
_mode
 = -1; \

530 
__ªsu…
 = (
__Â
)->
_mode
; \

532 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

533 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

535 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

536 
__ªsu…
; })

	)

539 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

540 
_IO_va_li°
, *
__ª°ri˘
);

541 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

542 
_IO_va_li°
);

543 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

544 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

547 #ifde‡
__LDBL_COMPAT


548 
	~<bôs/libio-ldbl.h
>

551 #ifde‡
__˝lu•lus


	@/usr/include/linux/param.h

1 #i‚de‡
_LINUX_PARAM_H


2 
	#_LINUX_PARAM_H


	)

4 
	~<asm/∑øm.h
>

	@/usr/include/sys/resource.h

19 #i‚def 
_SYS_RESOURCE_H


20 
	#_SYS_RESOURCE_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ªsour˚.h
>

27 #i‚de‡
__id_t_deföed


28 
__id_t
 
	tid_t
;

29 
	#__id_t_deföed


	)

32 
	g__BEGIN_DECLS


38 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


39 
__æimô_ªsour˚
 
	t__æimô_ªsour˚_t
;

40 
__rußge_who
 
	t__rußge_who_t
;

41 
__¥i‹ôy_which
 
	t__¥i‹ôy_which_t
;

43 
	t__æimô_ªsour˚_t
;

44 
	t__rußge_who_t
;

45 
	t__¥i‹ôy_which_t
;

50 #i‚de‡
__USE_FILE_OFFSET64


51 
	$gëæimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

52 
æimô
 *
__æimôs
Ë
__THROW
;

54 #ifde‡
__REDIRECT_NTH


55 
	`__REDIRECT_NTH
 (
gëæimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

56 
æimô
 *
__æimôs
), 
gëæimô64
);

58 
	#gëæimô
 
gëæimô64


	)

61 #ifde‡
__USE_LARGEFILE64


62 
	$gëæimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

63 
æimô64
 *
__æimôs
Ë
__THROW
;

69 #i‚de‡
__USE_FILE_OFFSET64


70 
	$£ålimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

71 
__c⁄°
 
æimô
 *
__æimôs
Ë
__THROW
;

73 #ifde‡
__REDIRECT_NTH


74 
	`__REDIRECT_NTH
 (
£ålimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

75 
__c⁄°
 
æimô
 *
__æimôs
),

76 
£ålimô64
);

78 
	#£ålimô
 
£ålimô64


	)

81 #ifde‡
__USE_LARGEFILE64


82 
	$£ålimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

83 
__c⁄°
 
æimô64
 *
__æimôs
Ë
__THROW
;

88 
	$gërußge
 (
__rußge_who_t
 
__who
, 
rußge
 *
__ußge
Ë
__THROW
;

94 
	$gë¥i‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
Ë
__THROW
;

98 
	$£çri‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
, 
__¥io
)

99 
__THROW
;

101 
__END_DECLS


	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__exãnsi⁄__


31 
	$gnu_dev_maj‹
 (
__dev
)

32 
__THROW
;

33 
__exãnsi⁄__


34 
	$gnu_dev_mö‹
 (
__dev
)

35 
__THROW
;

36 
__exãnsi⁄__


37 
	$gnu_dev_makedev
 (
__maj‹
,

38 
__mö‹
)

39 
__THROW
;

41 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


42 
__exãnsi⁄__
 
__exã∫_ölöe
 

43 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

45  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

46 
	}
}

48 
__exãnsi⁄__
 
__exã∫_ölöe
 

49 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

51  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

52 
	}
}

54 
__exãnsi⁄__
 
__exã∫_ölöe
 

55 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

57  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

58 | (((Ë(
__mö‹
 & ~0xff)) << 12)

59 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

60 
	}
}

65 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

66 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

67 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

24 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/sigc⁄ãxt.h
>

30 #i‡
__WORDSIZE
 == 64

33 
	tgªg_t
;

36 
	#NGREG
 23

	)

39 
gªg_t
 
	tgªg£t_t
[
NGREG
];

41 #ifde‡
__USE_GNU


45 
	mREG_R8
 = 0,

46 
	#REG_R8
 
REG_R8


	)

47 
	mREG_R9
,

48 
	#REG_R9
 
REG_R9


	)

49 
	mREG_R10
,

50 
	#REG_R10
 
REG_R10


	)

51 
	mREG_R11
,

52 
	#REG_R11
 
REG_R11


	)

53 
	mREG_R12
,

54 
	#REG_R12
 
REG_R12


	)

55 
	mREG_R13
,

56 
	#REG_R13
 
REG_R13


	)

57 
	mREG_R14
,

58 
	#REG_R14
 
REG_R14


	)

59 
	mREG_R15
,

60 
	#REG_R15
 
REG_R15


	)

61 
	mREG_RDI
,

62 
	#REG_RDI
 
REG_RDI


	)

63 
	mREG_RSI
,

64 
	#REG_RSI
 
REG_RSI


	)

65 
	mREG_RBP
,

66 
	#REG_RBP
 
REG_RBP


	)

67 
	mREG_RBX
,

68 
	#REG_RBX
 
REG_RBX


	)

69 
	mREG_RDX
,

70 
	#REG_RDX
 
REG_RDX


	)

71 
	mREG_RAX
,

72 
	#REG_RAX
 
REG_RAX


	)

73 
	mREG_RCX
,

74 
	#REG_RCX
 
REG_RCX


	)

75 
	mREG_RSP
,

76 
	#REG_RSP
 
REG_RSP


	)

77 
	mREG_RIP
,

78 
	#REG_RIP
 
REG_RIP


	)

79 
	mREG_EFL
,

80 
	#REG_EFL
 
REG_EFL


	)

81 
	mREG_CSGSFS
,

82 
	#REG_CSGSFS
 
REG_CSGSFS


	)

83 
	mREG_ERR
,

84 
	#REG_ERR
 
REG_ERR


	)

85 
	mREG_TRAPNO
,

86 
	#REG_TRAPNO
 
REG_TRAPNO


	)

87 
	mREG_OLDMASK
,

88 
	#REG_OLDMASK
 
REG_OLDMASK


	)

89 
	mREG_CR2


90 
	#REG_CR2
 
REG_CR2


	)

94 
	s_libc_Âxªg


96 
	msignifiˇnd
[4];

97 
	mexp⁄ít
;

98 
	m∑ddög
[3];

101 
	s_libc_xmmªg


103 
__uöt32_t
 
	mñemít
[4];

106 
	s_libc_Â°©e


109 
__uöt16_t
 
	mcwd
;

110 
__uöt16_t
 
	mswd
;

111 
__uöt16_t
 
	m·w
;

112 
__uöt16_t
 
	mf›
;

113 
__uöt64_t
 
	mrù
;

114 
__uöt64_t
 
	mrdp
;

115 
__uöt32_t
 
	mmxc§
;

116 
__uöt32_t
 
	mmx¸_mask
;

117 
_libc_Âxªg
 
	m_°
[8];

118 
_libc_xmmªg
 
	m_xmm
[16];

119 
__uöt32_t
 
	m∑ddög
[24];

123 
_libc_Â°©e
 *
	tÂªg£t_t
;

128 
gªg£t_t
 
	mgªgs
;

130 
Âªg£t_t
 
	mÂªgs
;

131 
	m__ª£rved1
 [8];

132 } 
	tmc⁄ãxt_t
;

135 
	suc⁄ãxt


137 
	muc_Êags
;

138 
uc⁄ãxt
 *
	muc_lök
;

139 
°ack_t
 
	muc_°ack
;

140 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

141 
__sig£t_t
 
	muc_sigmask
;

142 
_libc_Â°©e
 
	m__Âªgs_mem
;

143 } 
	tuc⁄ãxt_t
;

148 
	tgªg_t
;

151 
	#NGREG
 19

	)

154 
gªg_t
 
	tgªg£t_t
[
NGREG
];

156 #ifde‡
__USE_GNU


160 
	mREG_GS
 = 0,

161 
	#REG_GS
 
REG_GS


	)

162 
	mREG_FS
,

163 
	#REG_FS
 
REG_FS


	)

164 
	mREG_ES
,

165 
	#REG_ES
 
REG_ES


	)

166 
	mREG_DS
,

167 
	#REG_DS
 
REG_DS


	)

168 
	mREG_EDI
,

169 
	#REG_EDI
 
REG_EDI


	)

170 
	mREG_ESI
,

171 
	#REG_ESI
 
REG_ESI


	)

172 
	mREG_EBP
,

173 
	#REG_EBP
 
REG_EBP


	)

174 
	mREG_ESP
,

175 
	#REG_ESP
 
REG_ESP


	)

176 
	mREG_EBX
,

177 
	#REG_EBX
 
REG_EBX


	)

178 
	mREG_EDX
,

179 
	#REG_EDX
 
REG_EDX


	)

180 
	mREG_ECX
,

181 
	#REG_ECX
 
REG_ECX


	)

182 
	mREG_EAX
,

183 
	#REG_EAX
 
REG_EAX


	)

184 
	mREG_TRAPNO
,

185 
	#REG_TRAPNO
 
REG_TRAPNO


	)

186 
	mREG_ERR
,

187 
	#REG_ERR
 
REG_ERR


	)

188 
	mREG_EIP
,

189 
	#REG_EIP
 
REG_EIP


	)

190 
	mREG_CS
,

191 
	#REG_CS
 
REG_CS


	)

192 
	mREG_EFL
,

193 
	#REG_EFL
 
REG_EFL


	)

194 
	mREG_UESP
,

195 
	#REG_UESP
 
REG_UESP


	)

196 
	mREG_SS


197 
	#REG_SS
 
REG_SS


	)

202 
	s_libc_Âªg


204 
	msignifiˇnd
[4];

205 
	mexp⁄ít
;

208 
	s_libc_Â°©e


210 
	mcw
;

211 
	msw
;

212 
	mèg
;

213 
	mùoff
;

214 
	mcs£l
;

215 
	md©aoff
;

216 
	md©a£l
;

217 
_libc_Âªg
 
	m_°
[8];

218 
	m°©us
;

222 
_libc_Â°©e
 *
	tÂªg£t_t
;

227 
gªg£t_t
 
	mgªgs
;

230 
Âªg£t_t
 
	mÂªgs
;

231 
	mﬁdmask
;

232 
	m¸2
;

233 } 
	tmc⁄ãxt_t
;

236 
	suc⁄ãxt


238 
	muc_Êags
;

239 
uc⁄ãxt
 *
	muc_lök
;

240 
°ack_t
 
	muc_°ack
;

241 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

242 
__sig£t_t
 
	muc_sigmask
;

243 
_libc_Â°©e
 
	m__Âªgs_mem
;

244 } 
	tuc⁄ãxt_t
;

	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/asm/param.h

1 
	~<asm-gíîic/∑øm.h
>

	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_16
 (__x); }))

	)

55 
	#__bsw≠_c⁄°™t_32
(
x
) \

56 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

57 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

59 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

60 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

61 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

62 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

63 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

64 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

65 || 
deföed
 
	g__amdÁm10__
)

68 
	#__bsw≠_32
(
x
) \

69 (
__exãnsi⁄__
 \

70 ({ 
__v
, 
__x
 = (
x
); \

71 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

72 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

74 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

75 
__v
; }))

	)

77 
	#__bsw≠_32
(
x
) \

78 (
__exãnsi⁄__
 \

79 ({ 
__v
, 
__x
 = (
x
); \

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

81 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

83 
	`__asm__
 ("rorw $8, %w0;" \

86 : "Ù" (
__v
) \

87 : "0" (
__x
) \

89 
__v
; }))

	)

92 
	#__bsw≠_32
(
x
) \

93 (
__exãnsi⁄__
 \

94 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

98 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

100 
	#__bsw≠_c⁄°™t_64
(
x
) \

101 ((((
x
) & 0xff00000000000000ull) >> 56) \

102 | (((
x
) & 0x00ff000000000000ull) >> 40) \

103 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

104 | (((
x
) & 0x000000ff00000000ull) >> 8) \

105 | (((
x
) & 0x00000000ff000000ull) << 8) \

106 | (((
x
) & 0x0000000000ff0000ull) << 24) \

107 | (((
x
) & 0x000000000000ff00ull) << 40) \

108 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

110 #i‡
__WORDSIZE
 == 64

111 
	#__bsw≠_64
(
x
) \

112 (
__exãnsi⁄__
 \

113 ({ 
__v
, 
__x
 = (
x
); \

114 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

115 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

117 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

118 
__v
; }))

	)

120 
	#__bsw≠_64
(
x
) \

121 (
__exãnsi⁄__
 \

122 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

123 
__l
[2]; } 
__w
, 
__r
; \

124 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

125 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

128 
__w
.
__Œ
 = (
x
); \

129 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

130 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

132 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/dirent.h

19 #i‚de‡
_DIRENT_H


23 
	sdúít


25 #i‚de‡
__USE_FILE_OFFSET64


26 
__öo_t
 
	md_öo
;

27 
__off_t
 
	md_off
;

29 
__öo64_t
 
	md_öo
;

30 
__off64_t
 
	md_off
;

32 
	md_ª˛í
;

33 
	md_ty≥
;

34 
	md_«me
[256];

37 #ifde‡
__USE_LARGEFILE64


38 
	sdúít64


40 
__öo64_t
 
	md_öo
;

41 
__off64_t
 
	md_off
;

42 
	md_ª˛í
;

43 
	md_ty≥
;

44 
	md_«me
[256];

48 
	#d_fûío
 
d_öo


	)

50 #unde‡
_DIRENT_HAVE_D_NAMLEN


51 
	#_DIRENT_HAVE_D_RECLEN


	)

52 
	#_DIRENT_HAVE_D_OFF


	)

53 
	#_DIRENT_HAVE_D_TYPE


	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

34 #i‚de‡
ARG_MAX


35 
	#__undef_ARG_MAX


	)

39 
	~<löux/limôs.h
>

42 #ifde‡
__undef_NR_OPEN


43 #unde‡
NR_OPEN


44 #unde‡
__undef_NR_OPEN


47 #ifde‡
__undef_LINK_MAX


48 #unde‡
LINK_MAX


49 #unde‡
__undef_LINK_MAX


52 #ifde‡
__undef_OPEN_MAX


53 #unde‡
OPEN_MAX


54 #unde‡
__undef_OPEN_MAX


57 #ifde‡
__undef_ARG_MAX


58 #unde‡
ARG_MAX


59 #unde‡
__undef_ARG_MAX


63 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

65 
	#PTHREAD_KEYS_MAX
 1024

	)

68 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

70 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

73 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

75 #unde‡
PTHREAD_THREADS_MAX


79 
	#AIO_PRIO_DELTA_MAX
 20

	)

82 
	#PTHREAD_STACK_MIN
 16384

	)

85 
	#DELAYTIMER_MAX
 2147483647

	)

88 
	#TTY_NAME_MAX
 32

	)

91 
	#LOGIN_NAME_MAX
 256

	)

94 
	#HOST_NAME_MAX
 64

	)

97 
	#MQ_PRIO_MAX
 32768

	)

100 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/predefs.h

19 #i‚de‡
_FEATURES_H


23 #i‚de‡
_PREDEFS_H


24 
	#_PREDEFS_H


	)

27 
	#__STDC_IEC_559__
 1

	)

28 
	#__STDC_IEC_559_COMPLEX__
 1

	)

	@/usr/include/bits/resource.h

21 #i‚de‡
_SYS_RESOURCE_H


25 
	~<bôs/ty≥s.h
>

33 
	e__æimô_ªsour˚


36 
	mRLIMIT_CPU
 = 0,

37 
	#RLIMIT_CPU
 
RLIMIT_CPU


	)

40 
	mRLIMIT_FSIZE
 = 1,

41 
	#RLIMIT_FSIZE
 
RLIMIT_FSIZE


	)

44 
	mRLIMIT_DATA
 = 2,

45 
	#RLIMIT_DATA
 
RLIMIT_DATA


	)

48 
	mRLIMIT_STACK
 = 3,

49 
	#RLIMIT_STACK
 
RLIMIT_STACK


	)

52 
	mRLIMIT_CORE
 = 4,

53 
	#RLIMIT_CORE
 
RLIMIT_CORE


	)

59 
	m__RLIMIT_RSS
 = 5,

60 
	#RLIMIT_RSS
 
__RLIMIT_RSS


	)

63 
	mRLIMIT_NOFILE
 = 7,

64 
	m__RLIMIT_OFILE
 = 
RLIMIT_NOFILE
,

65 
	#RLIMIT_NOFILE
 
RLIMIT_NOFILE


	)

66 
	#RLIMIT_OFILE
 
__RLIMIT_OFILE


	)

69 
	mRLIMIT_AS
 = 9,

70 
	#RLIMIT_AS
 
RLIMIT_AS


	)

73 
	m__RLIMIT_NPROC
 = 6,

74 
	#RLIMIT_NPROC
 
__RLIMIT_NPROC


	)

77 
	m__RLIMIT_MEMLOCK
 = 8,

78 
	#RLIMIT_MEMLOCK
 
__RLIMIT_MEMLOCK


	)

81 
	m__RLIMIT_LOCKS
 = 10,

82 
	#RLIMIT_LOCKS
 
__RLIMIT_LOCKS


	)

85 
	m__RLIMIT_SIGPENDING
 = 11,

86 
	#RLIMIT_SIGPENDING
 
__RLIMIT_SIGPENDING


	)

89 
	m__RLIMIT_MSGQUEUE
 = 12,

90 
	#RLIMIT_MSGQUEUE
 
__RLIMIT_MSGQUEUE


	)

95 
	m__RLIMIT_NICE
 = 13,

96 
	#RLIMIT_NICE
 
__RLIMIT_NICE


	)

100 
	m__RLIMIT_RTPRIO
 = 14,

101 
	#RLIMIT_RTPRIO
 
__RLIMIT_RTPRIO


	)

103 
	m__RLIMIT_NLIMITS
 = 15,

104 
	m__RLIM_NLIMITS
 = 
__RLIMIT_NLIMITS


105 
	#RLIMIT_NLIMITS
 
__RLIMIT_NLIMITS


	)

106 
	#RLIM_NLIMITS
 
__RLIM_NLIMITS


	)

110 #i‚de‡
__USE_FILE_OFFSET64


111 
	#RLIM_INFINITY
 (()(~0UL))

	)

113 
	#RLIM_INFINITY
 0xffffffffffffffffuLL

	)

116 #ifde‡
__USE_LARGEFILE64


117 
	#RLIM64_INFINITY
 0xffffffffffffffffuLL

	)

121 
	#RLIM_SAVED_MAX
 
RLIM_INFINITY


	)

122 
	#RLIM_SAVED_CUR
 
RLIM_INFINITY


	)

126 #i‚de‡
__USE_FILE_OFFSET64


127 
__æim_t
 
	tæim_t
;

129 
__æim64_t
 
	tæim_t
;

131 #ifde‡
__USE_LARGEFILE64


132 
__æim64_t
 
	tæim64_t
;

135 
	sæimô


138 
æim_t
 
	mæim_cur
;

140 
æim_t
 
	mæim_max
;

143 #ifde‡
__USE_LARGEFILE64


144 
	sæimô64


147 
æim64_t
 
	mæim_cur
;

149 
æim64_t
 
	mæim_max
;

154 
	e__rußge_who


157 
	mRUSAGE_SELF
 = 0,

158 
	#RUSAGE_SELF
 
RUSAGE_SELF


	)

161 
	mRUSAGE_CHILDREN
 = -1

162 
	#RUSAGE_CHILDREN
 
RUSAGE_CHILDREN


	)

164 #ifde‡
__USE_GNU


167 
	mRUSAGE_THREAD
 = 1

168 
	#RUSAGE_THREAD
 
RUSAGE_THREAD


	)

170 
	#RUSAGE_LWP
 
RUSAGE_THREAD


	)

174 
	#__√ed_timevÆ


	)

175 
	~<bôs/time.h
>

178 
	srußge


181 
timevÆ
 
	mru_utime
;

183 
timevÆ
 
	mru_°ime
;

185 
	mru_maxrss
;

188 
	mru_ixrss
;

190 
	mru_idrss
;

192 
	mru_i§ss
;

195 
	mru_möÊt
;

197 
	mru_majÊt
;

199 
	mru_nsw≠
;

202 
	mru_öblock
;

204 
	mru_oublock
;

206 
	mru_msg¢d
;

208 
	mru_msgrcv
;

210 
	mru_nsig«ls
;

214 
	mru_nvcsw
;

217 
	mru_nivcsw
;

221 
	#PRIO_MIN
 -20

	)

222 
	#PRIO_MAX
 20

	)

226 
	e__¥i‹ôy_which


228 
	mPRIO_PROCESS
 = 0,

229 
	#PRIO_PROCESS
 
PRIO_PROCESS


	)

230 
	mPRIO_PGRP
 = 1,

231 
	#PRIO_PGRP
 
PRIO_PGRP


	)

232 
	mPRIO_USER
 = 2

233 
	#PRIO_USER
 
PRIO_USER


	)

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


23 
	~<bôs/w‹dsize.h
>

26 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

28 #i‡
__WORDSIZE
 == 64

29 
	#__FD_ZERO_STOS
 "°osq"

	)

31 
	#__FD_ZERO_STOS
 "°o¶"

	)

34 
	#__FD_ZERO
(
fd•
) \

36 
__d0
, 
__d1
; \

37 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

38 : "=c" (
__d0
), "=D" (
__d1
) \

39 : "a" (0), "0" ( (
fd_£t
) \

40 /  (
__fd_mask
)), \

41 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

43 } 0)

	)

49 
	#__FD_ZERO
(
£t
) \

51 
__i
; \

52 
fd_£t
 *
__¨r
 = (
£t
); \

53 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

54 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

55 } 0)

	)

59 
	#__FD_SET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] |
	`__FDMASK
 (d))

	)

60 
	#__FD_CLR
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] &~
	`__FDMASK
 (d))

	)

61 
	#__FD_ISSET
(
d
, 
£t
) \

62 ((
	`__FDS_BITS
 (
£t
)[
	`__FDELT
 (
d
)] & 
	`__FDMASK
 (d)Ë!0)

	)

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

24 
	~<lowÀvñlock.h
>

28 
	#_IO_lock_öex≥nsive
 1

	)

30 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

32 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

34 
	#_IO_lock_öô
(
_«me
) \

35 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

37 
	#_IO_lock_föi
(
_«me
) \

38 ((Ë0)

	)

40 
	#_IO_lock_lock
(
_«me
) \

42 *
__£lf
 = 
THREAD_SELF
; \

43 i‡((
_«me
).
ow√r
 !
__£lf
) \

45 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

46 (
_«me
).
ow√r
 = 
__£lf
; \

48 ++(
_«me
).
˙t
; \

49 } 0)

	)

51 
	#_IO_lock_åylock
(
_«me
) \

53 
__ªsu…
 = 0; \

54 *
__£lf
 = 
THREAD_SELF
; \

55 i‡((
_«me
).
ow√r
 !
__£lf
) \

57 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

59 (
_«me
).
ow√r
 = 
__£lf
; \

60 (
_«me
).
˙t
 = 1; \

63 
__ªsu…
 = 
EBUSY
; \

66 ++(
_«me
).
˙t
; \

67 
__ªsu…
; \

68 })

	)

70 
	#_IO_lock_u∆ock
(
_«me
) \

72 i‡(--(
_«me
).
˙t
 == 0) \

74 (
_«me
).
ow√r
 = 
NULL
; \

75 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

77 } 0)

	)

81 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

82 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

83 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

84 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

85 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

86 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

88 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


90 #ifde‡
__EXCEPTIONS


91 
	#_IO_acquúe_lock
(
_Â
) \

93 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

94 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

95 (
_Â
); \

96 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

97 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

99 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

100 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

101 (
_Â
); \

102 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

104 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

105 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

107 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio.h

19 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_UIO_H


24 
	#_BITS_UIO_H
 1

	)

26 
	~<sys/ty≥s.h
>

40 
	#UIO_MAXIOV
 1024

	)

44 
	siovec


46 *
	miov_ba£
;

47 
size_t
 
	miov_Àn
;

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3)

136 
	#__w¨nde˛
(
«me
, 
msg
) \

137 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

138 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

139 
	#__îr‹de˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

142 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

143 
	#__w¨«âr
(
msg
)

	)

144 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

148 #i‡
__GNUC_PREREQ
 (2,97)

150 
	#__Êex¨r
 []

	)

152 #ifde‡
__GNUC__


153 
	#__Êex¨r
 [0]

	)

155 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

156 
	#__Êex¨r
 []

	)

159 
	#__Êex¨r
 [1]

	)

175 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

177 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 #ifde‡
__˝lu•lus


179 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

180 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

185 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

186 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

199 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

200 
	#__©åibuã__
(
xyz
Ë

	)

206 #i‡
__GNUC_PREREQ
 (2,96)

207 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

209 
	#__©åibuã_mÆloc__


	)

215 #i‡
__GNUC_PREREQ
 (2,96)

216 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

218 
	#__©åibuã_puª__


	)

224 #i‡
__GNUC_PREREQ
 (3,1)

225 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

226 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

229 
	#__©åibuã_noölöe__


	)

233 #i‡
__GNUC_PREREQ
 (3,2)

234 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

236 
	#__©åibuã_dïªˇãd__


	)

245 #i‡
__GNUC_PREREQ
 (2,8)

246 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

248 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

255 #i‡
__GNUC_PREREQ
 (2,97)

256 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

257 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

264 #i‡
__GNUC_PREREQ
 (3,3)

265 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

267 
	#__n⁄nuŒ
(
∑øms
)

	)

272 #i‡
__GNUC_PREREQ
 (3,4)

273 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

274 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

275 #i‡
__USE_FORTIFY_LEVEL
 > 0

276 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

279 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

281 #i‚de‡
__wur


282 
	#__wur


	)

286 #i‡
__GNUC_PREREQ
 (3,2)

287 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

289 
	#__Æways_ölöe
 
__ölöe


	)

294 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3)

295 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


296 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

297 #i‡
__GNUC_PREREQ
 (4,3)

298 
	#__exã∫_Æways_ölöe
 \

299 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

301 
	#__exã∫_Æways_ölöe
 \

302 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

305 
	#__exã∫_ölöe
 
__ölöe


	)

306 #i‡
__GNUC_PREREQ
 (4,3)

307 
	#__exã∫_Æways_ölöe
 \

308 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

310 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

317 #i‡
__GNUC_PREREQ
 (4,3)

318 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

319 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

326 #i‡!
__GNUC_PREREQ
 (2,8)

327 
	#__exãnsi⁄__


	)

331 #i‡!
__GNUC_PREREQ
 (2,92)

332 
	#__ª°ri˘


	)

338 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


339 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

341 #ifde‡
__GNUC__


342 
	#__ª°ri˘_¨r


	)

344 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

345 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

348 
	#__ª°ri˘_¨r


	)

353 
	~<bôs/w‹dsize.h
>

355 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


356 
	#__LDBL_COMPAT
 1

	)

357 #ifde‡
__REDIRECT


358 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

359 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

360 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

361 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

362 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

363 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

364 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

365 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

366 
	#__LDBL_REDIR_DECL
(
«me
) \

367 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

368 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

369 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

370 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

371 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

374 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


375 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

376 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

377 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

378 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

379 
	#__LDBL_REDIR_DECL
(
«me
)

	)

380 #ifde‡
__REDIRECT


381 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

382 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

383 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/asm-generic/param.h

1 #i‚de‡
__ASM_GENERIC_PARAM_H


2 
	#__ASM_GENERIC_PARAM_H


	)

5 #i‚de‡
HZ


6 
	#HZ
 100

	)

9 #i‚de‡
EXEC_PAGESIZE


10 
	#EXEC_PAGESIZE
 4096

	)

13 #i‚de‡
NOGROUP


14 
	#NOGROUP
 (-1)

	)

17 
	#MAXHOSTNAMELEN
 64

	)

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/bits/libc-lock.h

20 #i‚de‡
_BITS_LIBC_LOCK_H


21 
	#_BITS_LIBC_LOCK_H
 1

	)

23 
	~<±hªad.h
>

24 
	#__√ed_NULL


	)

25 
	~<°ddef.h
>

34 #ifde‡
_LIBC


35 
	~<lowÀvñlock.h
>

36 
	~<és.h
>

37 
	~<±hªad-fun˘i⁄s.h
>

38 
	~<î∫o.h
>

39 
	~<gnu/›ti⁄-groups.h
>

43 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


44 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


45 
±hªad_muãx_t
 
	t__libc_lock_t
;

46 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

48 
	t__libc_lock_t
;

49 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

51 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__πld_lock_ªcursive_t
;

52 #ifde‡
__USE_UNIX98


53 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

55 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

58 
__libc_lock_›aque__
 
	t__libc_lock_t
;

59 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

60 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

64 
±hªad_key_t
 
	t__libc_key_t
;

73 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

74 
CLASS
 
__libc_lock_t
 
NAME
;

	)

75 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

76 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

77 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

78 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

79 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

80 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

91 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

92 #i‡
LLL_LOCK_INITIALIZER
 == 0

93 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

94 
CLASS
 
__libc_lock_t
 
NAME
;

	)

96 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

97 
CLASS
 
__libc_lock_t
 
NAME
 = 
LLL_LOCK_INITIALIZER
;

	)

100 #i‡
__LT_SPINLOCK_INIT
 == 0

101 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

102 
CLASS
 
__libc_lock_t
 
NAME
;

	)

104 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

105 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

109 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

110 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

114 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

115 #i‡
LLL_LOCK_INITIALIZER
 == 0

116 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

117 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

119 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

120 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

122 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

123 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

125 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

126 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

127 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

128 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

131 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

132 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

133 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

134 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

136 
	#__πld_lock_öôülize
(
NAME
) \

137 (Ë((
NAME
Ë(
__πld_lock_ªcursive_t
Ë
_RTLD_LOCK_RECURSIVE_INITIALIZER
)

	)

144 #ifde‡
__PIC__


145 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

146 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

147 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

149 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

150 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

154 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


155 
	#PTFAVAIL
(
NAME
Ë
__libc_±hªad_fun˘i⁄s_öô


	)

156 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

157 (
__libc_±hªad_fun˘i⁄s_öô
 ? 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
Ë: 
ELSE
)

	)

158 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

159 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
)

	)

161 
	#PTFAVAIL
(
NAME
Ë(NAME !
NULL
)

	)

162 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

163 
	`__libc_maybe_ˇŒ
 (
FUNC
, 
ARGS
, 
ELSE
)

	)

164 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

165 
FUNC
 
ARGS


	)

171 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

172 
	#__libc_lock_öô
(
NAME
Ë((NAMEË
LLL_LOCK_INITIALIZER
, 0)

	)

174 
	#__libc_lock_öô
(
NAME
) \

175 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0)

	)

177 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


180 
	#__libc_rwlock_öô
(
NAME
) \

181 (
	`__buûtö_mem£t
 (&(
NAME
), '\0',  (NAME)), 0)

	)

183 
	#__libc_rwlock_öô
(
NAME
) \

184 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0)

	)

188 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

189 
	#__libc_lock_öô_ªcursive
(
NAME
) \

190 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

192 
	#__libc_lock_öô_ªcursive
(
NAME
) \

194 i‡(
__±hªad_muãx_öô
 !
NULL
) \

196 
±hªad_muãx©å_t
 
__©å
; \

197 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

198 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

199 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

200 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

202 } 0)

	)

205 
	#__πld_lock_öô_ªcursive
(
NAME
) \

207 i‡(
__±hªad_muãx_öô
 !
NULL
) \

209 
±hªad_muãx©å_t
 
__©å
; \

210 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

211 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

212 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

213 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

215 } 0)

	)

220 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

221 
	#__libc_lock_föi
(
NAME
Ë((Ë0)

	)

223 
	#__libc_lock_föi
(
NAME
) \

224 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

226 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


227 
	#__libc_rwlock_föi
(
NAME
Ë((Ë0)

	)

229 
	#__libc_rwlock_föi
(
NAME
) \

230 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0)

	)

234 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

235 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

237 
	#__libc_lock_föi_ªcursive
(
NAME
) \

238 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

242 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

243 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

247 
__libc_lock_lock_‚
 (
__libc_lock_t
 *);

248 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_‚
);

250 #i‡
__OPTION_EGLIBC_BIG_MACROS


251 
	#__libc_lock_lock
(
NAME
) \

252 ({ 
	`Œl_lock
 (
NAME
, 
LLL_PRIVATE
); 0; })

	)

254 
	#__libc_lock_lock
(
NAME
) \

255 
	`__libc_lock_lock_‚
 (&(
NAME
))

	)

258 
	#__libc_lock_lock
(
NAME
) \

259 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
)), 0)

	)

261 
	#__libc_rwlock_rdlock
(
NAME
) \

262 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0)

	)

263 
	#__libc_rwlock_wæock
(
NAME
) \

264 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0)

	)

267 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

268 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

272 
__libc_lock_lock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

273 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_ªcursive_‚
);

275 #i‡
__OPTION_EGLIBC_BIG_MACROS


276 
	#__libc_lock_lock_ªcursive
(
NAME
) \

278 *
£lf
 = 
THREAD_SELF
; \

279 i‡((
NAME
).
ow√r
 !
£lf
) \

281 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

282 (
NAME
).
ow√r
 = 
£lf
; \

284 ++(
NAME
).
˙t
; \

285 } 0)

	)

287 
	#__libc_lock_lock_ªcursive
(
NAME
) \

288 
	`__libc_lock_lock_ªcursive_‚
 (&(
NAME
))

	)

291 
	#__libc_lock_lock_ªcursive
(
NAME
) \

292 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

296 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

297 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

301 
__libc_lock_åylock_‚
 (
__libc_lock_t
 *);

302 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_‚
);

304 #i‡
__OPTION_EGLIBC_BIG_MACROS


305 
	#__libc_lock_åylock
(
NAME
) \

306 
	`Œl_åylock
 (
NAME
)

	)

308 
	#__libc_lock_åylock
(
NAME
) \

309 
	`__libc_lock_åylock_‚
 (&(
NAME
))

	)

312 
	#__libc_lock_åylock
(
NAME
) \

313 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

315 
	#__libc_rwlock_åyrdlock
(
NAME
) \

316 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0)

	)

317 
	#__libc_rwlock_åywæock
(
NAME
) \

318 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0)

	)

321 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

322 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

326 
__libc_lock_åylock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

327 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_ªcursive_‚
);

329 #i‡
__OPTION_EGLIBC_BIG_MACROS


330 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

332 
ªsu…
 = 0; \

333 *
£lf
 = 
THREAD_SELF
; \

334 i‡((
NAME
).
ow√r
 !
£lf
) \

336 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

338 (
NAME
).
ow√r
 = 
£lf
; \

339 (
NAME
).
˙t
 = 1; \

342 
ªsu…
 = 
EBUSY
; \

345 ++(
NAME
).
˙t
; \

346 
ªsu…
; \

347 })

	)

349 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

350 
	`__libc_lock_åylock_ªcursive_‚
 (&(
NAME
))

	)

353 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

354 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

357 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

358 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

361 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

362 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

366 
__libc_lock_u∆ock_‚
 (
__libc_lock_t
 *);

367 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_‚
);

369 #i‡
__OPTION_EGLIBC_BIG_MACROS


370 
	#__libc_lock_u∆ock
(
NAME
) \

371 
	`Œl_u∆ock
 (
NAME
, 
LLL_PRIVATE
)

	)

373 
	#__libc_lock_u∆ock
(
NAME
) \

374 
	`__libc_lock_u∆ock_‚
 (&(
NAME
))

	)

377 
	#__libc_lock_u∆ock
(
NAME
) \

378 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

380 
	#__libc_rwlock_u∆ock
(
NAME
) \

381 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0)

	)

384 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

385 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

389 
__libc_lock_u∆ock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

390 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_ªcursive_‚
);

392 #i‡
__OPTION_EGLIBC_BIG_MACROS


394 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

396 i‡(--(
NAME
).
˙t
 == 0) \

398 (
NAME
).
ow√r
 = 
NULL
; \

399 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

401 } 0)

	)

403 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

404 
	`__libc_lock_u∆ock_ªcursive_‚
 (&(
NAME
))

	)

407 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

408 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

411 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


412 
	#__πld_lock_deÁu…_lock_ªcursive
(
lock
) \

413 ++((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

415 
	#__πld_lock_deÁu…_u∆ock_ªcursive
(
lock
) \

416 --((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

418 
	#__πld_lock_lock_ªcursive
(
NAME
) \

419 
	`GL
(
dl_πld_lock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

421 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

422 
	`GL
(
dl_πld_u∆ock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

424 
	#__πld_lock_lock_ªcursive
(
NAME
) \

425 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

427 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

428 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

432 #i‡
PTHREAD_ONCE_INIT
 == 0

435 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

436 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

438 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

439 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

443 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

445 i‡(
	`PTFAVAIL
 (
__±hªad_⁄˚
)) \

446 
	`__libc_±f_ˇŒ_Æways
 (
__±hªad_⁄˚
, (&(
ONCE_CONTROL
), \

447 
INIT_FUNCTION
)); \

448 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

449 
	`INIT_FUNCTION
 (); \

450 (
ONCE_CONTROL
) |= 2; \

452 } 0)

	)

459 
_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

460 (*
routöe
Ë(*), *
¨g
);

461 
	`_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

462 
execuã
);

463 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

464 (*
routöe
Ë(*), *
¨g
);

465 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

466 
execuã
);

469 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

470 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

471 
_avaû
; \

472 i‡(
DOIT
) { \

473 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

474 i‡(
_avaû
) { \

475 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

476 
ARG
)); \

478 
_buf„r
.
__routöe
 = (
FCT
); \

479 
_buf„r
.
__¨g
 = (
ARG
); \

482 
_avaû
 = 0; \

483 }

	)

486 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

487 i‡(
_avaû
) { \

488 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

489 } i‡(
DOIT
) \

490 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

491 
	}

	)
}

494 
	#__libc_˛ónup_íd
(
DOIT
) \

495 i‡(
_avaû
) { \

496 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

497 } i‡(
DOIT
) \

498 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
)

	)

502 
__exã∫_ölöe
 

503 
	$__libc_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
f
)

505 i‡(
f
->
__do_ô
)

506 
f
->
	`__ˇn˚l_routöe
 (f->
__ˇn˚l_¨g
);

507 
	}
}

509 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

511 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

512 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__libc_˛ónup_routöe
))) \

513 { .
__ˇn˚l_routöe
 = (
f˘
), .
__ˇn˚l_¨g
 = (
¨g
), \

514 .
__do_ô
 = 1 };

	)

516 
	#__libc_˛ónup_p›
(
execuã
) \

517 
__˛‰ame
.
__do_ô
 = (
execuã
); \

518 } 0)

	)

522 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

523 
	`__libc_±f_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1)

	)

526 
	#__libc_gë•ecific
(
KEY
) \

527 
	`__libc_±f_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
)

	)

530 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

531 
	`__libc_±f_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0)

	)

537 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

538 
	`__ªgi°î_©f‹k
 (
PREPARE
, 
PARENT
, 
CHILD
, 
NULL
)

	)

539 
__ªgi°î_©f‹k
 ((*
__¥ï¨e
) (),

540 (*
__∑ª¡
) (),

541 (*
__chûd
) (),

542 *
__dso_h™dÀ
);

547 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

548 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

550 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

552 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

554 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

556 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

558 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

560 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

562 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

563 
__köd
);

565 #ifde‡
__USE_UNIX98


566 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

567 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

569 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

571 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

573 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

575 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

577 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

579 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

582 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

583 (*
__de°r_fun˘i⁄
) (*));

585 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

586 
__c⁄°
 *
__poöãr
);

588 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

590 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

591 (*
__öô_routöe
) ());

593 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

594 (*
__∑ª¡
) (),

595 (*
__chûd
) ());

601 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


602 #ifde‡
wók_exã∫


603 #i‡
_LIBC


604 
	~<bp-sym.h
>

606 
	#BP_SYM
(
sym
Ë
	)
sym

608 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

609 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

610 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

611 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

612 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

613 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

614 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

615 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

616 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

617 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

618 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

619 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

620 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

621 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

622 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

623 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

624 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

625 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

626 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

627 
	$wók_exã∫
 (
__±hªad_öôülize
)

628 
	$wók_exã∫
 (
__±hªad_©f‹k
)

629 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

630 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

631 
	`wók_exã∫
 (
	$BP_SYM
 (
±hªad_£tˇn˚l°©e
))

633 #¥agm®
wók
 
__±hªad_muãx_öô


634 #¥agm®
wók
 
__±hªad_muãx_de°roy


635 #¥agm®
wók
 
__±hªad_muãx_lock


636 #¥agm®
wók
 
__±hªad_muãx_åylock


637 #¥agm®
wók
 
__±hªad_muãx_u∆ock


638 #¥agm®
wók
 
__±hªad_muãx©å_öô


639 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


640 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


641 #¥agm®
wók
 
__±hªad_rwlock_de°roy


642 #¥agm®
wók
 
__±hªad_rwlock_rdlock


643 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


644 #¥agm®
wók
 
__±hªad_rwlock_wæock


645 #¥agm®
wók
 
__±hªad_rwlock_åywæock


646 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


647 #¥agm®
wók
 
__±hªad_key_¸óã


648 #¥agm®
wók
 
__±hªad_£t•ecific


649 #¥agm®
wók
 
__±hªad_gë•ecific


650 #¥agm®
wók
 
__±hªad_⁄˚


651 #¥agm®
wók
 
__±hªad_öôülize


652 #¥agm®
wók
 
__±hªad_©f‹k


653 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


654 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


655 #¥agm®
wók
 
±hªad_£tˇn˚l°©e


	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

72 
	t__c⁄°
 **, __const *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

86 
	t__c⁄°
 *,

87 
	t__c⁄°
 **,

88 
	t__c⁄°
 *, **,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

93 
	t__c⁄°
 *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 
__c⁄°
 *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

55 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

56 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

61 #i‚de‡
_WINT_T


66 
	#_WINT_T


	)

67 
	twöt_t
;

71 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

72 && 
deföed
 
__WINT_TYPE__


73 
__BEGIN_NAMESPACE_STD


74 
__WINT_TYPE__
 
	twöt_t
;

75 
	g__END_NAMESPACE_STD


80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

323 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

327 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

328 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

332 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

333 
__THROW
;

336 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

337 
__END_NAMESPACE_STD


339 #ifde‡
__USE_GNU


342 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

343 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

344 
__THROW
;

348 
__BEGIN_NAMESPACE_STD


351 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

355 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

359 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

363 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

364 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

365 
mb°©e_t
 *
__p
Ë
__THROW
;

368 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

369 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

372 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

373 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
__END_NAMESPACE_STD


378 #ifde‡
__USE_EXTERN_INLINES


384 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

385 
__exã∫_ölöe
 
wöt_t


386 
	`__NTH
 (
	$btowc
 (
__c
))

387 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

388 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

390 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

391 
__exã∫_ölöe
 

392 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

393 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

394 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

396 
__exã∫_ölöe
 
size_t


397 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

398 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

399 {  (
__ps
 !
NULL


400 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

403 
__BEGIN_NAMESPACE_STD


406 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

407 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

408 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

412 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

413 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

414 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

415 
__END_NAMESPACE_STD


418 #ifdef 
__USE_XOPEN2K8


421 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

422 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

423 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

427 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

428 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

429 
size_t
 
__nwc
, size_à
__Àn
,

430 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

435 #ifde‡
__USE_XOPEN


437 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

441 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

445 
__BEGIN_NAMESPACE_STD


448 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

449 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

450 
__END_NAMESPACE_STD


452 #ifde‡
__USE_ISOC99


453 
__BEGIN_NAMESPACE_C99


455 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

456 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

457 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
__END_NAMESPACE_C99


463 
__BEGIN_NAMESPACE_STD


466 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

467 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

471 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

473 
__THROW
;

474 
__END_NAMESPACE_STD


476 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

477 
__BEGIN_NAMESPACE_C99


480 
__exãnsi⁄__


481 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

483 
__THROW
;

487 
__exãnsi⁄__


488 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

489 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

490 
__ba£
Ë
__THROW
;

491 
__END_NAMESPACE_C99


494 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


497 
__exãnsi⁄__


498 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

499 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

500 
__THROW
;

504 
__exãnsi⁄__


505 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

506 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

507 
__ba£
Ë
__THROW
;

510 #ifde‡
__USE_GNU


524 
	~<xloˇÀ.h
>

528 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

529 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

530 
__loˇÀ_t
 
__loc
Ë
__THROW
;

532 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

533 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

534 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

536 
__exãnsi⁄__


537 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
)

545 
__THROW
;

547 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
;

551 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

552 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
;

555 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

556 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

557 
__loˇÀ_t
 
__loc
Ë
__THROW
;

561 #ifdef 
__USE_XOPEN2K8


564 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
)

569 
__THROW
;

575 #ifdef 
__USE_XOPEN2K8


578 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

581 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


582 
__BEGIN_NAMESPACE_STD


585 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

592 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

593 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

599 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

602 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

603 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
__THROW
 ;

610 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

611 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

612 
__gnuc_va_li°
 
__¨g
)

618 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

619 
__gnuc_va_li°
 
__¨g
)

623 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

624 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

625 
__gnuc_va_li°
 
__¨g
)

626 
__THROW
 ;

633 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

634 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

640 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

643 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

644 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
__THROW
 ;

647 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

648 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

649 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

650 #ifde‡
__REDIRECT


654 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

655 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

656 
__isoc99_fwsˇnf
)

658 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

659 
__isoc99_wsˇnf
)

661 
	`__REDIRECT
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

662 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

663 
__isoc99_swsˇnf
)

664 
__THROW
 ;

666 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

667 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

669 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

670 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

671 
__THROW
;

672 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

673 
	#wsˇnf
 
__isoc99_wsˇnf


	)

674 
	#swsˇnf
 
__isoc99_swsˇnf


	)

678 
__END_NAMESPACE_STD


681 #ifde‡
__USE_ISOC99


682 
__BEGIN_NAMESPACE_C99


687 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

688 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

689 
__gnuc_va_li°
 
__¨g
)

695 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

696 
__gnuc_va_li°
 
__¨g
)

699 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

700 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

702 
__THROW
 ;

704 #i‡!
deföed
 
__USE_GNU
 \

705 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

706 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

707 #ifde‡
__REDIRECT


708 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

709 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

710 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

712 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

713 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

715 
	`__REDIRECT
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

716 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

717 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

718 
__THROW
 ;

720 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

721 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
);

723 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

726 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

728 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

729 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

730 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

734 
__END_NAMESPACE_C99


738 
__BEGIN_NAMESPACE_STD


743 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

744 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

750 
wöt_t
 
	`gëwch¨
 ();

757 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

758 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

764 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

772 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

773 
__FILE
 *
__ª°ri˘
 
__°ªam
);

779 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

780 
__FILE
 *
__ª°ri˘
 
__°ªam
);

787 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

788 
__END_NAMESPACE_STD


791 #ifde‡
__USE_GNU


799 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

800 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

808 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

816 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

826 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

835 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

836 
__FILE
 *
__ª°ri˘
 
__°ªam
);

844 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

845 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
__BEGIN_NAMESPACE_C99


853 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

854 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

855 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

856 
__END_NAMESPACE_C99


858 #ifde‡
__USE_GNU


859 
	~<xloˇÀ.h
>

863 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

864 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

865 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

866 
__loˇÀ_t
 
__loc
Ë
__THROW
;

875 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


876 
	#__√ed_iswxxx


	)

877 
	~<w˘y≥.h
>

881 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


882 
	~<bôs/wch¨2.h
>

885 #ifde‡
__LDBL_COMPAT


886 
	~<bôs/wch¨-ldbl.h
>

889 
__END_DECLS


897 #unde‡
__√ed_mb°©e_t


898 #unde‡
__√ed_wöt_t


	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

64 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

65 
size_t
 
__ns1
), 
__wmemmove_chk
)

66 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

69 
__exã∫_Æways_ölöe
 
wch¨_t
 *

70 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

71 
size_t
 
__n
))

73 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

75 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

76  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

77 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

79 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

80  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

81 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

83  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

84 
	}
}

87 #ifde‡
__USE_GNU


88 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

89 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

90 
size_t
 
__ns1
Ë
__THROW
;

91 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

92 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

93 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

94 
size_t
 
__n
), 
wmemp˝y
);

95 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

96 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

97 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

98 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

99 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

102 
__exã∫_Æways_ölöe
 
wch¨_t
 *

103 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

104 
size_t
 
__n
))

106 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

108 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

109  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

110 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

112 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

113  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

114 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

116  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

117 
	}
}

121 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

122 
size_t
 
__ns
Ë
__THROW
;

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

124 
size_t
 
__n
), 
wmem£t
);

125 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

126 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

127 
size_t
 
__ns
), 
__wmem£t_chk
)

128 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

131 
__exã∫_Æways_ölöe
 
wch¨_t
 *

132 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__ª°ri˘
 
__s
, wch¨_à
__c
, 
size_t
 
__n
))

134 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

136 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

137  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

139 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

140  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

141 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

143  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

144 
	}
}

147 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

149 
size_t
 
__n
Ë
__THROW
;

150 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

151 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

152 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

154 
__exã∫_Æways_ölöe
 
wch¨_t
 *

155 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

157 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

158  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

159  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

160 
	}
}

163 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
,

164 
size_t
 
__de°Àn
Ë
__THROW
;

165 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
, (wch¨_à*
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__§c
),

167 
w˝˝y
);

169 
__exã∫_Æways_ölöe
 
wch¨_t
 *

170 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

172 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

173  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

174  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

175 
	}
}

178 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

179 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

180 
size_t
 
__de°Àn
Ë
__THROW
;

181 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

182 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

183 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

184 
size_t
 
__n
), 
wc¢˝y
);

185 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

186 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

187 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

188 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

189 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

192 
__exã∫_Æways_ölöe
 
wch¨_t
 *

193 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__exã∫_Æways_ölöe
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__exã∫_Æways_ölöe
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

265 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

266  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

267 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

268  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

269 
	}
}

272 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

273 
__Êag
, 
size_t
 
__s_Àn
,

274 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

275 
__THROW
 ;

277 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

278 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

279 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

280 
sw¥ötf
);

282 #ifde‡
__va_¨g_∑ck


283 
__exã∫_Æways_ölöe
 

284 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

285 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

287 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

288  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

289 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

290 
__fmt
, 
	`__va_¨g_∑ck
 ());

291  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

292 
	}
}

293 #ñi‡!
deföed
 
__˝lu•lus


295 
	#sw¥ötf
(
s
, 
n
, ...) \

296 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

297 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

298 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

299 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

302 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

303 
__Êag
, 
size_t
 
__s_Àn
,

304 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

305 
__gnuc_va_li°
 
__¨g
)

306 
__THROW
 ;

308 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

309 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

310 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

311 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

313 
__exã∫_Æways_ölöe
 

314 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

315 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

317 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

318  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

319 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

320  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

321 
	}
}

324 #i‡
__USE_FORTIFY_LEVEL
 > 1

326 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

328 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

330 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

331 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__gnuc_va_li°
 
__≠
);

333 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

336 #ifde‡
__va_¨g_∑ck


337 
__exã∫_Æways_ölöe
 

338 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

340  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

341 
	}
}

343 
__exã∫_Æways_ölöe
 

344 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

346  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

347 
	`__va_¨g_∑ck
 ());

348 
	}
}

349 #ñi‡!
deföed
 
__˝lu•lus


350 
	#w¥ötf
(...) \

351 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

352 
	#fw¥ötf
(
°ªam
, ...) \

353 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

356 
__exã∫_Æways_ölöe
 

357 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

359  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

360 
	}
}

362 
__exã∫_Æways_ölöe
 

363 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

364 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

366  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

367 
	}
}

371 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

372 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

373 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

374 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

375 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

376 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

377 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

378 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

379 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

382 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

383 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

385 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

387 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

388  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

389 
__n
, 
__°ªam
);

391 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

392  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

393 
__n
, 
__°ªam
);

395  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

396 
	}
}

398 #ifde‡
__USE_GNU


399 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

400 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

401 
__wur
;

402 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

403 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

404 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

405 
__wur
;

406 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

407 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

408 
__FILE
 *
__ª°ri˘
 
__°ªam
),

409 
__fgëws_u∆ocked_chk
)

410 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

413 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

414 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

416 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

418 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

419  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

420 
__n
, 
__°ªam
);

422 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

423  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

424 
__n
, 
__°ªam
);

426  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

427 
	}
}

431 
size_t
 
	$__w¸tomb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__p
,

432 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

433 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

434 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

437 
__exã∫_Æways_ölöe
 
__wur
 
size_t


438 
	`__NTH
 (
	$w¸tomb
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__ps
))

443 
	#__WCHAR_MB_LEN_MAX
 16

	)

444 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


447 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

448  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

449  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

450 
	}
}

453 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

454 
__c⁄°
 **
__ª°ri˘
 
__§c
,

455 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

456 
size_t
 
__d°Àn
Ë
__THROW
;

457 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

458 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

459 
__c⁄°
 **
__ª°ri˘
 
__§c
,

460 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

461 
mb§towcs
);

462 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

463 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

464 
__c⁄°
 **
__ª°ri˘
 
__§c
,

465 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

466 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

467 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

470 
__exã∫_Æways_ölöe
 
size_t


471 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

472 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

474 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

476 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

477  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

478 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

480 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

481  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

485 
	}
}

488 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

489 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

490 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

491 
size_t
 
__d°Àn
Ë
__THROW
;

492 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

493 (*
__ª°ri˘
 
__d°
,

494 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

495 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

496 
wc§tombs
);

497 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

498 (*
__ª°ri˘
 
__d°
,

499 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

500 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

501 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

502 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

504 
__exã∫_Æways_ölöe
 
size_t


505 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

506 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

508 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

510 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

511  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

513 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

514  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

517 
	}
}

520 #ifde‡
__USE_GNU


521 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

522 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

523 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

524 
size_t
 
__d°Àn
Ë
__THROW
;

525 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

526 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

527 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

528 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

529 
mb¢πowcs
);

530 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

531 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

532 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

533 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

534 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

535 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

538 
__exã∫_Æways_ölöe
 
size_t


539 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

540 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

542 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

544 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

545  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

546 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

548 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

549  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

553 
	}
}

556 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

557 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

558 
size_t
 
__nwc
, size_à
__Àn
,

559 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

560 
__THROW
;

561 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

562 (*
__ª°ri˘
 
__d°
,

563 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

564 
size_t
 
__nwc
, size_à
__Àn
,

565 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

566 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

567 (*
__ª°ri˘
 
__d°
,

568 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

569 
size_t
 
__nwc
, size_à
__Àn
,

570 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

571 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

572 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

574 
__exã∫_Æways_ölöe
 
size_t


575 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

576 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

578 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

580 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

581  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

582 
	`__bos
 (
__d°
));

584 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

585  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

589 
	}
}

	@/usr/include/gnu/option-groups.h

10 #i‚de‡
__GNU_OPTION_GROUPS_H


11 
	#__GNU_OPTION_GROUPS_H


	)

13 
	#__OPTION_EGLIBC_ADVANCED_INET6
 1

	)

14 
	#__OPTION_EGLIBC_BACKTRACE
 1

	)

15 
	#__OPTION_EGLIBC_BIG_MACROS
 1

	)

16 
	#__OPTION_EGLIBC_BSD
 1

	)

17 
	#__OPTION_EGLIBC_CATGETS
 1

	)

18 
	#__OPTION_EGLIBC_CHARSETS
 1

	)

19 
	#__OPTION_EGLIBC_CXX_TESTS
 1

	)

20 
	#__OPTION_EGLIBC_DB_ALIASES
 1

	)

21 
	#__OPTION_EGLIBC_ENVZ
 1

	)

22 
	#__OPTION_EGLIBC_FCVT
 1

	)

23 
	#__OPTION_EGLIBC_FMTMSG
 1

	)

24 
	#__OPTION_EGLIBC_FSTAB
 1

	)

25 
	#__OPTION_EGLIBC_FTRAVERSE
 1

	)

26 
	#__OPTION_EGLIBC_GETLOGIN
 1

	)

27 
	#__OPTION_EGLIBC_INET
 1

	)

28 
	#__OPTION_EGLIBC_LIBM
 1

	)

29 
	#__OPTION_EGLIBC_LOCALES
 1

	)

30 
	#__OPTION_EGLIBC_LOCALE_CODE
 1

	)

31 
	#__OPTION_EGLIBC_MEMUSAGE
 1

	)

32 
	#__OPTION_EGLIBC_NIS
 1

	)

33 
	#__OPTION_EGLIBC_NSSWITCH
 1

	)

34 
	#__OPTION_EGLIBC_RCMD
 1

	)

35 
	#__OPTION_EGLIBC_SPAWN
 1

	)

36 
	#__OPTION_EGLIBC_STREAMS
 1

	)

37 
	#__OPTION_EGLIBC_SUNRPC
 1

	)

38 
	#__OPTION_EGLIBC_UTMP
 1

	)

39 
	#__OPTION_EGLIBC_UTMPX
 1

	)

40 
	#__OPTION_EGLIBC_WORDEXP
 1

	)

41 
	#__OPTION_POSIX_C_LANG_WIDE_CHAR
 1

	)

42 
	#__OPTION_POSIX_REGEXP
 1

	)

43 
	#__OPTION_POSIX_REGEXP_GLIBC
 1

	)

44 
	#__OPTION_POSIX_WIDE_CHAR_DEVICE_IO
 1

	)

	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<°ddef.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@
1
.
1
/usr/include
162
3728
IOtimer.c
IOtimer.h
bench-framework.c
bench-framework.h
bench-framework_file.c
benchstringio.c
benchstringio.h
binarytrees.cc
cli.c
deltablue.c
fannkuchredux.c
fasta.c
fasta_10k_ref_output.c
fasta_file.c
fasta_nvram.c
fft.c
gtthread.h
hash_map.cc
hash_map.h
hello_world.cc
knucleotide.c
knucleotide_file.c
list.h
mmap_read_multi_page_test.c
nbody.c
nv_def.h
nv_map.c
nv_map.h
nvmalloc_wrap.c
nvmalloc_wrap.h
oswego_malloc.c
oswego_malloc.h
pepper.c
pidigits.c
procstat.c
procstat.h
revcomp.c
revcomp_file.c
revcomp_nvram.c
richards.c
simple_hash3.h
spectralnorm.c
test.c
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/fftw3.h
/usr/include/inttypes.h
/usr/include/limits.h
/usr/include/linux/limits.h
/usr/include/linux/unistd.h
/usr/include/malloc.h
/usr/include/math.h
/usr/include/proc/readproc.h
/usr/include/pthread.h
/usr/include/sched.h
/usr/include/setjmp.h
/usr/include/signal.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/strings.h
/usr/include/sys/mman.h
/usr/include/sys/param.h
/usr/include/sys/stat.h
/usr/include/sys/time.h
/usr/include/sys/times.h
/usr/include/sys/types.h
/usr/include/sys/wait.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/asm/unistd.h
/usr/include/bits/confname.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/huge_val.h
/usr/include/bits/huge_valf.h
/usr/include/bits/huge_vall.h
/usr/include/bits/inf.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathdef.h
/usr/include/bits/mathinline.h
/usr/include/bits/mman.h
/usr/include/bits/nan.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/sched.h
/usr/include/bits/setjmp.h
/usr/include/bits/setjmp2.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/dirent.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/linux/param.h
/usr/include/sys/resource.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ucontext.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm/param.h
/usr/include/bits/byteswap.h
/usr/include/bits/dirent.h
/usr/include/bits/endian.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/local_lim.h
/usr/include/bits/predefs.h
/usr/include/bits/resource.h
/usr/include/bits/select.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/sys/cdefs.h
/usr/include/asm-generic/param.h
/usr/include/asm/errno.h
/usr/include/bits/libc-lock.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/wchar.h
/usr/include/asm-generic/errno.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/gnu/option-groups.h
/usr/include/wctype.h
/usr/include/asm-generic/errno-base.h
